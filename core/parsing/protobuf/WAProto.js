'use strict'; // code generated by pbf v3.2.1

var MediaVisibility = self.MediaVisibility = {
    "DEFAULT": {
        "value": 0,
        "options": {}
    },
    "OFF": {
        "value": 1,
        "options": {}
    },
    "ON": {
        "value": 2,
        "options": {}
    }
};

// AppVersion ========================================

var AppVersion = self.AppVersion = {};

AppVersion.read = function (pbf, end) {
    return pbf.readFields(AppVersion._readField, {primary: 0, secondary: 0, tertiary: 0, quaternary: 0, quinary: 0}, end);
};
AppVersion._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.primary = pbf.readVarint();
    else if (tag === 2) obj.secondary = pbf.readVarint();
    else if (tag === 3) obj.tertiary = pbf.readVarint();
    else if (tag === 4) obj.quaternary = pbf.readVarint();
    else if (tag === 5) obj.quinary = pbf.readVarint();
};
AppVersion.write = function (obj, pbf) {
    if (obj.primary) pbf.writeVarintField(1, obj.primary);
    if (obj.secondary) pbf.writeVarintField(2, obj.secondary);
    if (obj.tertiary) pbf.writeVarintField(3, obj.tertiary);
    if (obj.quaternary) pbf.writeVarintField(4, obj.quaternary);
    if (obj.quinary) pbf.writeVarintField(5, obj.quinary);
};

// UserAgent ========================================

var UserAgent = self.UserAgent = {};

UserAgent.read = function (pbf, end) {
    return pbf.readFields(UserAgent._readField, {platform: 0, appVersion: null, mcc: "", mnc: "", osVersion: "", manufacturer: "", device: "", osBuildNumber: "", phoneId: "", releaseChannel: 0, localeLanguageIso6391: "", localeCountryIso31661Alpha2: "", deviceBoard: ""}, end);
};
UserAgent._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.platform = pbf.readVarint();
    else if (tag === 2) obj.appVersion = AppVersion.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.mcc = pbf.readString();
    else if (tag === 4) obj.mnc = pbf.readString();
    else if (tag === 5) obj.osVersion = pbf.readString();
    else if (tag === 6) obj.manufacturer = pbf.readString();
    else if (tag === 7) obj.device = pbf.readString();
    else if (tag === 8) obj.osBuildNumber = pbf.readString();
    else if (tag === 9) obj.phoneId = pbf.readString();
    else if (tag === 10) obj.releaseChannel = pbf.readVarint();
    else if (tag === 11) obj.localeLanguageIso6391 = pbf.readString();
    else if (tag === 12) obj.localeCountryIso31661Alpha2 = pbf.readString();
    else if (tag === 13) obj.deviceBoard = pbf.readString();
};
UserAgent.write = function (obj, pbf) {
    if (obj.platform) pbf.writeVarintField(1, obj.platform);
    if (obj.appVersion) pbf.writeMessage(2, AppVersion.write, obj.appVersion);
    if (obj.mcc) pbf.writeStringField(3, obj.mcc);
    if (obj.mnc) pbf.writeStringField(4, obj.mnc);
    if (obj.osVersion) pbf.writeStringField(5, obj.osVersion);
    if (obj.manufacturer) pbf.writeStringField(6, obj.manufacturer);
    if (obj.device) pbf.writeStringField(7, obj.device);
    if (obj.osBuildNumber) pbf.writeStringField(8, obj.osBuildNumber);
    if (obj.phoneId) pbf.writeStringField(9, obj.phoneId);
    if (obj.releaseChannel) pbf.writeVarintField(10, obj.releaseChannel);
    if (obj.localeLanguageIso6391) pbf.writeStringField(11, obj.localeLanguageIso6391);
    if (obj.localeCountryIso31661Alpha2) pbf.writeStringField(12, obj.localeCountryIso31661Alpha2);
    if (obj.deviceBoard) pbf.writeStringField(13, obj.deviceBoard);
};

UserAgent.UserAgentPlatform = {
    "ANDROID": {
        "value": 0,
        "options": {}
    },
    "IOS": {
        "value": 1,
        "options": {}
    },
    "WINDOWS_PHONE": {
        "value": 2,
        "options": {}
    },
    "BLACKBERRY": {
        "value": 3,
        "options": {}
    },
    "BLACKBERRYX": {
        "value": 4,
        "options": {}
    },
    "S40": {
        "value": 5,
        "options": {}
    },
    "S60": {
        "value": 6,
        "options": {}
    },
    "PYTHON_CLIENT": {
        "value": 7,
        "options": {}
    },
    "TIZEN": {
        "value": 8,
        "options": {}
    },
    "ENTERPRISE": {
        "value": 9,
        "options": {}
    },
    "SMB_ANDROID": {
        "value": 10,
        "options": {}
    },
    "KAIOS": {
        "value": 11,
        "options": {}
    },
    "SMB_IOS": {
        "value": 12,
        "options": {}
    },
    "WINDOWS": {
        "value": 13,
        "options": {}
    },
    "WEB": {
        "value": 14,
        "options": {}
    },
    "PORTAL": {
        "value": 15,
        "options": {}
    },
    "GREEN_ANDROID": {
        "value": 16,
        "options": {}
    },
    "GREEN_IPHONE": {
        "value": 17,
        "options": {}
    },
    "BLUE_ANDROID": {
        "value": 18,
        "options": {}
    },
    "BLUE_IPHONE": {
        "value": 19,
        "options": {}
    },
    "FBLITE_ANDROID": {
        "value": 20,
        "options": {}
    },
    "MLITE_ANDROID": {
        "value": 21,
        "options": {}
    },
    "IGLITE_ANDROID": {
        "value": 22,
        "options": {}
    },
    "PAGE": {
        "value": 23,
        "options": {}
    },
    "MACOS": {
        "value": 24,
        "options": {}
    },
    "OCULUS_MSG": {
        "value": 25,
        "options": {}
    },
    "OCULUS_CALL": {
        "value": 26,
        "options": {}
    },
    "MILAN": {
        "value": 27,
        "options": {}
    },
    "CAPI": {
        "value": 28,
        "options": {}
    }
};

UserAgent.UserAgentReleaseChannel = {
    "RELEASE": {
        "value": 0,
        "options": {}
    },
    "BETA": {
        "value": 1,
        "options": {}
    },
    "ALPHA": {
        "value": 2,
        "options": {}
    },
    "DEBUG": {
        "value": 3,
        "options": {}
    }
};

// WebdPayload ========================================

var WebdPayload = self.WebdPayload = {};

WebdPayload.read = function (pbf, end) {
    return pbf.readFields(WebdPayload._readField, {usesParticipantInKey: false, supportsStarredMessages: false, supportsDocumentMessages: false, supportsUrlMessages: false, supportsMediaRetry: false, supportsE2EImage: false, supportsE2EVideo: false, supportsE2EAudio: false, supportsE2EDocument: false, documentTypes: "", features: null}, end);
};
WebdPayload._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.usesParticipantInKey = pbf.readBoolean();
    else if (tag === 2) obj.supportsStarredMessages = pbf.readBoolean();
    else if (tag === 3) obj.supportsDocumentMessages = pbf.readBoolean();
    else if (tag === 4) obj.supportsUrlMessages = pbf.readBoolean();
    else if (tag === 5) obj.supportsMediaRetry = pbf.readBoolean();
    else if (tag === 6) obj.supportsE2EImage = pbf.readBoolean();
    else if (tag === 7) obj.supportsE2EVideo = pbf.readBoolean();
    else if (tag === 8) obj.supportsE2EAudio = pbf.readBoolean();
    else if (tag === 9) obj.supportsE2EDocument = pbf.readBoolean();
    else if (tag === 10) obj.documentTypes = pbf.readString();
    else if (tag === 11) obj.features = pbf.readBytes();
};
WebdPayload.write = function (obj, pbf) {
    if (obj.usesParticipantInKey) pbf.writeBooleanField(1, obj.usesParticipantInKey);
    if (obj.supportsStarredMessages) pbf.writeBooleanField(2, obj.supportsStarredMessages);
    if (obj.supportsDocumentMessages) pbf.writeBooleanField(3, obj.supportsDocumentMessages);
    if (obj.supportsUrlMessages) pbf.writeBooleanField(4, obj.supportsUrlMessages);
    if (obj.supportsMediaRetry) pbf.writeBooleanField(5, obj.supportsMediaRetry);
    if (obj.supportsE2EImage) pbf.writeBooleanField(6, obj.supportsE2EImage);
    if (obj.supportsE2EVideo) pbf.writeBooleanField(7, obj.supportsE2EVideo);
    if (obj.supportsE2EAudio) pbf.writeBooleanField(8, obj.supportsE2EAudio);
    if (obj.supportsE2EDocument) pbf.writeBooleanField(9, obj.supportsE2EDocument);
    if (obj.documentTypes) pbf.writeStringField(10, obj.documentTypes);
    if (obj.features) pbf.writeBytesField(11, obj.features);
};

// WebInfo ========================================

var WebInfo = self.WebInfo = {};

WebInfo.read = function (pbf, end) {
    return pbf.readFields(WebInfo._readField, {refToken: "", version: "", webdPayload: null, webSubPlatform: 0}, end);
};
WebInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.refToken = pbf.readString();
    else if (tag === 2) obj.version = pbf.readString();
    else if (tag === 3) obj.webdPayload = WebdPayload.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.webSubPlatform = pbf.readVarint();
};
WebInfo.write = function (obj, pbf) {
    if (obj.refToken) pbf.writeStringField(1, obj.refToken);
    if (obj.version) pbf.writeStringField(2, obj.version);
    if (obj.webdPayload) pbf.writeMessage(3, WebdPayload.write, obj.webdPayload);
    if (obj.webSubPlatform) pbf.writeVarintField(4, obj.webSubPlatform);
};

WebInfo.WebInfoWebSubPlatform = {
    "WEB_BROWSER": {
        "value": 0,
        "options": {}
    },
    "APP_STORE": {
        "value": 1,
        "options": {}
    },
    "WIN_STORE": {
        "value": 2,
        "options": {}
    },
    "DARWIN": {
        "value": 3,
        "options": {}
    },
    "WIN32": {
        "value": 4,
        "options": {}
    }
};

// DNSSource ========================================

var DNSSource = self.DNSSource = {};

DNSSource.read = function (pbf, end) {
    return pbf.readFields(DNSSource._readField, {dnsMethod: 0, appCached: false}, end);
};
DNSSource._readField = function (tag, obj, pbf) {
    if (tag === 15) obj.dnsMethod = pbf.readVarint();
    else if (tag === 16) obj.appCached = pbf.readBoolean();
};
DNSSource.write = function (obj, pbf) {
    if (obj.dnsMethod) pbf.writeVarintField(15, obj.dnsMethod);
    if (obj.appCached) pbf.writeBooleanField(16, obj.appCached);
};

DNSSource.DNSSourceDNSResolutionMethod = {
    "SYSTEM": {
        "value": 0,
        "options": {}
    },
    "GOOGLE": {
        "value": 1,
        "options": {}
    },
    "HARDCODED": {
        "value": 2,
        "options": {}
    },
    "OVERRIDE": {
        "value": 3,
        "options": {}
    },
    "FALLBACK": {
        "value": 4,
        "options": {}
    }
};

// CompanionRegData ========================================

var CompanionRegData = self.CompanionRegData = {};

CompanionRegData.read = function (pbf, end) {
    return pbf.readFields(CompanionRegData._readField, {eRegid: null, eKeytype: null, eIdent: null, eSkeyId: null, eSkeyVal: null, eSkeySig: null, buildHash: null, companionProps: null}, end);
};
CompanionRegData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.eRegid = pbf.readBytes();
    else if (tag === 2) obj.eKeytype = pbf.readBytes();
    else if (tag === 3) obj.eIdent = pbf.readBytes();
    else if (tag === 4) obj.eSkeyId = pbf.readBytes();
    else if (tag === 5) obj.eSkeyVal = pbf.readBytes();
    else if (tag === 6) obj.eSkeySig = pbf.readBytes();
    else if (tag === 7) obj.buildHash = pbf.readBytes();
    else if (tag === 8) obj.companionProps = pbf.readBytes();
};
CompanionRegData.write = function (obj, pbf) {
    if (obj.eRegid) pbf.writeBytesField(1, obj.eRegid);
    if (obj.eKeytype) pbf.writeBytesField(2, obj.eKeytype);
    if (obj.eIdent) pbf.writeBytesField(3, obj.eIdent);
    if (obj.eSkeyId) pbf.writeBytesField(4, obj.eSkeyId);
    if (obj.eSkeyVal) pbf.writeBytesField(5, obj.eSkeyVal);
    if (obj.eSkeySig) pbf.writeBytesField(6, obj.eSkeySig);
    if (obj.buildHash) pbf.writeBytesField(7, obj.buildHash);
    if (obj.companionProps) pbf.writeBytesField(8, obj.companionProps);
};

// ClientPayload ========================================

var ClientPayload = self.ClientPayload = {};

ClientPayload.read = function (pbf, end) {
    return pbf.readFields(ClientPayload._readField, {username: 0, passive: false, userAgent: null, webInfo: null, pushName: "", sessionId: 0, shortConnect: false, connectType: 0, connectReason: 0, shards: [], dnsSource: null, connectAttemptCount: 0, device: 0, regData: null, product: 0, fbCat: null, fbUserAgent: null, oc: false, lc: 0, iosAppExtension: 0, fbAppId: 0, fbDeviceId: null}, end);
};
ClientPayload._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.username = pbf.readVarint();
    else if (tag === 3) obj.passive = pbf.readBoolean();
    else if (tag === 5) obj.userAgent = UserAgent.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 6) obj.webInfo = WebInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.pushName = pbf.readString();
    else if (tag === 9) obj.sessionId = pbf.readSFixed32();
    else if (tag === 10) obj.shortConnect = pbf.readBoolean();
    else if (tag === 12) obj.connectType = pbf.readVarint();
    else if (tag === 13) obj.connectReason = pbf.readVarint();
    else if (tag === 14) pbf.readPackedVarint(obj.shards, true);
    else if (tag === 15) obj.dnsSource = DNSSource.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 16) obj.connectAttemptCount = pbf.readVarint();
    else if (tag === 18) obj.device = pbf.readVarint();
    else if (tag === 19) obj.regData = CompanionRegData.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 20) obj.product = pbf.readVarint();
    else if (tag === 21) obj.fbCat = pbf.readBytes();
    else if (tag === 22) obj.fbUserAgent = pbf.readBytes();
    else if (tag === 23) obj.oc = pbf.readBoolean();
    else if (tag === 24) obj.lc = pbf.readVarint(true);
    else if (tag === 30) obj.iosAppExtension = pbf.readVarint();
    else if (tag === 31) obj.fbAppId = pbf.readVarint();
    else if (tag === 32) obj.fbDeviceId = pbf.readBytes();
};
ClientPayload.write = function (obj, pbf) {
    if (obj.username) pbf.writeVarintField(1, obj.username);
    if (obj.passive) pbf.writeBooleanField(3, obj.passive);
    if (obj.userAgent) pbf.writeMessage(5, UserAgent.write, obj.userAgent);
    if (obj.webInfo) pbf.writeMessage(6, WebInfo.write, obj.webInfo);
    if (obj.pushName) pbf.writeStringField(7, obj.pushName);
    if (obj.sessionId) pbf.writeSFixed32Field(9, obj.sessionId);
    if (obj.shortConnect) pbf.writeBooleanField(10, obj.shortConnect);
    if (obj.connectType) pbf.writeVarintField(12, obj.connectType);
    if (obj.connectReason) pbf.writeVarintField(13, obj.connectReason);
    if (obj.shards) for (var i = 0; i < obj.shards.length; i++) pbf.writeVarintField(14, obj.shards[i]);
    if (obj.dnsSource) pbf.writeMessage(15, DNSSource.write, obj.dnsSource);
    if (obj.connectAttemptCount) pbf.writeVarintField(16, obj.connectAttemptCount);
    if (obj.device) pbf.writeVarintField(18, obj.device);
    if (obj.regData) pbf.writeMessage(19, CompanionRegData.write, obj.regData);
    if (obj.product) pbf.writeVarintField(20, obj.product);
    if (obj.fbCat) pbf.writeBytesField(21, obj.fbCat);
    if (obj.fbUserAgent) pbf.writeBytesField(22, obj.fbUserAgent);
    if (obj.oc) pbf.writeBooleanField(23, obj.oc);
    if (obj.lc) pbf.writeVarintField(24, obj.lc);
    if (obj.iosAppExtension) pbf.writeVarintField(30, obj.iosAppExtension);
    if (obj.fbAppId) pbf.writeVarintField(31, obj.fbAppId);
    if (obj.fbDeviceId) pbf.writeBytesField(32, obj.fbDeviceId);
};

ClientPayload.ClientPayloadConnectType = {
    "CELLULAR_UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "WIFI_UNKNOWN": {
        "value": 1,
        "options": {}
    },
    "CELLULAR_EDGE": {
        "value": 100,
        "options": {}
    },
    "CELLULAR_IDEN": {
        "value": 101,
        "options": {}
    },
    "CELLULAR_UMTS": {
        "value": 102,
        "options": {}
    },
    "CELLULAR_EVDO": {
        "value": 103,
        "options": {}
    },
    "CELLULAR_GPRS": {
        "value": 104,
        "options": {}
    },
    "CELLULAR_HSDPA": {
        "value": 105,
        "options": {}
    },
    "CELLULAR_HSUPA": {
        "value": 106,
        "options": {}
    },
    "CELLULAR_HSPA": {
        "value": 107,
        "options": {}
    },
    "CELLULAR_CDMA": {
        "value": 108,
        "options": {}
    },
    "CELLULAR_1XRTT": {
        "value": 109,
        "options": {}
    },
    "CELLULAR_EHRPD": {
        "value": 110,
        "options": {}
    },
    "CELLULAR_LTE": {
        "value": 111,
        "options": {}
    },
    "CELLULAR_HSPAP": {
        "value": 112,
        "options": {}
    }
};

ClientPayload.ClientPayloadConnectReason = {
    "PUSH": {
        "value": 0,
        "options": {}
    },
    "USER_ACTIVATED": {
        "value": 1,
        "options": {}
    },
    "SCHEDULED": {
        "value": 2,
        "options": {}
    },
    "ERROR_RECONNECT": {
        "value": 3,
        "options": {}
    },
    "NETWORK_SWITCH": {
        "value": 4,
        "options": {}
    },
    "PING_RECONNECT": {
        "value": 5,
        "options": {}
    }
};

ClientPayload.ClientPayloadProduct = {
    "WHATSAPP": {
        "value": 0,
        "options": {}
    },
    "MESSENGER": {
        "value": 1,
        "options": {}
    }
};

ClientPayload.ClientPayloadIOSAppExtension = {
    "SHARE_EXTENSION": {
        "value": 0,
        "options": {}
    },
    "SERVICE_EXTENSION": {
        "value": 1,
        "options": {}
    },
    "INTENTS_EXTENSION": {
        "value": 2,
        "options": {}
    }
};

// NoiseCertificateDetails ========================================

var NoiseCertificateDetails = self.NoiseCertificateDetails = {};

NoiseCertificateDetails.read = function (pbf, end) {
    return pbf.readFields(NoiseCertificateDetails._readField, {serial: 0, issuer: "", expires: 0, subject: "", key: null}, end);
};
NoiseCertificateDetails._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.serial = pbf.readVarint();
    else if (tag === 2) obj.issuer = pbf.readString();
    else if (tag === 3) obj.expires = pbf.readVarint();
    else if (tag === 4) obj.subject = pbf.readString();
    else if (tag === 5) obj.key = pbf.readBytes();
};
NoiseCertificateDetails.write = function (obj, pbf) {
    if (obj.serial) pbf.writeVarintField(1, obj.serial);
    if (obj.issuer) pbf.writeStringField(2, obj.issuer);
    if (obj.expires) pbf.writeVarintField(3, obj.expires);
    if (obj.subject) pbf.writeStringField(4, obj.subject);
    if (obj.key) pbf.writeBytesField(5, obj.key);
};

// NoiseCertificate ========================================

var NoiseCertificate = self.NoiseCertificate = {};

NoiseCertificate.read = function (pbf, end) {
    return pbf.readFields(NoiseCertificate._readField, {details: null, signature: null}, end);
};
NoiseCertificate._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.details = pbf.readBytes();
    else if (tag === 2) obj.signature = pbf.readBytes();
};
NoiseCertificate.write = function (obj, pbf) {
    if (obj.details) pbf.writeBytesField(1, obj.details);
    if (obj.signature) pbf.writeBytesField(2, obj.signature);
};

// ClientHello ========================================

var ClientHello = self.ClientHello = {};

ClientHello.read = function (pbf, end) {
    return pbf.readFields(ClientHello._readField, {ephemeral: null, static: null, payload: null}, end);
};
ClientHello._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.ephemeral = pbf.readBytes();
    else if (tag === 2) obj.static = pbf.readBytes();
    else if (tag === 3) obj.payload = pbf.readBytes();
};
ClientHello.write = function (obj, pbf) {
    if (obj.ephemeral) pbf.writeBytesField(1, obj.ephemeral);
    if (obj.static) pbf.writeBytesField(2, obj.static);
    if (obj.payload) pbf.writeBytesField(3, obj.payload);
};

// ServerHello ========================================

var ServerHello = self.ServerHello = {};

ServerHello.read = function (pbf, end) {
    return pbf.readFields(ServerHello._readField, {ephemeral: null, static: null, payload: null}, end);
};
ServerHello._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.ephemeral = pbf.readBytes();
    else if (tag === 2) obj.static = pbf.readBytes();
    else if (tag === 3) obj.payload = pbf.readBytes();
};
ServerHello.write = function (obj, pbf) {
    if (obj.ephemeral) pbf.writeBytesField(1, obj.ephemeral);
    if (obj.static) pbf.writeBytesField(2, obj.static);
    if (obj.payload) pbf.writeBytesField(3, obj.payload);
};

// ClientFinish ========================================

var ClientFinish = self.ClientFinish = {};

ClientFinish.read = function (pbf, end) {
    return pbf.readFields(ClientFinish._readField, {static: null, payload: null}, end);
};
ClientFinish._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.static = pbf.readBytes();
    else if (tag === 2) obj.payload = pbf.readBytes();
};
ClientFinish.write = function (obj, pbf) {
    if (obj.static) pbf.writeBytesField(1, obj.static);
    if (obj.payload) pbf.writeBytesField(2, obj.payload);
};

// HandshakeMessage ========================================

var HandshakeMessage = self.HandshakeMessage = {};

HandshakeMessage.read = function (pbf, end) {
    return pbf.readFields(HandshakeMessage._readField, {clientHello: null, serverHello: null, clientFinish: null}, end);
};
HandshakeMessage._readField = function (tag, obj, pbf) {
    if (tag === 2) obj.clientHello = ClientHello.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.serverHello = ServerHello.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.clientFinish = ClientFinish.read(pbf, pbf.readVarint() + pbf.pos);
};
HandshakeMessage.write = function (obj, pbf) {
    if (obj.clientHello) pbf.writeMessage(2, ClientHello.write, obj.clientHello);
    if (obj.serverHello) pbf.writeMessage(3, ServerHello.write, obj.serverHello);
    if (obj.clientFinish) pbf.writeMessage(4, ClientFinish.write, obj.clientFinish);
};

// BizIdentityInfo ========================================

var BizIdentityInfo = self.BizIdentityInfo = {};

BizIdentityInfo.read = function (pbf, end) {
    return pbf.readFields(BizIdentityInfo._readField, {vlevel: 0, vnameCert: null, signed: false, revoked: false, hostStorage: 0, actualActors: 0, privacyModeTs: 0, featureControls: 0}, end);
};
BizIdentityInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.vlevel = pbf.readVarint();
    else if (tag === 2) obj.vnameCert = VerifiedNameCertificate.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.signed = pbf.readBoolean();
    else if (tag === 4) obj.revoked = pbf.readBoolean();
    else if (tag === 5) obj.hostStorage = pbf.readVarint();
    else if (tag === 6) obj.actualActors = pbf.readVarint();
    else if (tag === 7) obj.privacyModeTs = pbf.readVarint();
    else if (tag === 8) obj.featureControls = pbf.readVarint();
};
BizIdentityInfo.write = function (obj, pbf) {
    if (obj.vlevel) pbf.writeVarintField(1, obj.vlevel);
    if (obj.vnameCert) pbf.writeMessage(2, VerifiedNameCertificate.write, obj.vnameCert);
    if (obj.signed) pbf.writeBooleanField(3, obj.signed);
    if (obj.revoked) pbf.writeBooleanField(4, obj.revoked);
    if (obj.hostStorage) pbf.writeVarintField(5, obj.hostStorage);
    if (obj.actualActors) pbf.writeVarintField(6, obj.actualActors);
    if (obj.privacyModeTs) pbf.writeVarintField(7, obj.privacyModeTs);
    if (obj.featureControls) pbf.writeVarintField(8, obj.featureControls);
};

BizIdentityInfo.BizIdentityInfoVerifiedLevelValue = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "LOW": {
        "value": 1,
        "options": {}
    },
    "HIGH": {
        "value": 2,
        "options": {}
    }
};

BizIdentityInfo.BizIdentityInfoHostStorageType = {
    "ON_PREMISE": {
        "value": 0,
        "options": {}
    },
    "FACEBOOK": {
        "value": 1,
        "options": {}
    }
};

BizIdentityInfo.BizIdentityInfoActualActorsType = {
    "SELF": {
        "value": 0,
        "options": {}
    },
    "BSP": {
        "value": 1,
        "options": {}
    }
};

// BizAccountLinkInfo ========================================

var BizAccountLinkInfo = self.BizAccountLinkInfo = {};

BizAccountLinkInfo.read = function (pbf, end) {
    return pbf.readFields(BizAccountLinkInfo._readField, {whatsappBizAcctFbid: 0, whatsappAcctNumber: "", issueTime: 0, hostStorage: 0, accountType: 0}, end);
};
BizAccountLinkInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.whatsappBizAcctFbid = pbf.readVarint();
    else if (tag === 2) obj.whatsappAcctNumber = pbf.readString();
    else if (tag === 3) obj.issueTime = pbf.readVarint();
    else if (tag === 4) obj.hostStorage = pbf.readVarint();
    else if (tag === 5) obj.accountType = pbf.readVarint();
};
BizAccountLinkInfo.write = function (obj, pbf) {
    if (obj.whatsappBizAcctFbid) pbf.writeVarintField(1, obj.whatsappBizAcctFbid);
    if (obj.whatsappAcctNumber) pbf.writeStringField(2, obj.whatsappAcctNumber);
    if (obj.issueTime) pbf.writeVarintField(3, obj.issueTime);
    if (obj.hostStorage) pbf.writeVarintField(4, obj.hostStorage);
    if (obj.accountType) pbf.writeVarintField(5, obj.accountType);
};

BizAccountLinkInfo.BizAccountLinkInfoHostStorageType = {
    "ON_PREMISE": {
        "value": 0,
        "options": {}
    },
    "FACEBOOK": {
        "value": 1,
        "options": {}
    }
};

BizAccountLinkInfo.BizAccountLinkInfoAccountType = {
    "ENTERPRISE": {
        "value": 0,
        "options": {}
    }
};

// BizAccountPayload ========================================

var BizAccountPayload = self.BizAccountPayload = {};

BizAccountPayload.read = function (pbf, end) {
    return pbf.readFields(BizAccountPayload._readField, {vnameCert: null, bizAcctLinkInfo: null}, end);
};
BizAccountPayload._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.vnameCert = VerifiedNameCertificate.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.bizAcctLinkInfo = pbf.readBytes();
};
BizAccountPayload.write = function (obj, pbf) {
    if (obj.vnameCert) pbf.writeMessage(1, VerifiedNameCertificate.write, obj.vnameCert);
    if (obj.bizAcctLinkInfo) pbf.writeBytesField(2, obj.bizAcctLinkInfo);
};

// VerifiedNameDetails ========================================

var VerifiedNameDetails = self.VerifiedNameDetails = {};

VerifiedNameDetails.read = function (pbf, end) {
    return pbf.readFields(VerifiedNameDetails._readField, {serial: 0, issuer: "", verifiedName: "", localizedNames: [], issueTime: 0}, end);
};
VerifiedNameDetails._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.serial = pbf.readVarint();
    else if (tag === 2) obj.issuer = pbf.readString();
    else if (tag === 4) obj.verifiedName = pbf.readString();
    else if (tag === 8) obj.localizedNames.push(LocalizedName.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 10) obj.issueTime = pbf.readVarint();
};
VerifiedNameDetails.write = function (obj, pbf) {
    if (obj.serial) pbf.writeVarintField(1, obj.serial);
    if (obj.issuer) pbf.writeStringField(2, obj.issuer);
    if (obj.verifiedName) pbf.writeStringField(4, obj.verifiedName);
    if (obj.localizedNames) for (var i = 0; i < obj.localizedNames.length; i++) pbf.writeMessage(8, LocalizedName.write, obj.localizedNames[i]);
    if (obj.issueTime) pbf.writeVarintField(10, obj.issueTime);
};

// VerifiedNameCertificate ========================================

var VerifiedNameCertificate = self.VerifiedNameCertificate = {};

VerifiedNameCertificate.read = function (pbf, end) {
    return pbf.readFields(VerifiedNameCertificate._readField, {details: null, signature: null, serverSignature: null}, end);
};
VerifiedNameCertificate._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.details = pbf.readBytes();
    else if (tag === 2) obj.signature = pbf.readBytes();
    else if (tag === 3) obj.serverSignature = pbf.readBytes();
};
VerifiedNameCertificate.write = function (obj, pbf) {
    if (obj.details) pbf.writeBytesField(1, obj.details);
    if (obj.signature) pbf.writeBytesField(2, obj.signature);
    if (obj.serverSignature) pbf.writeBytesField(3, obj.serverSignature);
};

// LocalizedName ========================================

var LocalizedName = self.LocalizedName = {};

LocalizedName.read = function (pbf, end) {
    return pbf.readFields(LocalizedName._readField, {lg: "", lc: "", verifiedName: ""}, end);
};
LocalizedName._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.lg = pbf.readString();
    else if (tag === 2) obj.lc = pbf.readString();
    else if (tag === 3) obj.verifiedName = pbf.readString();
};
LocalizedName.write = function (obj, pbf) {
    if (obj.lg) pbf.writeStringField(1, obj.lg);
    if (obj.lc) pbf.writeStringField(2, obj.lc);
    if (obj.verifiedName) pbf.writeStringField(3, obj.verifiedName);
};

// SyncActionData ========================================

var SyncActionData = self.SyncActionData = {};

SyncActionData.read = function (pbf, end) {
    return pbf.readFields(SyncActionData._readField, {index: null, value: null, padding: null, version: 0}, end);
};
SyncActionData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.index = pbf.readBytes();
    else if (tag === 2) obj.value = SyncActionValue.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.padding = pbf.readBytes();
    else if (tag === 4) obj.version = pbf.readVarint(true);
};
SyncActionData.write = function (obj, pbf) {
    if (obj.index) pbf.writeBytesField(1, obj.index);
    if (obj.value) pbf.writeMessage(2, SyncActionValue.write, obj.value);
    if (obj.padding) pbf.writeBytesField(3, obj.padding);
    if (obj.version) pbf.writeVarintField(4, obj.version);
};

// StarAction ========================================

var StarAction = self.StarAction = {};

StarAction.read = function (pbf, end) {
    return pbf.readFields(StarAction._readField, {starred: false}, end);
};
StarAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.starred = pbf.readBoolean();
};
StarAction.write = function (obj, pbf) {
    if (obj.starred) pbf.writeBooleanField(1, obj.starred);
};

// ContactAction ========================================

var ContactAction = self.ContactAction = {};

ContactAction.read = function (pbf, end) {
    return pbf.readFields(ContactAction._readField, {fullName: "", firstName: ""}, end);
};
ContactAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.fullName = pbf.readString();
    else if (tag === 2) obj.firstName = pbf.readString();
};
ContactAction.write = function (obj, pbf) {
    if (obj.fullName) pbf.writeStringField(1, obj.fullName);
    if (obj.firstName) pbf.writeStringField(2, obj.firstName);
};

// MuteAction ========================================

var MuteAction = self.MuteAction = {};

MuteAction.read = function (pbf, end) {
    return pbf.readFields(MuteAction._readField, {muted: false, muteEndTimestamp: 0}, end);
};
MuteAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.muted = pbf.readBoolean();
    else if (tag === 2) obj.muteEndTimestamp = pbf.readVarint(true);
};
MuteAction.write = function (obj, pbf) {
    if (obj.muted) pbf.writeBooleanField(1, obj.muted);
    if (obj.muteEndTimestamp) pbf.writeVarintField(2, obj.muteEndTimestamp);
};

// PinAction ========================================

var PinAction = self.PinAction = {};

PinAction.read = function (pbf, end) {
    return pbf.readFields(PinAction._readField, {pinned: false}, end);
};
PinAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.pinned = pbf.readBoolean();
};
PinAction.write = function (obj, pbf) {
    if (obj.pinned) pbf.writeBooleanField(1, obj.pinned);
};

// SecurityNotificationSetting ========================================

var SecurityNotificationSetting = self.SecurityNotificationSetting = {};

SecurityNotificationSetting.read = function (pbf, end) {
    return pbf.readFields(SecurityNotificationSetting._readField, {showNotification: false}, end);
};
SecurityNotificationSetting._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.showNotification = pbf.readBoolean();
};
SecurityNotificationSetting.write = function (obj, pbf) {
    if (obj.showNotification) pbf.writeBooleanField(1, obj.showNotification);
};

// PushNameSetting ========================================

var PushNameSetting = self.PushNameSetting = {};

PushNameSetting.read = function (pbf, end) {
    return pbf.readFields(PushNameSetting._readField, {name: ""}, end);
};
PushNameSetting._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
};
PushNameSetting.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
};

// LocaleSetting ========================================

var LocaleSetting = self.LocaleSetting = {};

LocaleSetting.read = function (pbf, end) {
    return pbf.readFields(LocaleSetting._readField, {locale: ""}, end);
};
LocaleSetting._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.locale = pbf.readString();
};
LocaleSetting.write = function (obj, pbf) {
    if (obj.locale) pbf.writeStringField(1, obj.locale);
};

// QuickReplyAction ========================================

var QuickReplyAction = self.QuickReplyAction = {};

QuickReplyAction.read = function (pbf, end) {
    return pbf.readFields(QuickReplyAction._readField, {shortcut: "", message: "", keywords: [], count: 0, deleted: false}, end);
};
QuickReplyAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.shortcut = pbf.readString();
    else if (tag === 2) obj.message = pbf.readString();
    else if (tag === 3) obj.keywords.push(pbf.readString());
    else if (tag === 4) obj.count = pbf.readVarint(true);
    else if (tag === 5) obj.deleted = pbf.readBoolean();
};
QuickReplyAction.write = function (obj, pbf) {
    if (obj.shortcut) pbf.writeStringField(1, obj.shortcut);
    if (obj.message) pbf.writeStringField(2, obj.message);
    if (obj.keywords) for (var i = 0; i < obj.keywords.length; i++) pbf.writeStringField(3, obj.keywords[i]);
    if (obj.count) pbf.writeVarintField(4, obj.count);
    if (obj.deleted) pbf.writeBooleanField(5, obj.deleted);
};

// LabelAssociationAction ========================================

var LabelAssociationAction = self.LabelAssociationAction = {};

LabelAssociationAction.read = function (pbf, end) {
    return pbf.readFields(LabelAssociationAction._readField, {labeled: false}, end);
};
LabelAssociationAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.labeled = pbf.readBoolean();
};
LabelAssociationAction.write = function (obj, pbf) {
    if (obj.labeled) pbf.writeBooleanField(1, obj.labeled);
};

// LabelEditAction ========================================

var LabelEditAction = self.LabelEditAction = {};

LabelEditAction.read = function (pbf, end) {
    return pbf.readFields(LabelEditAction._readField, {name: "", color: 0, predefinedId: 0, deleted: false}, end);
};
LabelEditAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.color = pbf.readVarint(true);
    else if (tag === 3) obj.predefinedId = pbf.readVarint(true);
    else if (tag === 4) obj.deleted = pbf.readBoolean();
};
LabelEditAction.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.color) pbf.writeVarintField(2, obj.color);
    if (obj.predefinedId) pbf.writeVarintField(3, obj.predefinedId);
    if (obj.deleted) pbf.writeBooleanField(4, obj.deleted);
};

// RecentStickerWeightsAction ========================================

var RecentStickerWeightsAction = self.RecentStickerWeightsAction = {};

RecentStickerWeightsAction.read = function (pbf, end) {
    return pbf.readFields(RecentStickerWeightsAction._readField, {weights: []}, end);
};
RecentStickerWeightsAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.weights.push(RecentStickerWeight.read(pbf, pbf.readVarint() + pbf.pos));
};
RecentStickerWeightsAction.write = function (obj, pbf) {
    if (obj.weights) for (var i = 0; i < obj.weights.length; i++) pbf.writeMessage(1, RecentStickerWeight.write, obj.weights[i]);
};

// RecentStickerMetadata ========================================

var RecentStickerMetadata = self.RecentStickerMetadata = {};

RecentStickerMetadata.read = function (pbf, end) {
    return pbf.readFields(RecentStickerMetadata._readField, {directPath: "", encFilehash: "", mediaKey: "", stanzaId: "", chatJid: "", participant: "", isSentByMe: false}, end);
};
RecentStickerMetadata._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.directPath = pbf.readString();
    else if (tag === 2) obj.encFilehash = pbf.readString();
    else if (tag === 3) obj.mediaKey = pbf.readString();
    else if (tag === 4) obj.stanzaId = pbf.readString();
    else if (tag === 5) obj.chatJid = pbf.readString();
    else if (tag === 6) obj.participant = pbf.readString();
    else if (tag === 7) obj.isSentByMe = pbf.readBoolean();
};
RecentStickerMetadata.write = function (obj, pbf) {
    if (obj.directPath) pbf.writeStringField(1, obj.directPath);
    if (obj.encFilehash) pbf.writeStringField(2, obj.encFilehash);
    if (obj.mediaKey) pbf.writeStringField(3, obj.mediaKey);
    if (obj.stanzaId) pbf.writeStringField(4, obj.stanzaId);
    if (obj.chatJid) pbf.writeStringField(5, obj.chatJid);
    if (obj.participant) pbf.writeStringField(6, obj.participant);
    if (obj.isSentByMe) pbf.writeBooleanField(7, obj.isSentByMe);
};

// RecentEmojiWeightsAction ========================================

var RecentEmojiWeightsAction = self.RecentEmojiWeightsAction = {};

RecentEmojiWeightsAction.read = function (pbf, end) {
    return pbf.readFields(RecentEmojiWeightsAction._readField, {weights: []}, end);
};
RecentEmojiWeightsAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.weights.push(RecentEmojiWeight.read(pbf, pbf.readVarint() + pbf.pos));
};
RecentEmojiWeightsAction.write = function (obj, pbf) {
    if (obj.weights) for (var i = 0; i < obj.weights.length; i++) pbf.writeMessage(1, RecentEmojiWeight.write, obj.weights[i]);
};

// FavoriteStickerAction ========================================

var FavoriteStickerAction = self.FavoriteStickerAction = {};

FavoriteStickerAction.read = function (pbf, end) {
    return pbf.readFields(FavoriteStickerAction._readField, {directPath: "", lastUploadTimestamp: "", handle: "", encFilehash: "", stickerHashWithoutMeta: "", mediaKey: "", mediaKeyTimestamp: 0, isFavorite: false}, end);
};
FavoriteStickerAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.directPath = pbf.readString();
    else if (tag === 2) obj.lastUploadTimestamp = pbf.readString();
    else if (tag === 3) obj.handle = pbf.readString();
    else if (tag === 4) obj.encFilehash = pbf.readString();
    else if (tag === 5) obj.stickerHashWithoutMeta = pbf.readString();
    else if (tag === 6) obj.mediaKey = pbf.readString();
    else if (tag === 7) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 8) obj.isFavorite = pbf.readBoolean();
};
FavoriteStickerAction.write = function (obj, pbf) {
    if (obj.directPath) pbf.writeStringField(1, obj.directPath);
    if (obj.lastUploadTimestamp) pbf.writeStringField(2, obj.lastUploadTimestamp);
    if (obj.handle) pbf.writeStringField(3, obj.handle);
    if (obj.encFilehash) pbf.writeStringField(4, obj.encFilehash);
    if (obj.stickerHashWithoutMeta) pbf.writeStringField(5, obj.stickerHashWithoutMeta);
    if (obj.mediaKey) pbf.writeStringField(6, obj.mediaKey);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(7, obj.mediaKeyTimestamp);
    if (obj.isFavorite) pbf.writeBooleanField(8, obj.isFavorite);
};

// ArchiveChatAction ========================================

var ArchiveChatAction = self.ArchiveChatAction = {};

ArchiveChatAction.read = function (pbf, end) {
    return pbf.readFields(ArchiveChatAction._readField, {archived: false, messageRange: null}, end);
};
ArchiveChatAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.archived = pbf.readBoolean();
    else if (tag === 2) obj.messageRange = SyncActionMessageRange.read(pbf, pbf.readVarint() + pbf.pos);
};
ArchiveChatAction.write = function (obj, pbf) {
    if (obj.archived) pbf.writeBooleanField(1, obj.archived);
    if (obj.messageRange) pbf.writeMessage(2, SyncActionMessageRange.write, obj.messageRange);
};

// DeleteMessageForMeAction ========================================

var DeleteMessageForMeAction = self.DeleteMessageForMeAction = {};

DeleteMessageForMeAction.read = function (pbf, end) {
    return pbf.readFields(DeleteMessageForMeAction._readField, {deleteMedia: false, messageTimestamp: 0}, end);
};
DeleteMessageForMeAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.deleteMedia = pbf.readBoolean();
    else if (tag === 2) obj.messageTimestamp = pbf.readVarint(true);
};
DeleteMessageForMeAction.write = function (obj, pbf) {
    if (obj.deleteMedia) pbf.writeBooleanField(1, obj.deleteMedia);
    if (obj.messageTimestamp) pbf.writeVarintField(2, obj.messageTimestamp);
};

// MarkChatAsReadAction ========================================

var MarkChatAsReadAction = self.MarkChatAsReadAction = {};

MarkChatAsReadAction.read = function (pbf, end) {
    return pbf.readFields(MarkChatAsReadAction._readField, {read: false, messageRange: null}, end);
};
MarkChatAsReadAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.read = pbf.readBoolean();
    else if (tag === 2) obj.messageRange = SyncActionMessageRange.read(pbf, pbf.readVarint() + pbf.pos);
};
MarkChatAsReadAction.write = function (obj, pbf) {
    if (obj.read) pbf.writeBooleanField(1, obj.read);
    if (obj.messageRange) pbf.writeMessage(2, SyncActionMessageRange.write, obj.messageRange);
};

// ClearChatAction ========================================

var ClearChatAction = self.ClearChatAction = {};

ClearChatAction.read = function (pbf, end) {
    return pbf.readFields(ClearChatAction._readField, {messageRange: null}, end);
};
ClearChatAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.messageRange = SyncActionMessageRange.read(pbf, pbf.readVarint() + pbf.pos);
};
ClearChatAction.write = function (obj, pbf) {
    if (obj.messageRange) pbf.writeMessage(1, SyncActionMessageRange.write, obj.messageRange);
};

// DeleteChatAction ========================================

var DeleteChatAction = self.DeleteChatAction = {};

DeleteChatAction.read = function (pbf, end) {
    return pbf.readFields(DeleteChatAction._readField, {messageRange: null}, end);
};
DeleteChatAction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.messageRange = SyncActionMessageRange.read(pbf, pbf.readVarint() + pbf.pos);
};
DeleteChatAction.write = function (obj, pbf) {
    if (obj.messageRange) pbf.writeMessage(1, SyncActionMessageRange.write, obj.messageRange);
};

// UnarchiveChatsSetting ========================================

var UnarchiveChatsSetting = self.UnarchiveChatsSetting = {};

UnarchiveChatsSetting.read = function (pbf, end) {
    return pbf.readFields(UnarchiveChatsSetting._readField, {unarchiveChats: false}, end);
};
UnarchiveChatsSetting._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.unarchiveChats = pbf.readBoolean();
};
UnarchiveChatsSetting.write = function (obj, pbf) {
    if (obj.unarchiveChats) pbf.writeBooleanField(1, obj.unarchiveChats);
};

// SyncActionMessageRange ========================================

var SyncActionMessageRange = self.SyncActionMessageRange = {};

SyncActionMessageRange.read = function (pbf, end) {
    return pbf.readFields(SyncActionMessageRange._readField, {lastMessageTimestamp: 0, lastSystemMessageTimestamp: 0, messages: []}, end);
};
SyncActionMessageRange._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.lastMessageTimestamp = pbf.readVarint(true);
    else if (tag === 2) obj.lastSystemMessageTimestamp = pbf.readVarint(true);
    else if (tag === 3) obj.messages.push(SyncActionMessage.read(pbf, pbf.readVarint() + pbf.pos));
};
SyncActionMessageRange.write = function (obj, pbf) {
    if (obj.lastMessageTimestamp) pbf.writeVarintField(1, obj.lastMessageTimestamp);
    if (obj.lastSystemMessageTimestamp) pbf.writeVarintField(2, obj.lastSystemMessageTimestamp);
    if (obj.messages) for (var i = 0; i < obj.messages.length; i++) pbf.writeMessage(3, SyncActionMessage.write, obj.messages[i]);
};

// SyncActionMessage ========================================

var SyncActionMessage = self.SyncActionMessage = {};

SyncActionMessage.read = function (pbf, end) {
    return pbf.readFields(SyncActionMessage._readField, {key: null, timestamp: 0}, end);
};
SyncActionMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.timestamp = pbf.readVarint(true);
};
SyncActionMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.timestamp) pbf.writeVarintField(2, obj.timestamp);
};

// KeyExpiration ========================================

var KeyExpiration = self.KeyExpiration = {};

KeyExpiration.read = function (pbf, end) {
    return pbf.readFields(KeyExpiration._readField, {expiredKeyEpoch: 0}, end);
};
KeyExpiration._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.expiredKeyEpoch = pbf.readVarint(true);
};
KeyExpiration.write = function (obj, pbf) {
    if (obj.expiredKeyEpoch) pbf.writeVarintField(1, obj.expiredKeyEpoch);
};

// PrimaryFeature ========================================

var PrimaryFeature = self.PrimaryFeature = {};

PrimaryFeature.read = function (pbf, end) {
    return pbf.readFields(PrimaryFeature._readField, {flags: []}, end);
};
PrimaryFeature._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.flags.push(pbf.readString());
};
PrimaryFeature.write = function (obj, pbf) {
    if (obj.flags) for (var i = 0; i < obj.flags.length; i++) pbf.writeStringField(1, obj.flags[i]);
};

// AndroidUnsupportedActions ========================================

var AndroidUnsupportedActions = self.AndroidUnsupportedActions = {};

AndroidUnsupportedActions.read = function (pbf, end) {
    return pbf.readFields(AndroidUnsupportedActions._readField, {allowed: false}, end);
};
AndroidUnsupportedActions._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.allowed = pbf.readBoolean();
};
AndroidUnsupportedActions.write = function (obj, pbf) {
    if (obj.allowed) pbf.writeBooleanField(1, obj.allowed);
};

// SyncActionValue ========================================

var SyncActionValue = self.SyncActionValue = {};

SyncActionValue.read = function (pbf, end) {
    return pbf.readFields(SyncActionValue._readField, {timestamp: 0, starAction: null, contactAction: null, muteAction: null, pinAction: null, securityNotificationSetting: null, pushNameSetting: null, quickReplyAction: null, recentStickerWeightsAction: null, recentStickerMetadata: null, recentEmojiWeightsAction: null, labelEditAction: null, labelAssociationAction: null, localeSetting: null, archiveChatAction: null, deleteMessageForMeAction: null, keyExpiration: null, markChatAsReadAction: null, clearChatAction: null, deleteChatAction: null, unarchiveChatsSetting: null, primaryFeature: null, favoriteStickerAction: null, androidUnsupportedActions: null}, end);
};
SyncActionValue._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.timestamp = pbf.readVarint(true);
    else if (tag === 2) obj.starAction = StarAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.contactAction = ContactAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.muteAction = MuteAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.pinAction = PinAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 6) obj.securityNotificationSetting = SecurityNotificationSetting.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.pushNameSetting = PushNameSetting.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.quickReplyAction = QuickReplyAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 9) obj.recentStickerWeightsAction = RecentStickerWeightsAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 10) obj.recentStickerMetadata = RecentStickerMetadata.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 11) obj.recentEmojiWeightsAction = RecentEmojiWeightsAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 14) obj.labelEditAction = LabelEditAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 15) obj.labelAssociationAction = LabelAssociationAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 16) obj.localeSetting = LocaleSetting.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 17) obj.archiveChatAction = ArchiveChatAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.deleteMessageForMeAction = DeleteMessageForMeAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 19) obj.keyExpiration = KeyExpiration.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 20) obj.markChatAsReadAction = MarkChatAsReadAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 21) obj.clearChatAction = ClearChatAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 22) obj.deleteChatAction = DeleteChatAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 23) obj.unarchiveChatsSetting = UnarchiveChatsSetting.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 24) obj.primaryFeature = PrimaryFeature.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 25) obj.favoriteStickerAction = FavoriteStickerAction.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 26) obj.androidUnsupportedActions = AndroidUnsupportedActions.read(pbf, pbf.readVarint() + pbf.pos);
};
SyncActionValue.write = function (obj, pbf) {
    if (obj.timestamp) pbf.writeVarintField(1, obj.timestamp);
    if (obj.starAction) pbf.writeMessage(2, StarAction.write, obj.starAction);
    if (obj.contactAction) pbf.writeMessage(3, ContactAction.write, obj.contactAction);
    if (obj.muteAction) pbf.writeMessage(4, MuteAction.write, obj.muteAction);
    if (obj.pinAction) pbf.writeMessage(5, PinAction.write, obj.pinAction);
    if (obj.securityNotificationSetting) pbf.writeMessage(6, SecurityNotificationSetting.write, obj.securityNotificationSetting);
    if (obj.pushNameSetting) pbf.writeMessage(7, PushNameSetting.write, obj.pushNameSetting);
    if (obj.quickReplyAction) pbf.writeMessage(8, QuickReplyAction.write, obj.quickReplyAction);
    if (obj.recentStickerWeightsAction) pbf.writeMessage(9, RecentStickerWeightsAction.write, obj.recentStickerWeightsAction);
    if (obj.recentStickerMetadata) pbf.writeMessage(10, RecentStickerMetadata.write, obj.recentStickerMetadata);
    if (obj.recentEmojiWeightsAction) pbf.writeMessage(11, RecentEmojiWeightsAction.write, obj.recentEmojiWeightsAction);
    if (obj.labelEditAction) pbf.writeMessage(14, LabelEditAction.write, obj.labelEditAction);
    if (obj.labelAssociationAction) pbf.writeMessage(15, LabelAssociationAction.write, obj.labelAssociationAction);
    if (obj.localeSetting) pbf.writeMessage(16, LocaleSetting.write, obj.localeSetting);
    if (obj.archiveChatAction) pbf.writeMessage(17, ArchiveChatAction.write, obj.archiveChatAction);
    if (obj.deleteMessageForMeAction) pbf.writeMessage(18, DeleteMessageForMeAction.write, obj.deleteMessageForMeAction);
    if (obj.keyExpiration) pbf.writeMessage(19, KeyExpiration.write, obj.keyExpiration);
    if (obj.markChatAsReadAction) pbf.writeMessage(20, MarkChatAsReadAction.write, obj.markChatAsReadAction);
    if (obj.clearChatAction) pbf.writeMessage(21, ClearChatAction.write, obj.clearChatAction);
    if (obj.deleteChatAction) pbf.writeMessage(22, DeleteChatAction.write, obj.deleteChatAction);
    if (obj.unarchiveChatsSetting) pbf.writeMessage(23, UnarchiveChatsSetting.write, obj.unarchiveChatsSetting);
    if (obj.primaryFeature) pbf.writeMessage(24, PrimaryFeature.write, obj.primaryFeature);
    if (obj.favoriteStickerAction) pbf.writeMessage(25, FavoriteStickerAction.write, obj.favoriteStickerAction);
    if (obj.androidUnsupportedActions) pbf.writeMessage(26, AndroidUnsupportedActions.write, obj.androidUnsupportedActions);
};

// RecentEmojiWeight ========================================

var RecentEmojiWeight = self.RecentEmojiWeight = {};

RecentEmojiWeight.read = function (pbf, end) {
    return pbf.readFields(RecentEmojiWeight._readField, {emoji: "", weight: 0}, end);
};
RecentEmojiWeight._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.emoji = pbf.readString();
    else if (tag === 2) obj.weight = pbf.readFloat();
};
RecentEmojiWeight.write = function (obj, pbf) {
    if (obj.emoji) pbf.writeStringField(1, obj.emoji);
    if (obj.weight) pbf.writeFloatField(2, obj.weight);
};

// RecentStickerWeight ========================================

var RecentStickerWeight = self.RecentStickerWeight = {};

RecentStickerWeight.read = function (pbf, end) {
    return pbf.readFields(RecentStickerWeight._readField, {filehash: "", weight: 0}, end);
};
RecentStickerWeight._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.filehash = pbf.readString();
    else if (tag === 2) obj.weight = pbf.readFloat();
};
RecentStickerWeight.write = function (obj, pbf) {
    if (obj.filehash) pbf.writeStringField(1, obj.filehash);
    if (obj.weight) pbf.writeFloatField(2, obj.weight);
};

// SyncdPatch ========================================

var SyncdPatch = self.SyncdPatch = {};

SyncdPatch.read = function (pbf, end) {
    return pbf.readFields(SyncdPatch._readField, {version: null, mutations: [], externalMutations: null, snapshotMac: null, patchMac: null, keyId: null, exitCode: null, deviceIndex: 0}, end);
};
SyncdPatch._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.version = SyncdVersion.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.mutations.push(SyncdMutation.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 3) obj.externalMutations = ExternalBlobReference.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.snapshotMac = pbf.readBytes();
    else if (tag === 5) obj.patchMac = pbf.readBytes();
    else if (tag === 6) obj.keyId = KeyId.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.exitCode = ExitCode.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.deviceIndex = pbf.readVarint();
};
SyncdPatch.write = function (obj, pbf) {
    if (obj.version) pbf.writeMessage(1, SyncdVersion.write, obj.version);
    if (obj.mutations) for (var i = 0; i < obj.mutations.length; i++) pbf.writeMessage(2, SyncdMutation.write, obj.mutations[i]);
    if (obj.externalMutations) pbf.writeMessage(3, ExternalBlobReference.write, obj.externalMutations);
    if (obj.snapshotMac) pbf.writeBytesField(4, obj.snapshotMac);
    if (obj.patchMac) pbf.writeBytesField(5, obj.patchMac);
    if (obj.keyId) pbf.writeMessage(6, KeyId.write, obj.keyId);
    if (obj.exitCode) pbf.writeMessage(7, ExitCode.write, obj.exitCode);
    if (obj.deviceIndex) pbf.writeVarintField(8, obj.deviceIndex);
};

// SyncdMutation ========================================

var SyncdMutation = self.SyncdMutation = {};

SyncdMutation.read = function (pbf, end) {
    return pbf.readFields(SyncdMutation._readField, {operation: 0, record: null}, end);
};
SyncdMutation._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.operation = pbf.readVarint();
    else if (tag === 2) obj.record = SyncdRecord.read(pbf, pbf.readVarint() + pbf.pos);
};
SyncdMutation.write = function (obj, pbf) {
    if (obj.operation) pbf.writeVarintField(1, obj.operation);
    if (obj.record) pbf.writeMessage(2, SyncdRecord.write, obj.record);
};

SyncdMutation.SyncdMutationSyncdOperation = {
    "SET": {
        "value": 0,
        "options": {}
    },
    "REMOVE": {
        "value": 1,
        "options": {}
    }
};

// SyncdMutations ========================================

var SyncdMutations = self.SyncdMutations = {};

SyncdMutations.read = function (pbf, end) {
    return pbf.readFields(SyncdMutations._readField, {mutations: []}, end);
};
SyncdMutations._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mutations.push(SyncdMutation.read(pbf, pbf.readVarint() + pbf.pos));
};
SyncdMutations.write = function (obj, pbf) {
    if (obj.mutations) for (var i = 0; i < obj.mutations.length; i++) pbf.writeMessage(1, SyncdMutation.write, obj.mutations[i]);
};

// SyncdSnapshot ========================================

var SyncdSnapshot = self.SyncdSnapshot = {};

SyncdSnapshot.read = function (pbf, end) {
    return pbf.readFields(SyncdSnapshot._readField, {version: null, records: [], mac: null, keyId: null}, end);
};
SyncdSnapshot._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.version = SyncdVersion.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.records.push(SyncdRecord.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 3) obj.mac = pbf.readBytes();
    else if (tag === 4) obj.keyId = KeyId.read(pbf, pbf.readVarint() + pbf.pos);
};
SyncdSnapshot.write = function (obj, pbf) {
    if (obj.version) pbf.writeMessage(1, SyncdVersion.write, obj.version);
    if (obj.records) for (var i = 0; i < obj.records.length; i++) pbf.writeMessage(2, SyncdRecord.write, obj.records[i]);
    if (obj.mac) pbf.writeBytesField(3, obj.mac);
    if (obj.keyId) pbf.writeMessage(4, KeyId.write, obj.keyId);
};

// ExternalBlobReference ========================================

var ExternalBlobReference = self.ExternalBlobReference = {};

ExternalBlobReference.read = function (pbf, end) {
    return pbf.readFields(ExternalBlobReference._readField, {mediaKey: null, directPath: "", handle: "", fileSizeBytes: 0, fileSha256: null, fileEncSha256: null}, end);
};
ExternalBlobReference._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mediaKey = pbf.readBytes();
    else if (tag === 2) obj.directPath = pbf.readString();
    else if (tag === 3) obj.handle = pbf.readString();
    else if (tag === 4) obj.fileSizeBytes = pbf.readVarint();
    else if (tag === 5) obj.fileSha256 = pbf.readBytes();
    else if (tag === 6) obj.fileEncSha256 = pbf.readBytes();
};
ExternalBlobReference.write = function (obj, pbf) {
    if (obj.mediaKey) pbf.writeBytesField(1, obj.mediaKey);
    if (obj.directPath) pbf.writeStringField(2, obj.directPath);
    if (obj.handle) pbf.writeStringField(3, obj.handle);
    if (obj.fileSizeBytes) pbf.writeVarintField(4, obj.fileSizeBytes);
    if (obj.fileSha256) pbf.writeBytesField(5, obj.fileSha256);
    if (obj.fileEncSha256) pbf.writeBytesField(6, obj.fileEncSha256);
};

// SyncdRecord ========================================

var SyncdRecord = self.SyncdRecord = {};

SyncdRecord.read = function (pbf, end) {
    return pbf.readFields(SyncdRecord._readField, {index: null, value: null, keyId: null}, end);
};
SyncdRecord._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.index = SyncdIndex.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.value = SyncdValue.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.keyId = KeyId.read(pbf, pbf.readVarint() + pbf.pos);
};
SyncdRecord.write = function (obj, pbf) {
    if (obj.index) pbf.writeMessage(1, SyncdIndex.write, obj.index);
    if (obj.value) pbf.writeMessage(2, SyncdValue.write, obj.value);
    if (obj.keyId) pbf.writeMessage(3, KeyId.write, obj.keyId);
};

// KeyId ========================================

var KeyId = self.KeyId = {};

KeyId.read = function (pbf, end) {
    return pbf.readFields(KeyId._readField, {id: null}, end);
};
KeyId._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readBytes();
};
KeyId.write = function (obj, pbf) {
    if (obj.id) pbf.writeBytesField(1, obj.id);
};

// SyncdValue ========================================

var SyncdValue = self.SyncdValue = {};

SyncdValue.read = function (pbf, end) {
    return pbf.readFields(SyncdValue._readField, {blob: null}, end);
};
SyncdValue._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.blob = pbf.readBytes();
};
SyncdValue.write = function (obj, pbf) {
    if (obj.blob) pbf.writeBytesField(1, obj.blob);
};

// SyncdIndex ========================================

var SyncdIndex = self.SyncdIndex = {};

SyncdIndex.read = function (pbf, end) {
    return pbf.readFields(SyncdIndex._readField, {blob: null}, end);
};
SyncdIndex._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.blob = pbf.readBytes();
};
SyncdIndex.write = function (obj, pbf) {
    if (obj.blob) pbf.writeBytesField(1, obj.blob);
};

// ExitCode ========================================

var ExitCode = self.ExitCode = {};

ExitCode.read = function (pbf, end) {
    return pbf.readFields(ExitCode._readField, {code: 0, text: ""}, end);
};
ExitCode._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.code = pbf.readVarint();
    else if (tag === 2) obj.text = pbf.readString();
};
ExitCode.write = function (obj, pbf) {
    if (obj.code) pbf.writeVarintField(1, obj.code);
    if (obj.text) pbf.writeStringField(2, obj.text);
};

// SyncdVersion ========================================

var SyncdVersion = self.SyncdVersion = {};

SyncdVersion.read = function (pbf, end) {
    return pbf.readFields(SyncdVersion._readField, {version: 0}, end);
};
SyncdVersion._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.version = pbf.readVarint();
};
SyncdVersion.write = function (obj, pbf) {
    if (obj.version) pbf.writeVarintField(1, obj.version);
};

// ServerErrorReceipt ========================================

var ServerErrorReceipt = self.ServerErrorReceipt = {};

ServerErrorReceipt.read = function (pbf, end) {
    return pbf.readFields(ServerErrorReceipt._readField, {stanzaId: ""}, end);
};
ServerErrorReceipt._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.stanzaId = pbf.readString();
};
ServerErrorReceipt.write = function (obj, pbf) {
    if (obj.stanzaId) pbf.writeStringField(1, obj.stanzaId);
};

// MediaRetryNotification ========================================

var MediaRetryNotification = self.MediaRetryNotification = {};

MediaRetryNotification.read = function (pbf, end) {
    return pbf.readFields(MediaRetryNotification._readField, {stanzaId: "", directPath: "", result: 0}, end);
};
MediaRetryNotification._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.stanzaId = pbf.readString();
    else if (tag === 2) obj.directPath = pbf.readString();
    else if (tag === 3) obj.result = pbf.readVarint();
};
MediaRetryNotification.write = function (obj, pbf) {
    if (obj.stanzaId) pbf.writeStringField(1, obj.stanzaId);
    if (obj.directPath) pbf.writeStringField(2, obj.directPath);
    if (obj.result) pbf.writeVarintField(3, obj.result);
};

MediaRetryNotification.MediaRetryNotificationResultType = {
    "GENERAL_ERROR": {
        "value": 0,
        "options": {}
    },
    "SUCCESS": {
        "value": 1,
        "options": {}
    },
    "NOT_FOUND": {
        "value": 2,
        "options": {}
    },
    "DECRYPTION_ERROR": {
        "value": 3,
        "options": {}
    }
};

// MsgOpaqueData ========================================

var MsgOpaqueData = self.MsgOpaqueData = {};

MsgOpaqueData.read = function (pbf, end) {
    return pbf.readFields(MsgOpaqueData._readField, {body: "", caption: "", lng: 0, lat: 0, paymentAmount1000: 0, paymentNoteMsgBody: "", canonicalUrl: "", matchedText: "", title: "", description: "", futureproofBuffer: null, clientUrl: "", loc: ""}, end);
};
MsgOpaqueData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.body = pbf.readString();
    else if (tag === 3) obj.caption = pbf.readString();
    else if (tag === 5) obj.lng = pbf.readDouble();
    else if (tag === 7) obj.lat = pbf.readDouble();
    else if (tag === 8) obj.paymentAmount1000 = pbf.readVarint(true);
    else if (tag === 9) obj.paymentNoteMsgBody = pbf.readString();
    else if (tag === 10) obj.canonicalUrl = pbf.readString();
    else if (tag === 11) obj.matchedText = pbf.readString();
    else if (tag === 12) obj.title = pbf.readString();
    else if (tag === 13) obj.description = pbf.readString();
    else if (tag === 14) obj.futureproofBuffer = pbf.readBytes();
    else if (tag === 15) obj.clientUrl = pbf.readString();
    else if (tag === 16) obj.loc = pbf.readString();
};
MsgOpaqueData.write = function (obj, pbf) {
    if (obj.body) pbf.writeStringField(1, obj.body);
    if (obj.caption) pbf.writeStringField(3, obj.caption);
    if (obj.lng) pbf.writeDoubleField(5, obj.lng);
    if (obj.lat) pbf.writeDoubleField(7, obj.lat);
    if (obj.paymentAmount1000) pbf.writeVarintField(8, obj.paymentAmount1000);
    if (obj.paymentNoteMsgBody) pbf.writeStringField(9, obj.paymentNoteMsgBody);
    if (obj.canonicalUrl) pbf.writeStringField(10, obj.canonicalUrl);
    if (obj.matchedText) pbf.writeStringField(11, obj.matchedText);
    if (obj.title) pbf.writeStringField(12, obj.title);
    if (obj.description) pbf.writeStringField(13, obj.description);
    if (obj.futureproofBuffer) pbf.writeBytesField(14, obj.futureproofBuffer);
    if (obj.clientUrl) pbf.writeStringField(15, obj.clientUrl);
    if (obj.loc) pbf.writeStringField(16, obj.loc);
};

// MsgRowOpaqueData ========================================

var MsgRowOpaqueData = self.MsgRowOpaqueData = {};

MsgRowOpaqueData.read = function (pbf, end) {
    return pbf.readFields(MsgRowOpaqueData._readField, {currentMsg: null, quotedMsg: null}, end);
};
MsgRowOpaqueData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.currentMsg = MsgOpaqueData.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.quotedMsg = MsgOpaqueData.read(pbf, pbf.readVarint() + pbf.pos);
};
MsgRowOpaqueData.write = function (obj, pbf) {
    if (obj.currentMsg) pbf.writeMessage(1, MsgOpaqueData.write, obj.currentMsg);
    if (obj.quotedMsg) pbf.writeMessage(2, MsgOpaqueData.write, obj.quotedMsg);
};

// GlobalSettings ========================================

var GlobalSettings = self.GlobalSettings = {};

GlobalSettings.read = function (pbf, end) {
    return pbf.readFields(GlobalSettings._readField, {lightThemeWallpaper: null, mediaVisibility: 0, darkThemeWallpaper: null}, end);
};
GlobalSettings._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.lightThemeWallpaper = WallpaperSettings.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.mediaVisibility = pbf.readVarint();
    else if (tag === 3) obj.darkThemeWallpaper = WallpaperSettings.read(pbf, pbf.readVarint() + pbf.pos);
};
GlobalSettings.write = function (obj, pbf) {
    if (obj.lightThemeWallpaper) pbf.writeMessage(1, WallpaperSettings.write, obj.lightThemeWallpaper);
    if (obj.mediaVisibility) pbf.writeVarintField(2, obj.mediaVisibility);
    if (obj.darkThemeWallpaper) pbf.writeMessage(3, WallpaperSettings.write, obj.darkThemeWallpaper);
};

// WallpaperSettings ========================================

var WallpaperSettings = self.WallpaperSettings = {};

WallpaperSettings.read = function (pbf, end) {
    return pbf.readFields(WallpaperSettings._readField, {filename: "", opacity: 0}, end);
};
WallpaperSettings._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.filename = pbf.readString();
    else if (tag === 2) obj.opacity = pbf.readVarint();
};
WallpaperSettings.write = function (obj, pbf) {
    if (obj.filename) pbf.writeStringField(1, obj.filename);
    if (obj.opacity) pbf.writeVarintField(2, obj.opacity);
};

// GroupParticipant ========================================

var GroupParticipant = self.GroupParticipant = {};

GroupParticipant.read = function (pbf, end) {
    return pbf.readFields(GroupParticipant._readField, {userJid: "", rank: 0}, end);
};
GroupParticipant._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.userJid = pbf.readString();
    else if (tag === 2) obj.rank = pbf.readVarint();
};
GroupParticipant.write = function (obj, pbf) {
    if (obj.userJid) pbf.writeStringField(1, obj.userJid);
    if (obj.rank) pbf.writeVarintField(2, obj.rank);
};

GroupParticipant.GroupParticipantRank = {
    "REGULAR": {
        "value": 0,
        "options": {}
    },
    "ADMIN": {
        "value": 1,
        "options": {}
    },
    "SUPERADMIN": {
        "value": 2,
        "options": {}
    }
};

// Pushname ========================================

var Pushname = self.Pushname = {};

Pushname.read = function (pbf, end) {
    return pbf.readFields(Pushname._readField, {id: "", pushname: ""}, end);
};
Pushname._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readString();
    else if (tag === 2) obj.pushname = pbf.readString();
};
Pushname.write = function (obj, pbf) {
    if (obj.id) pbf.writeStringField(1, obj.id);
    if (obj.pushname) pbf.writeStringField(2, obj.pushname);
};

// HistorySyncMsg ========================================

var HistorySyncMsg = self.HistorySyncMsg = {};

HistorySyncMsg.read = function (pbf, end) {
    return pbf.readFields(HistorySyncMsg._readField, {message: null, msgOrderId: 0}, end);
};
HistorySyncMsg._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.message = WebMessageInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.msgOrderId = pbf.readVarint();
};
HistorySyncMsg.write = function (obj, pbf) {
    if (obj.message) pbf.writeMessage(1, WebMessageInfo.write, obj.message);
    if (obj.msgOrderId) pbf.writeVarintField(2, obj.msgOrderId);
};

// Conversation ========================================

var Conversation = self.Conversation = {};

Conversation.read = function (pbf, end) {
    return pbf.readFields(Conversation._readField, {id: "", messages: [], newJid: "", oldJid: "", lastMsgTimestamp: 0, unreadCount: 0, readOnly: false, endOfHistoryTransfer: false, ephemeralExpiration: 0, ephemeralSettingTimestamp: 0, endOfHistoryTransferType: 0, conversationTimestamp: 0, name: "", pHash: "", notSpam: false, archived: false, disappearingMode: null, unreadMentionCount: 0, markedAsUnread: false, participant: [], tcToken: null, tcTokenTimestamp: 0, contactPrimaryIdentityKey: null, pinned: 0, muteEndTime: 0, wallpaper: null, mediaVisibility: 0, tcTokenSenderTimestamp: 0, suspended: false}, end);
};
Conversation._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readString();
    else if (tag === 2) obj.messages.push(HistorySyncMsg.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 3) obj.newJid = pbf.readString();
    else if (tag === 4) obj.oldJid = pbf.readString();
    else if (tag === 5) obj.lastMsgTimestamp = pbf.readVarint();
    else if (tag === 6) obj.unreadCount = pbf.readVarint();
    else if (tag === 7) obj.readOnly = pbf.readBoolean();
    else if (tag === 8) obj.endOfHistoryTransfer = pbf.readBoolean();
    else if (tag === 9) obj.ephemeralExpiration = pbf.readVarint();
    else if (tag === 10) obj.ephemeralSettingTimestamp = pbf.readVarint(true);
    else if (tag === 11) obj.endOfHistoryTransferType = pbf.readVarint();
    else if (tag === 12) obj.conversationTimestamp = pbf.readVarint();
    else if (tag === 13) obj.name = pbf.readString();
    else if (tag === 14) obj.pHash = pbf.readString();
    else if (tag === 15) obj.notSpam = pbf.readBoolean();
    else if (tag === 16) obj.archived = pbf.readBoolean();
    else if (tag === 17) obj.disappearingMode = DisappearingMode.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.unreadMentionCount = pbf.readVarint();
    else if (tag === 19) obj.markedAsUnread = pbf.readBoolean();
    else if (tag === 20) obj.participant.push(GroupParticipant.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 21) obj.tcToken = pbf.readBytes();
    else if (tag === 22) obj.tcTokenTimestamp = pbf.readVarint();
    else if (tag === 23) obj.contactPrimaryIdentityKey = pbf.readBytes();
    else if (tag === 24) obj.pinned = pbf.readVarint();
    else if (tag === 25) obj.muteEndTime = pbf.readVarint();
    else if (tag === 26) obj.wallpaper = WallpaperSettings.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 27) obj.mediaVisibility = pbf.readVarint();
    else if (tag === 28) obj.tcTokenSenderTimestamp = pbf.readVarint();
    else if (tag === 29) obj.suspended = pbf.readBoolean();
};
Conversation.write = function (obj, pbf) {
    if (obj.id) pbf.writeStringField(1, obj.id);
    if (obj.messages) for (var i = 0; i < obj.messages.length; i++) pbf.writeMessage(2, HistorySyncMsg.write, obj.messages[i]);
    if (obj.newJid) pbf.writeStringField(3, obj.newJid);
    if (obj.oldJid) pbf.writeStringField(4, obj.oldJid);
    if (obj.lastMsgTimestamp) pbf.writeVarintField(5, obj.lastMsgTimestamp);
    if (obj.unreadCount) pbf.writeVarintField(6, obj.unreadCount);
    if (obj.readOnly) pbf.writeBooleanField(7, obj.readOnly);
    if (obj.endOfHistoryTransfer) pbf.writeBooleanField(8, obj.endOfHistoryTransfer);
    if (obj.ephemeralExpiration) pbf.writeVarintField(9, obj.ephemeralExpiration);
    if (obj.ephemeralSettingTimestamp) pbf.writeVarintField(10, obj.ephemeralSettingTimestamp);
    if (obj.endOfHistoryTransferType) pbf.writeVarintField(11, obj.endOfHistoryTransferType);
    if (obj.conversationTimestamp) pbf.writeVarintField(12, obj.conversationTimestamp);
    if (obj.name) pbf.writeStringField(13, obj.name);
    if (obj.pHash) pbf.writeStringField(14, obj.pHash);
    if (obj.notSpam) pbf.writeBooleanField(15, obj.notSpam);
    if (obj.archived) pbf.writeBooleanField(16, obj.archived);
    if (obj.disappearingMode) pbf.writeMessage(17, DisappearingMode.write, obj.disappearingMode);
    if (obj.unreadMentionCount) pbf.writeVarintField(18, obj.unreadMentionCount);
    if (obj.markedAsUnread) pbf.writeBooleanField(19, obj.markedAsUnread);
    if (obj.participant) for (i = 0; i < obj.participant.length; i++) pbf.writeMessage(20, GroupParticipant.write, obj.participant[i]);
    if (obj.tcToken) pbf.writeBytesField(21, obj.tcToken);
    if (obj.tcTokenTimestamp) pbf.writeVarintField(22, obj.tcTokenTimestamp);
    if (obj.contactPrimaryIdentityKey) pbf.writeBytesField(23, obj.contactPrimaryIdentityKey);
    if (obj.pinned) pbf.writeVarintField(24, obj.pinned);
    if (obj.muteEndTime) pbf.writeVarintField(25, obj.muteEndTime);
    if (obj.wallpaper) pbf.writeMessage(26, WallpaperSettings.write, obj.wallpaper);
    if (obj.mediaVisibility) pbf.writeVarintField(27, obj.mediaVisibility);
    if (obj.tcTokenSenderTimestamp) pbf.writeVarintField(28, obj.tcTokenSenderTimestamp);
    if (obj.suspended) pbf.writeBooleanField(29, obj.suspended);
};

Conversation.ConversationEndOfHistoryTransferType = {
    "COMPLETE_BUT_MORE_MESSAGES_REMAIN_ON_PRIMARY": {
        "value": 0,
        "options": {}
    },
    "COMPLETE_AND_NO_MORE_MESSAGE_REMAIN_ON_PRIMARY": {
        "value": 1,
        "options": {}
    }
};

// HistorySync ========================================

var HistorySync = self.HistorySync = {};

HistorySync.read = function (pbf, end) {
    return pbf.readFields(HistorySync._readField, {syncType: 0, conversations: [], statusV3Messages: [], chunkOrder: 0, progress: 0, pushnames: [], globalSettings: null, threadIdUserSecret: null, threadDsTimeframeOffset: 0}, end);
};
HistorySync._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.syncType = pbf.readVarint();
    else if (tag === 2) obj.conversations.push(Conversation.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 3) obj.statusV3Messages.push(WebMessageInfo.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 5) obj.chunkOrder = pbf.readVarint();
    else if (tag === 6) obj.progress = pbf.readVarint();
    else if (tag === 7) obj.pushnames.push(Pushname.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 8) obj.globalSettings = GlobalSettings.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 9) obj.threadIdUserSecret = pbf.readBytes();
    else if (tag === 10) obj.threadDsTimeframeOffset = pbf.readVarint();
};
HistorySync.write = function (obj, pbf) {
    if (obj.syncType) pbf.writeVarintField(1, obj.syncType);
    if (obj.conversations) for (var i = 0; i < obj.conversations.length; i++) pbf.writeMessage(2, Conversation.write, obj.conversations[i]);
    if (obj.statusV3Messages) for (i = 0; i < obj.statusV3Messages.length; i++) pbf.writeMessage(3, WebMessageInfo.write, obj.statusV3Messages[i]);
    if (obj.chunkOrder) pbf.writeVarintField(5, obj.chunkOrder);
    if (obj.progress) pbf.writeVarintField(6, obj.progress);
    if (obj.pushnames) for (i = 0; i < obj.pushnames.length; i++) pbf.writeMessage(7, Pushname.write, obj.pushnames[i]);
    if (obj.globalSettings) pbf.writeMessage(8, GlobalSettings.write, obj.globalSettings);
    if (obj.threadIdUserSecret) pbf.writeBytesField(9, obj.threadIdUserSecret);
    if (obj.threadDsTimeframeOffset) pbf.writeVarintField(10, obj.threadDsTimeframeOffset);
};

HistorySync.HistorySyncHistorySyncType = {
    "INITIAL_BOOTSTRAP": {
        "value": 0,
        "options": {}
    },
    "INITIAL_STATUS_V3": {
        "value": 1,
        "options": {}
    },
    "FULL": {
        "value": 2,
        "options": {}
    },
    "RECENT": {
        "value": 3,
        "options": {}
    },
    "PUSH_NAME": {
        "value": 4,
        "options": {}
    }
};

// EphemeralSetting ========================================

var EphemeralSetting = self.EphemeralSetting = {};

EphemeralSetting.read = function (pbf, end) {
    return pbf.readFields(EphemeralSetting._readField, {duration: 0, timestamp: 0}, end);
};
EphemeralSetting._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.duration = pbf.readSFixed32();
    else if (tag === 2) obj.timestamp = pbf.readSFixed64();
};
EphemeralSetting.write = function (obj, pbf) {
    if (obj.duration) pbf.writeSFixed32Field(1, obj.duration);
    if (obj.timestamp) pbf.writeSFixed64Field(2, obj.timestamp);
};

// InteractiveAnnotation ========================================

var InteractiveAnnotation = self.InteractiveAnnotation = {};

InteractiveAnnotation.read = function (pbf, end) {
    return pbf.readFields(InteractiveAnnotation._readField, {polygonVertices: [], location: null, action: null}, end);
};
InteractiveAnnotation._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.polygonVertices.push(Point.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 2) obj.location = Location.read(pbf, pbf.readVarint() + pbf.pos), obj.action = "location";
};
InteractiveAnnotation.write = function (obj, pbf) {
    if (obj.polygonVertices) for (var i = 0; i < obj.polygonVertices.length; i++) pbf.writeMessage(1, Point.write, obj.polygonVertices[i]);
    if (obj.location) pbf.writeMessage(2, Location.write, obj.location);
};

// DeviceListMetadata ========================================

var DeviceListMetadata = self.DeviceListMetadata = {};

DeviceListMetadata.read = function (pbf, end) {
    return pbf.readFields(DeviceListMetadata._readField, {senderKeyHash: null, senderTimestamp: 0, senderKeyIndexes: [], recipientKeyHash: null, recipientTimestamp: 0, recipientKeyIndexes: []}, end);
};
DeviceListMetadata._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.senderKeyHash = pbf.readBytes();
    else if (tag === 2) obj.senderTimestamp = pbf.readVarint();
    else if (tag === 3) pbf.readPackedVarint(obj.senderKeyIndexes);
    else if (tag === 8) obj.recipientKeyHash = pbf.readBytes();
    else if (tag === 9) obj.recipientTimestamp = pbf.readVarint();
    else if (tag === 10) pbf.readPackedVarint(obj.recipientKeyIndexes);
};
DeviceListMetadata.write = function (obj, pbf) {
    if (obj.senderKeyHash) pbf.writeBytesField(1, obj.senderKeyHash);
    if (obj.senderTimestamp) pbf.writeVarintField(2, obj.senderTimestamp);
    if (obj.senderKeyIndexes) pbf.writePackedVarint(3, obj.senderKeyIndexes);
    if (obj.recipientKeyHash) pbf.writeBytesField(8, obj.recipientKeyHash);
    if (obj.recipientTimestamp) pbf.writeVarintField(9, obj.recipientTimestamp);
    if (obj.recipientKeyIndexes) pbf.writePackedVarint(10, obj.recipientKeyIndexes);
};

// MessageContextInfo ========================================

var MessageContextInfo = self.MessageContextInfo = {};

MessageContextInfo.read = function (pbf, end) {
    return pbf.readFields(MessageContextInfo._readField, {deviceListMetadata: null, deviceListMetadataVersion: 0}, end);
};
MessageContextInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.deviceListMetadata = DeviceListMetadata.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.deviceListMetadataVersion = pbf.readVarint(true);
};
MessageContextInfo.write = function (obj, pbf) {
    if (obj.deviceListMetadata) pbf.writeMessage(1, DeviceListMetadata.write, obj.deviceListMetadata);
    if (obj.deviceListMetadataVersion) pbf.writeVarintField(2, obj.deviceListMetadataVersion);
};

// AdReplyInfo ========================================

var AdReplyInfo = self.AdReplyInfo = {};

AdReplyInfo.read = function (pbf, end) {
    return pbf.readFields(AdReplyInfo._readField, {advertiserName: "", mediaType: 0, jpegThumbnail: null, caption: ""}, end);
};
AdReplyInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.advertiserName = pbf.readString();
    else if (tag === 2) obj.mediaType = pbf.readVarint();
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.caption = pbf.readString();
};
AdReplyInfo.write = function (obj, pbf) {
    if (obj.advertiserName) pbf.writeStringField(1, obj.advertiserName);
    if (obj.mediaType) pbf.writeVarintField(2, obj.mediaType);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.caption) pbf.writeStringField(17, obj.caption);
};

AdReplyInfo.AdReplyInfoMediaType = {
    "NONE": {
        "value": 0,
        "options": {}
    },
    "IMAGE": {
        "value": 1,
        "options": {}
    },
    "VIDEO": {
        "value": 2,
        "options": {}
    }
};

// ExternalAdReplyInfo ========================================

var ExternalAdReplyInfo = self.ExternalAdReplyInfo = {};

ExternalAdReplyInfo.read = function (pbf, end) {
    return pbf.readFields(ExternalAdReplyInfo._readField, {title: "", body: "", mediaType: 0, thumbnailUrl: "", mediaUrl: "", thumbnail: null, sourceType: "", sourceId: "", sourceUrl: "", containsAutoReply: false}, end);
};
ExternalAdReplyInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.body = pbf.readString();
    else if (tag === 3) obj.mediaType = pbf.readVarint();
    else if (tag === 4) obj.thumbnailUrl = pbf.readString();
    else if (tag === 5) obj.mediaUrl = pbf.readString();
    else if (tag === 6) obj.thumbnail = pbf.readBytes();
    else if (tag === 7) obj.sourceType = pbf.readString();
    else if (tag === 8) obj.sourceId = pbf.readString();
    else if (tag === 9) obj.sourceUrl = pbf.readString();
    else if (tag === 10) obj.containsAutoReply = pbf.readBoolean();
};
ExternalAdReplyInfo.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.body) pbf.writeStringField(2, obj.body);
    if (obj.mediaType) pbf.writeVarintField(3, obj.mediaType);
    if (obj.thumbnailUrl) pbf.writeStringField(4, obj.thumbnailUrl);
    if (obj.mediaUrl) pbf.writeStringField(5, obj.mediaUrl);
    if (obj.thumbnail) pbf.writeBytesField(6, obj.thumbnail);
    if (obj.sourceType) pbf.writeStringField(7, obj.sourceType);
    if (obj.sourceId) pbf.writeStringField(8, obj.sourceId);
    if (obj.sourceUrl) pbf.writeStringField(9, obj.sourceUrl);
    if (obj.containsAutoReply) pbf.writeBooleanField(10, obj.containsAutoReply);
};

ExternalAdReplyInfo.ExternalAdReplyInfoMediaType = {
    "NONE": {
        "value": 0,
        "options": {}
    },
    "IMAGE": {
        "value": 1,
        "options": {}
    },
    "VIDEO": {
        "value": 2,
        "options": {}
    }
};

// ContextInfo ========================================

var ContextInfo = self.ContextInfo = {};

ContextInfo.read = function (pbf, end) {
    return pbf.readFields(ContextInfo._readField, {stanzaId: "", participant: "", quotedMessage: null, remoteJid: "", mentionedJid: [], conversionSource: "", conversionData: null, conversionDelaySeconds: 0, forwardingScore: 0, isForwarded: false, quotedAd: null, placeholderKey: null, expiration: 0, ephemeralSettingTimestamp: 0, ephemeralSharedSecret: null, externalAdReply: null, entryPointConversionSource: "", entryPointConversionApp: "", entryPointConversionDelaySeconds: 0, disappearingMode: null, actionLink: null, groupSubject: "", parentGroupJid: ""}, end);
};
ContextInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.stanzaId = pbf.readString();
    else if (tag === 2) obj.participant = pbf.readString();
    else if (tag === 3) obj.quotedMessage = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.remoteJid = pbf.readString();
    else if (tag === 15) obj.mentionedJid.push(pbf.readString());
    else if (tag === 18) obj.conversionSource = pbf.readString();
    else if (tag === 19) obj.conversionData = pbf.readBytes();
    else if (tag === 20) obj.conversionDelaySeconds = pbf.readVarint();
    else if (tag === 21) obj.forwardingScore = pbf.readVarint();
    else if (tag === 22) obj.isForwarded = pbf.readBoolean();
    else if (tag === 23) obj.quotedAd = AdReplyInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 24) obj.placeholderKey = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 25) obj.expiration = pbf.readVarint();
    else if (tag === 26) obj.ephemeralSettingTimestamp = pbf.readVarint(true);
    else if (tag === 27) obj.ephemeralSharedSecret = pbf.readBytes();
    else if (tag === 28) obj.externalAdReply = ExternalAdReplyInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 29) obj.entryPointConversionSource = pbf.readString();
    else if (tag === 30) obj.entryPointConversionApp = pbf.readString();
    else if (tag === 31) obj.entryPointConversionDelaySeconds = pbf.readVarint();
    else if (tag === 32) obj.disappearingMode = DisappearingMode.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 33) obj.actionLink = ActionLink.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 34) obj.groupSubject = pbf.readString();
    else if (tag === 35) obj.parentGroupJid = pbf.readString();
};
ContextInfo.write = function (obj, pbf) {
    if (obj.stanzaId) pbf.writeStringField(1, obj.stanzaId);
    if (obj.participant) pbf.writeStringField(2, obj.participant);
    if (obj.quotedMessage) pbf.writeMessage(3, Message.write, obj.quotedMessage);
    if (obj.remoteJid) pbf.writeStringField(4, obj.remoteJid);
    if (obj.mentionedJid) for (var i = 0; i < obj.mentionedJid.length; i++) pbf.writeStringField(15, obj.mentionedJid[i]);
    if (obj.conversionSource) pbf.writeStringField(18, obj.conversionSource);
    if (obj.conversionData) pbf.writeBytesField(19, obj.conversionData);
    if (obj.conversionDelaySeconds) pbf.writeVarintField(20, obj.conversionDelaySeconds);
    if (obj.forwardingScore) pbf.writeVarintField(21, obj.forwardingScore);
    if (obj.isForwarded) pbf.writeBooleanField(22, obj.isForwarded);
    if (obj.quotedAd) pbf.writeMessage(23, AdReplyInfo.write, obj.quotedAd);
    if (obj.placeholderKey) pbf.writeMessage(24, MessageKey.write, obj.placeholderKey);
    if (obj.expiration) pbf.writeVarintField(25, obj.expiration);
    if (obj.ephemeralSettingTimestamp) pbf.writeVarintField(26, obj.ephemeralSettingTimestamp);
    if (obj.ephemeralSharedSecret) pbf.writeBytesField(27, obj.ephemeralSharedSecret);
    if (obj.externalAdReply) pbf.writeMessage(28, ExternalAdReplyInfo.write, obj.externalAdReply);
    if (obj.entryPointConversionSource) pbf.writeStringField(29, obj.entryPointConversionSource);
    if (obj.entryPointConversionApp) pbf.writeStringField(30, obj.entryPointConversionApp);
    if (obj.entryPointConversionDelaySeconds) pbf.writeVarintField(31, obj.entryPointConversionDelaySeconds);
    if (obj.disappearingMode) pbf.writeMessage(32, DisappearingMode.write, obj.disappearingMode);
    if (obj.actionLink) pbf.writeMessage(33, ActionLink.write, obj.actionLink);
    if (obj.groupSubject) pbf.writeStringField(34, obj.groupSubject);
    if (obj.parentGroupJid) pbf.writeStringField(35, obj.parentGroupJid);
};

// SenderKeyDistributionMessage ========================================

var SenderKeyDistributionMessage = self.SenderKeyDistributionMessage = {};

SenderKeyDistributionMessage.read = function (pbf, end) {
    return pbf.readFields(SenderKeyDistributionMessage._readField, {groupId: "", axolotlSenderKeyDistributionMessage: null}, end);
};
SenderKeyDistributionMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.groupId = pbf.readString();
    else if (tag === 2) obj.axolotlSenderKeyDistributionMessage = pbf.readBytes();
};
SenderKeyDistributionMessage.write = function (obj, pbf) {
    if (obj.groupId) pbf.writeStringField(1, obj.groupId);
    if (obj.axolotlSenderKeyDistributionMessage) pbf.writeBytesField(2, obj.axolotlSenderKeyDistributionMessage);
};

// ImageMessage ========================================

var ImageMessage = self.ImageMessage = {};

ImageMessage.read = function (pbf, end) {
    return pbf.readFields(ImageMessage._readField, {url: "", mimetype: "", caption: "", fileSha256: null, fileLength: 0, height: 0, width: 0, mediaKey: null, fileEncSha256: null, interactiveAnnotations: [], directPath: "", mediaKeyTimestamp: 0, jpegThumbnail: null, contextInfo: null, firstScanSidecar: null, firstScanLength: 0, experimentGroupId: 0, scansSidecar: null, scanLengths: [], midQualityFileSha256: null, midQualityFileEncSha256: null, viewOnce: false, thumbnailDirectPath: "", thumbnailSha256: null, thumbnailEncSha256: null, staticUrl: ""}, end);
};
ImageMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.mimetype = pbf.readString();
    else if (tag === 3) obj.caption = pbf.readString();
    else if (tag === 4) obj.fileSha256 = pbf.readBytes();
    else if (tag === 5) obj.fileLength = pbf.readVarint();
    else if (tag === 6) obj.height = pbf.readVarint();
    else if (tag === 7) obj.width = pbf.readVarint();
    else if (tag === 8) obj.mediaKey = pbf.readBytes();
    else if (tag === 9) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 10) obj.interactiveAnnotations.push(InteractiveAnnotation.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 11) obj.directPath = pbf.readString();
    else if (tag === 12) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.firstScanSidecar = pbf.readBytes();
    else if (tag === 19) obj.firstScanLength = pbf.readVarint();
    else if (tag === 20) obj.experimentGroupId = pbf.readVarint();
    else if (tag === 21) obj.scansSidecar = pbf.readBytes();
    else if (tag === 22) pbf.readPackedVarint(obj.scanLengths);
    else if (tag === 23) obj.midQualityFileSha256 = pbf.readBytes();
    else if (tag === 24) obj.midQualityFileEncSha256 = pbf.readBytes();
    else if (tag === 25) obj.viewOnce = pbf.readBoolean();
    else if (tag === 26) obj.thumbnailDirectPath = pbf.readString();
    else if (tag === 27) obj.thumbnailSha256 = pbf.readBytes();
    else if (tag === 28) obj.thumbnailEncSha256 = pbf.readBytes();
    else if (tag === 29) obj.staticUrl = pbf.readString();
};
ImageMessage.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.mimetype) pbf.writeStringField(2, obj.mimetype);
    if (obj.caption) pbf.writeStringField(3, obj.caption);
    if (obj.fileSha256) pbf.writeBytesField(4, obj.fileSha256);
    if (obj.fileLength) pbf.writeVarintField(5, obj.fileLength);
    if (obj.height) pbf.writeVarintField(6, obj.height);
    if (obj.width) pbf.writeVarintField(7, obj.width);
    if (obj.mediaKey) pbf.writeBytesField(8, obj.mediaKey);
    if (obj.fileEncSha256) pbf.writeBytesField(9, obj.fileEncSha256);
    if (obj.interactiveAnnotations) for (var i = 0; i < obj.interactiveAnnotations.length; i++) pbf.writeMessage(10, InteractiveAnnotation.write, obj.interactiveAnnotations[i]);
    if (obj.directPath) pbf.writeStringField(11, obj.directPath);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(12, obj.mediaKeyTimestamp);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
    if (obj.firstScanSidecar) pbf.writeBytesField(18, obj.firstScanSidecar);
    if (obj.firstScanLength) pbf.writeVarintField(19, obj.firstScanLength);
    if (obj.experimentGroupId) pbf.writeVarintField(20, obj.experimentGroupId);
    if (obj.scansSidecar) pbf.writeBytesField(21, obj.scansSidecar);
    if (obj.scanLengths) for (i = 0; i < obj.scanLengths.length; i++) pbf.writeVarintField(22, obj.scanLengths[i]);
    if (obj.midQualityFileSha256) pbf.writeBytesField(23, obj.midQualityFileSha256);
    if (obj.midQualityFileEncSha256) pbf.writeBytesField(24, obj.midQualityFileEncSha256);
    if (obj.viewOnce) pbf.writeBooleanField(25, obj.viewOnce);
    if (obj.thumbnailDirectPath) pbf.writeStringField(26, obj.thumbnailDirectPath);
    if (obj.thumbnailSha256) pbf.writeBytesField(27, obj.thumbnailSha256);
    if (obj.thumbnailEncSha256) pbf.writeBytesField(28, obj.thumbnailEncSha256);
    if (obj.staticUrl) pbf.writeStringField(29, obj.staticUrl);
};

// InvoiceMessage ========================================

var InvoiceMessage = self.InvoiceMessage = {};

InvoiceMessage.read = function (pbf, end) {
    return pbf.readFields(InvoiceMessage._readField, {note: "", token: "", attachmentType: 0, attachmentMimetype: "", attachmentMediaKey: null, attachmentMediaKeyTimestamp: 0, attachmentFileSha256: null, attachmentFileEncSha256: null, attachmentDirectPath: "", attachmentJpegThumbnail: null}, end);
};
InvoiceMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.note = pbf.readString();
    else if (tag === 2) obj.token = pbf.readString();
    else if (tag === 3) obj.attachmentType = pbf.readVarint();
    else if (tag === 4) obj.attachmentMimetype = pbf.readString();
    else if (tag === 5) obj.attachmentMediaKey = pbf.readBytes();
    else if (tag === 6) obj.attachmentMediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 7) obj.attachmentFileSha256 = pbf.readBytes();
    else if (tag === 8) obj.attachmentFileEncSha256 = pbf.readBytes();
    else if (tag === 9) obj.attachmentDirectPath = pbf.readString();
    else if (tag === 10) obj.attachmentJpegThumbnail = pbf.readBytes();
};
InvoiceMessage.write = function (obj, pbf) {
    if (obj.note) pbf.writeStringField(1, obj.note);
    if (obj.token) pbf.writeStringField(2, obj.token);
    if (obj.attachmentType) pbf.writeVarintField(3, obj.attachmentType);
    if (obj.attachmentMimetype) pbf.writeStringField(4, obj.attachmentMimetype);
    if (obj.attachmentMediaKey) pbf.writeBytesField(5, obj.attachmentMediaKey);
    if (obj.attachmentMediaKeyTimestamp) pbf.writeVarintField(6, obj.attachmentMediaKeyTimestamp);
    if (obj.attachmentFileSha256) pbf.writeBytesField(7, obj.attachmentFileSha256);
    if (obj.attachmentFileEncSha256) pbf.writeBytesField(8, obj.attachmentFileEncSha256);
    if (obj.attachmentDirectPath) pbf.writeStringField(9, obj.attachmentDirectPath);
    if (obj.attachmentJpegThumbnail) pbf.writeBytesField(10, obj.attachmentJpegThumbnail);
};

InvoiceMessage.InvoiceMessageAttachmentType = {
    "IMAGE": {
        "value": 0,
        "options": {}
    },
    "PDF": {
        "value": 1,
        "options": {}
    }
};

// ContactMessage ========================================

var ContactMessage = self.ContactMessage = {};

ContactMessage.read = function (pbf, end) {
    return pbf.readFields(ContactMessage._readField, {displayName: "", vcard: "", contextInfo: null}, end);
};
ContactMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayName = pbf.readString();
    else if (tag === 16) obj.vcard = pbf.readString();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
ContactMessage.write = function (obj, pbf) {
    if (obj.displayName) pbf.writeStringField(1, obj.displayName);
    if (obj.vcard) pbf.writeStringField(16, obj.vcard);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

// LocationMessage ========================================

var LocationMessage = self.LocationMessage = {};

LocationMessage.read = function (pbf, end) {
    return pbf.readFields(LocationMessage._readField, {degreesLatitude: 0, degreesLongitude: 0, name: "", address: "", url: "", isLive: false, accuracyInMeters: 0, speedInMps: 0, degreesClockwiseFromMagneticNorth: 0, comment: "", jpegThumbnail: null, contextInfo: null}, end);
};
LocationMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.degreesLatitude = pbf.readDouble();
    else if (tag === 2) obj.degreesLongitude = pbf.readDouble();
    else if (tag === 3) obj.name = pbf.readString();
    else if (tag === 4) obj.address = pbf.readString();
    else if (tag === 5) obj.url = pbf.readString();
    else if (tag === 6) obj.isLive = pbf.readBoolean();
    else if (tag === 7) obj.accuracyInMeters = pbf.readVarint();
    else if (tag === 8) obj.speedInMps = pbf.readFloat();
    else if (tag === 9) obj.degreesClockwiseFromMagneticNorth = pbf.readVarint();
    else if (tag === 11) obj.comment = pbf.readString();
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
LocationMessage.write = function (obj, pbf) {
    if (obj.degreesLatitude) pbf.writeDoubleField(1, obj.degreesLatitude);
    if (obj.degreesLongitude) pbf.writeDoubleField(2, obj.degreesLongitude);
    if (obj.name) pbf.writeStringField(3, obj.name);
    if (obj.address) pbf.writeStringField(4, obj.address);
    if (obj.url) pbf.writeStringField(5, obj.url);
    if (obj.isLive) pbf.writeBooleanField(6, obj.isLive);
    if (obj.accuracyInMeters) pbf.writeVarintField(7, obj.accuracyInMeters);
    if (obj.speedInMps) pbf.writeFloatField(8, obj.speedInMps);
    if (obj.degreesClockwiseFromMagneticNorth) pbf.writeVarintField(9, obj.degreesClockwiseFromMagneticNorth);
    if (obj.comment) pbf.writeStringField(11, obj.comment);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

// ExtendedTextMessage ========================================

var ExtendedTextMessage = self.ExtendedTextMessage = {};

ExtendedTextMessage.read = function (pbf, end) {
    return pbf.readFields(ExtendedTextMessage._readField, {text: "", matchedText: "", canonicalUrl: "", description: "", title: "", textArgb: 0, backgroundArgb: 0, font: 0, previewType: 0, jpegThumbnail: null, contextInfo: null, doNotPlayInline: false, thumbnailDirectPath: "", thumbnailSha256: null, thumbnailEncSha256: null, mediaKey: null, mediaKeyTimestamp: 0, thumbnailHeight: 0, thumbnailWidth: 0, inviteLinkGroupType: 0}, end);
};
ExtendedTextMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.text = pbf.readString();
    else if (tag === 2) obj.matchedText = pbf.readString();
    else if (tag === 4) obj.canonicalUrl = pbf.readString();
    else if (tag === 5) obj.description = pbf.readString();
    else if (tag === 6) obj.title = pbf.readString();
    else if (tag === 7) obj.textArgb = pbf.readFixed32();
    else if (tag === 8) obj.backgroundArgb = pbf.readFixed32();
    else if (tag === 9) obj.font = pbf.readVarint();
    else if (tag === 10) obj.previewType = pbf.readVarint();
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.doNotPlayInline = pbf.readBoolean();
    else if (tag === 19) obj.thumbnailDirectPath = pbf.readString();
    else if (tag === 20) obj.thumbnailSha256 = pbf.readBytes();
    else if (tag === 21) obj.thumbnailEncSha256 = pbf.readBytes();
    else if (tag === 22) obj.mediaKey = pbf.readBytes();
    else if (tag === 23) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 24) obj.thumbnailHeight = pbf.readVarint();
    else if (tag === 25) obj.thumbnailWidth = pbf.readVarint();
    else if (tag === 26) obj.inviteLinkGroupType = pbf.readVarint();
};
ExtendedTextMessage.write = function (obj, pbf) {
    if (obj.text) pbf.writeStringField(1, obj.text);
    if (obj.matchedText) pbf.writeStringField(2, obj.matchedText);
    if (obj.canonicalUrl) pbf.writeStringField(4, obj.canonicalUrl);
    if (obj.description) pbf.writeStringField(5, obj.description);
    if (obj.title) pbf.writeStringField(6, obj.title);
    if (obj.textArgb) pbf.writeFixed32Field(7, obj.textArgb);
    if (obj.backgroundArgb) pbf.writeFixed32Field(8, obj.backgroundArgb);
    if (obj.font) pbf.writeVarintField(9, obj.font);
    if (obj.previewType) pbf.writeVarintField(10, obj.previewType);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
    if (obj.doNotPlayInline) pbf.writeBooleanField(18, obj.doNotPlayInline);
    if (obj.thumbnailDirectPath) pbf.writeStringField(19, obj.thumbnailDirectPath);
    if (obj.thumbnailSha256) pbf.writeBytesField(20, obj.thumbnailSha256);
    if (obj.thumbnailEncSha256) pbf.writeBytesField(21, obj.thumbnailEncSha256);
    if (obj.mediaKey) pbf.writeBytesField(22, obj.mediaKey);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(23, obj.mediaKeyTimestamp);
    if (obj.thumbnailHeight) pbf.writeVarintField(24, obj.thumbnailHeight);
    if (obj.thumbnailWidth) pbf.writeVarintField(25, obj.thumbnailWidth);
    if (obj.inviteLinkGroupType) pbf.writeVarintField(26, obj.inviteLinkGroupType);
};

ExtendedTextMessage.ExtendedTextMessageFontType = {
    "SANS_SERIF": {
        "value": 0,
        "options": {}
    },
    "SERIF": {
        "value": 1,
        "options": {}
    },
    "NORICAN_REGULAR": {
        "value": 2,
        "options": {}
    },
    "BRYNDAN_WRITE": {
        "value": 3,
        "options": {}
    },
    "BEBASNEUE_REGULAR": {
        "value": 4,
        "options": {}
    },
    "OSWALD_HEAVY": {
        "value": 5,
        "options": {}
    }
};

ExtendedTextMessage.ExtendedTextMessagePreviewType = {
    "NONE": {
        "value": 0,
        "options": {}
    },
    "VIDEO": {
        "value": 1,
        "options": {}
    }
};

ExtendedTextMessage.ExtendedTextMessageInviteLinkGroupType = {
    "DEFAULT": {
        "value": 0,
        "options": {}
    },
    "PARENT": {
        "value": 1,
        "options": {}
    }
};

// DocumentMessage ========================================

var DocumentMessage = self.DocumentMessage = {};

DocumentMessage.read = function (pbf, end) {
    return pbf.readFields(DocumentMessage._readField, {url: "", mimetype: "", title: "", fileSha256: null, fileLength: 0, pageCount: 0, mediaKey: null, fileName: "", fileEncSha256: null, directPath: "", mediaKeyTimestamp: 0, contactVcard: false, thumbnailDirectPath: "", thumbnailSha256: null, thumbnailEncSha256: null, jpegThumbnail: null, contextInfo: null, thumbnailHeight: 0, thumbnailWidth: 0}, end);
};
DocumentMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.mimetype = pbf.readString();
    else if (tag === 3) obj.title = pbf.readString();
    else if (tag === 4) obj.fileSha256 = pbf.readBytes();
    else if (tag === 5) obj.fileLength = pbf.readVarint();
    else if (tag === 6) obj.pageCount = pbf.readVarint();
    else if (tag === 7) obj.mediaKey = pbf.readBytes();
    else if (tag === 8) obj.fileName = pbf.readString();
    else if (tag === 9) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 10) obj.directPath = pbf.readString();
    else if (tag === 11) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 12) obj.contactVcard = pbf.readBoolean();
    else if (tag === 13) obj.thumbnailDirectPath = pbf.readString();
    else if (tag === 14) obj.thumbnailSha256 = pbf.readBytes();
    else if (tag === 15) obj.thumbnailEncSha256 = pbf.readBytes();
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.thumbnailHeight = pbf.readVarint();
    else if (tag === 19) obj.thumbnailWidth = pbf.readVarint();
};
DocumentMessage.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.mimetype) pbf.writeStringField(2, obj.mimetype);
    if (obj.title) pbf.writeStringField(3, obj.title);
    if (obj.fileSha256) pbf.writeBytesField(4, obj.fileSha256);
    if (obj.fileLength) pbf.writeVarintField(5, obj.fileLength);
    if (obj.pageCount) pbf.writeVarintField(6, obj.pageCount);
    if (obj.mediaKey) pbf.writeBytesField(7, obj.mediaKey);
    if (obj.fileName) pbf.writeStringField(8, obj.fileName);
    if (obj.fileEncSha256) pbf.writeBytesField(9, obj.fileEncSha256);
    if (obj.directPath) pbf.writeStringField(10, obj.directPath);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(11, obj.mediaKeyTimestamp);
    if (obj.contactVcard) pbf.writeBooleanField(12, obj.contactVcard);
    if (obj.thumbnailDirectPath) pbf.writeStringField(13, obj.thumbnailDirectPath);
    if (obj.thumbnailSha256) pbf.writeBytesField(14, obj.thumbnailSha256);
    if (obj.thumbnailEncSha256) pbf.writeBytesField(15, obj.thumbnailEncSha256);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
    if (obj.thumbnailHeight) pbf.writeVarintField(18, obj.thumbnailHeight);
    if (obj.thumbnailWidth) pbf.writeVarintField(19, obj.thumbnailWidth);
};

// AudioMessage ========================================

var AudioMessage = self.AudioMessage = {};

AudioMessage.read = function (pbf, end) {
    return pbf.readFields(AudioMessage._readField, {url: "", mimetype: "", fileSha256: null, fileLength: 0, seconds: 0, ptt: false, mediaKey: null, fileEncSha256: null, directPath: "", mediaKeyTimestamp: 0, contextInfo: null, streamingSidecar: null, waveform: null}, end);
};
AudioMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.mimetype = pbf.readString();
    else if (tag === 3) obj.fileSha256 = pbf.readBytes();
    else if (tag === 4) obj.fileLength = pbf.readVarint();
    else if (tag === 5) obj.seconds = pbf.readVarint();
    else if (tag === 6) obj.ptt = pbf.readBoolean();
    else if (tag === 7) obj.mediaKey = pbf.readBytes();
    else if (tag === 8) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 9) obj.directPath = pbf.readString();
    else if (tag === 10) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.streamingSidecar = pbf.readBytes();
    else if (tag === 19) obj.waveform = pbf.readBytes();
};
AudioMessage.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.mimetype) pbf.writeStringField(2, obj.mimetype);
    if (obj.fileSha256) pbf.writeBytesField(3, obj.fileSha256);
    if (obj.fileLength) pbf.writeVarintField(4, obj.fileLength);
    if (obj.seconds) pbf.writeVarintField(5, obj.seconds);
    if (obj.ptt) pbf.writeBooleanField(6, obj.ptt);
    if (obj.mediaKey) pbf.writeBytesField(7, obj.mediaKey);
    if (obj.fileEncSha256) pbf.writeBytesField(8, obj.fileEncSha256);
    if (obj.directPath) pbf.writeStringField(9, obj.directPath);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(10, obj.mediaKeyTimestamp);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
    if (obj.streamingSidecar) pbf.writeBytesField(18, obj.streamingSidecar);
    if (obj.waveform) pbf.writeBytesField(19, obj.waveform);
};

// VideoMessage ========================================

var VideoMessage = self.VideoMessage = {};

VideoMessage.read = function (pbf, end) {
    return pbf.readFields(VideoMessage._readField, {url: "", mimetype: "", fileSha256: null, fileLength: 0, seconds: 0, mediaKey: null, caption: "", gifPlayback: false, height: 0, width: 0, fileEncSha256: null, interactiveAnnotations: [], directPath: "", mediaKeyTimestamp: 0, jpegThumbnail: null, contextInfo: null, streamingSidecar: null, gifAttribution: 0, viewOnce: false, thumbnailDirectPath: "", thumbnailSha256: null, thumbnailEncSha256: null, staticUrl: ""}, end);
};
VideoMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.mimetype = pbf.readString();
    else if (tag === 3) obj.fileSha256 = pbf.readBytes();
    else if (tag === 4) obj.fileLength = pbf.readVarint();
    else if (tag === 5) obj.seconds = pbf.readVarint();
    else if (tag === 6) obj.mediaKey = pbf.readBytes();
    else if (tag === 7) obj.caption = pbf.readString();
    else if (tag === 8) obj.gifPlayback = pbf.readBoolean();
    else if (tag === 9) obj.height = pbf.readVarint();
    else if (tag === 10) obj.width = pbf.readVarint();
    else if (tag === 11) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 12) obj.interactiveAnnotations.push(InteractiveAnnotation.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 13) obj.directPath = pbf.readString();
    else if (tag === 14) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.streamingSidecar = pbf.readBytes();
    else if (tag === 19) obj.gifAttribution = pbf.readVarint();
    else if (tag === 20) obj.viewOnce = pbf.readBoolean();
    else if (tag === 21) obj.thumbnailDirectPath = pbf.readString();
    else if (tag === 22) obj.thumbnailSha256 = pbf.readBytes();
    else if (tag === 23) obj.thumbnailEncSha256 = pbf.readBytes();
    else if (tag === 24) obj.staticUrl = pbf.readString();
};
VideoMessage.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.mimetype) pbf.writeStringField(2, obj.mimetype);
    if (obj.fileSha256) pbf.writeBytesField(3, obj.fileSha256);
    if (obj.fileLength) pbf.writeVarintField(4, obj.fileLength);
    if (obj.seconds) pbf.writeVarintField(5, obj.seconds);
    if (obj.mediaKey) pbf.writeBytesField(6, obj.mediaKey);
    if (obj.caption) pbf.writeStringField(7, obj.caption);
    if (obj.gifPlayback) pbf.writeBooleanField(8, obj.gifPlayback);
    if (obj.height) pbf.writeVarintField(9, obj.height);
    if (obj.width) pbf.writeVarintField(10, obj.width);
    if (obj.fileEncSha256) pbf.writeBytesField(11, obj.fileEncSha256);
    if (obj.interactiveAnnotations) for (var i = 0; i < obj.interactiveAnnotations.length; i++) pbf.writeMessage(12, InteractiveAnnotation.write, obj.interactiveAnnotations[i]);
    if (obj.directPath) pbf.writeStringField(13, obj.directPath);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(14, obj.mediaKeyTimestamp);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
    if (obj.streamingSidecar) pbf.writeBytesField(18, obj.streamingSidecar);
    if (obj.gifAttribution) pbf.writeVarintField(19, obj.gifAttribution);
    if (obj.viewOnce) pbf.writeBooleanField(20, obj.viewOnce);
    if (obj.thumbnailDirectPath) pbf.writeStringField(21, obj.thumbnailDirectPath);
    if (obj.thumbnailSha256) pbf.writeBytesField(22, obj.thumbnailSha256);
    if (obj.thumbnailEncSha256) pbf.writeBytesField(23, obj.thumbnailEncSha256);
    if (obj.staticUrl) pbf.writeStringField(24, obj.staticUrl);
};

VideoMessage.VideoMessageAttribution = {
    "NONE": {
        "value": 0,
        "options": {}
    },
    "GIPHY": {
        "value": 1,
        "options": {}
    },
    "TENOR": {
        "value": 2,
        "options": {}
    }
};

// Call ========================================

var Call = self.Call = {};

Call.read = function (pbf, end) {
    return pbf.readFields(Call._readField, {callKey: null, conversionSource: "", conversionData: null, conversionDelaySeconds: 0}, end);
};
Call._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.callKey = pbf.readBytes();
    else if (tag === 2) obj.conversionSource = pbf.readString();
    else if (tag === 3) obj.conversionData = pbf.readBytes();
    else if (tag === 4) obj.conversionDelaySeconds = pbf.readVarint();
};
Call.write = function (obj, pbf) {
    if (obj.callKey) pbf.writeBytesField(1, obj.callKey);
    if (obj.conversionSource) pbf.writeStringField(2, obj.conversionSource);
    if (obj.conversionData) pbf.writeBytesField(3, obj.conversionData);
    if (obj.conversionDelaySeconds) pbf.writeVarintField(4, obj.conversionDelaySeconds);
};

// Chat ========================================

var Chat = self.Chat = {};

Chat.read = function (pbf, end) {
    return pbf.readFields(Chat._readField, {displayName: "", id: ""}, end);
};
Chat._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayName = pbf.readString();
    else if (tag === 2) obj.id = pbf.readString();
};
Chat.write = function (obj, pbf) {
    if (obj.displayName) pbf.writeStringField(1, obj.displayName);
    if (obj.id) pbf.writeStringField(2, obj.id);
};

// ProtocolMessage ========================================

var ProtocolMessage = self.ProtocolMessage = {};

ProtocolMessage.read = function (pbf, end) {
    return pbf.readFields(ProtocolMessage._readField, {key: null, type: 0, ephemeralExpiration: 0, ephemeralSettingTimestamp: 0, historySyncNotification: null, appStateSyncKeyShare: null, appStateSyncKeyRequest: null, initialSecurityNotificationSettingSync: null, appStateFatalExceptionNotification: null, disappearingMode: null}, end);
};
ProtocolMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.type = pbf.readVarint();
    else if (tag === 4) obj.ephemeralExpiration = pbf.readVarint();
    else if (tag === 5) obj.ephemeralSettingTimestamp = pbf.readVarint(true);
    else if (tag === 6) obj.historySyncNotification = HistorySyncNotification.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.appStateSyncKeyShare = AppStateSyncKeyShare.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.appStateSyncKeyRequest = AppStateSyncKeyRequest.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 9) obj.initialSecurityNotificationSettingSync = InitialSecurityNotificationSettingSync.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 10) obj.appStateFatalExceptionNotification = AppStateFatalExceptionNotification.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 11) obj.disappearingMode = DisappearingMode.read(pbf, pbf.readVarint() + pbf.pos);
};
ProtocolMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.type) pbf.writeVarintField(2, obj.type);
    if (obj.ephemeralExpiration) pbf.writeVarintField(4, obj.ephemeralExpiration);
    if (obj.ephemeralSettingTimestamp) pbf.writeVarintField(5, obj.ephemeralSettingTimestamp);
    if (obj.historySyncNotification) pbf.writeMessage(6, HistorySyncNotification.write, obj.historySyncNotification);
    if (obj.appStateSyncKeyShare) pbf.writeMessage(7, AppStateSyncKeyShare.write, obj.appStateSyncKeyShare);
    if (obj.appStateSyncKeyRequest) pbf.writeMessage(8, AppStateSyncKeyRequest.write, obj.appStateSyncKeyRequest);
    if (obj.initialSecurityNotificationSettingSync) pbf.writeMessage(9, InitialSecurityNotificationSettingSync.write, obj.initialSecurityNotificationSettingSync);
    if (obj.appStateFatalExceptionNotification) pbf.writeMessage(10, AppStateFatalExceptionNotification.write, obj.appStateFatalExceptionNotification);
    if (obj.disappearingMode) pbf.writeMessage(11, DisappearingMode.write, obj.disappearingMode);
};

ProtocolMessage.ProtocolMessageType = {
    "REVOKE": {
        "value": 0,
        "options": {}
    },
    "EPHEMERAL_SETTING": {
        "value": 3,
        "options": {}
    },
    "EPHEMERAL_SYNC_RESPONSE": {
        "value": 4,
        "options": {}
    },
    "HISTORY_SYNC_NOTIFICATION": {
        "value": 5,
        "options": {}
    },
    "APP_STATE_SYNC_KEY_SHARE": {
        "value": 6,
        "options": {}
    },
    "APP_STATE_SYNC_KEY_REQUEST": {
        "value": 7,
        "options": {}
    },
    "MSG_FANOUT_BACKFILL_REQUEST": {
        "value": 8,
        "options": {}
    },
    "INITIAL_SECURITY_NOTIFICATION_SETTING_SYNC": {
        "value": 9,
        "options": {}
    },
    "APP_STATE_FATAL_EXCEPTION_NOTIFICATION": {
        "value": 10,
        "options": {}
    }
};

// HistorySyncNotification ========================================

var HistorySyncNotification = self.HistorySyncNotification = {};

HistorySyncNotification.read = function (pbf, end) {
    return pbf.readFields(HistorySyncNotification._readField, {fileSha256: null, fileLength: 0, mediaKey: null, fileEncSha256: null, directPath: "", syncType: 0, chunkOrder: 0, originalMessageId: ""}, end);
};
HistorySyncNotification._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.fileSha256 = pbf.readBytes();
    else if (tag === 2) obj.fileLength = pbf.readVarint();
    else if (tag === 3) obj.mediaKey = pbf.readBytes();
    else if (tag === 4) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 5) obj.directPath = pbf.readString();
    else if (tag === 6) obj.syncType = pbf.readVarint();
    else if (tag === 7) obj.chunkOrder = pbf.readVarint();
    else if (tag === 8) obj.originalMessageId = pbf.readString();
};
HistorySyncNotification.write = function (obj, pbf) {
    if (obj.fileSha256) pbf.writeBytesField(1, obj.fileSha256);
    if (obj.fileLength) pbf.writeVarintField(2, obj.fileLength);
    if (obj.mediaKey) pbf.writeBytesField(3, obj.mediaKey);
    if (obj.fileEncSha256) pbf.writeBytesField(4, obj.fileEncSha256);
    if (obj.directPath) pbf.writeStringField(5, obj.directPath);
    if (obj.syncType) pbf.writeVarintField(6, obj.syncType);
    if (obj.chunkOrder) pbf.writeVarintField(7, obj.chunkOrder);
    if (obj.originalMessageId) pbf.writeStringField(8, obj.originalMessageId);
};

HistorySyncNotification.HistorySyncNotificationHistorySyncType = {
    "INITIAL_BOOTSTRAP": {
        "value": 0,
        "options": {}
    },
    "INITIAL_STATUS_V3": {
        "value": 1,
        "options": {}
    },
    "FULL": {
        "value": 2,
        "options": {}
    },
    "RECENT": {
        "value": 3,
        "options": {}
    },
    "PUSH_NAME": {
        "value": 4,
        "options": {}
    }
};

// AppStateSyncKey ========================================

var AppStateSyncKey = self.AppStateSyncKey = {};

AppStateSyncKey.read = function (pbf, end) {
    return pbf.readFields(AppStateSyncKey._readField, {keyId: null, keyData: null}, end);
};
AppStateSyncKey._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.keyId = AppStateSyncKeyId.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.keyData = AppStateSyncKeyData.read(pbf, pbf.readVarint() + pbf.pos);
};
AppStateSyncKey.write = function (obj, pbf) {
    if (obj.keyId) pbf.writeMessage(1, AppStateSyncKeyId.write, obj.keyId);
    if (obj.keyData) pbf.writeMessage(2, AppStateSyncKeyData.write, obj.keyData);
};

// AppStateSyncKeyId ========================================

var AppStateSyncKeyId = self.AppStateSyncKeyId = {};

AppStateSyncKeyId.read = function (pbf, end) {
    return pbf.readFields(AppStateSyncKeyId._readField, {keyId: null}, end);
};
AppStateSyncKeyId._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.keyId = pbf.readBytes();
};
AppStateSyncKeyId.write = function (obj, pbf) {
    if (obj.keyId) pbf.writeBytesField(1, obj.keyId);
};

// AppStateSyncKeyFingerprint ========================================

var AppStateSyncKeyFingerprint = self.AppStateSyncKeyFingerprint = {};

AppStateSyncKeyFingerprint.read = function (pbf, end) {
    return pbf.readFields(AppStateSyncKeyFingerprint._readField, {rawId: 0, currentIndex: 0, deviceIndexes: []}, end);
};
AppStateSyncKeyFingerprint._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.rawId = pbf.readVarint();
    else if (tag === 2) obj.currentIndex = pbf.readVarint();
    else if (tag === 3) pbf.readPackedVarint(obj.deviceIndexes);
};
AppStateSyncKeyFingerprint.write = function (obj, pbf) {
    if (obj.rawId) pbf.writeVarintField(1, obj.rawId);
    if (obj.currentIndex) pbf.writeVarintField(2, obj.currentIndex);
    if (obj.deviceIndexes) pbf.writePackedVarint(3, obj.deviceIndexes);
};

// AppStateSyncKeyData ========================================

var AppStateSyncKeyData = self.AppStateSyncKeyData = {};

AppStateSyncKeyData.read = function (pbf, end) {
    return pbf.readFields(AppStateSyncKeyData._readField, {keyData: null, fingerprint: null, timestamp: 0}, end);
};
AppStateSyncKeyData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.keyData = pbf.readBytes();
    else if (tag === 2) obj.fingerprint = AppStateSyncKeyFingerprint.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.timestamp = pbf.readVarint(true);
};
AppStateSyncKeyData.write = function (obj, pbf) {
    if (obj.keyData) pbf.writeBytesField(1, obj.keyData);
    if (obj.fingerprint) pbf.writeMessage(2, AppStateSyncKeyFingerprint.write, obj.fingerprint);
    if (obj.timestamp) pbf.writeVarintField(3, obj.timestamp);
};

// AppStateSyncKeyShare ========================================

var AppStateSyncKeyShare = self.AppStateSyncKeyShare = {};

AppStateSyncKeyShare.read = function (pbf, end) {
    return pbf.readFields(AppStateSyncKeyShare._readField, {keys: []}, end);
};
AppStateSyncKeyShare._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.keys.push(AppStateSyncKey.read(pbf, pbf.readVarint() + pbf.pos));
};
AppStateSyncKeyShare.write = function (obj, pbf) {
    if (obj.keys) for (var i = 0; i < obj.keys.length; i++) pbf.writeMessage(1, AppStateSyncKey.write, obj.keys[i]);
};

// AppStateSyncKeyRequest ========================================

var AppStateSyncKeyRequest = self.AppStateSyncKeyRequest = {};

AppStateSyncKeyRequest.read = function (pbf, end) {
    return pbf.readFields(AppStateSyncKeyRequest._readField, {keyIds: []}, end);
};
AppStateSyncKeyRequest._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.keyIds.push(AppStateSyncKeyId.read(pbf, pbf.readVarint() + pbf.pos));
};
AppStateSyncKeyRequest.write = function (obj, pbf) {
    if (obj.keyIds) for (var i = 0; i < obj.keyIds.length; i++) pbf.writeMessage(1, AppStateSyncKeyId.write, obj.keyIds[i]);
};

// AppStateFatalExceptionNotification ========================================

var AppStateFatalExceptionNotification = self.AppStateFatalExceptionNotification = {};

AppStateFatalExceptionNotification.read = function (pbf, end) {
    return pbf.readFields(AppStateFatalExceptionNotification._readField, {collectionNames: [], timestamp: 0}, end);
};
AppStateFatalExceptionNotification._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.collectionNames.push(pbf.readString());
    else if (tag === 2) obj.timestamp = pbf.readVarint(true);
};
AppStateFatalExceptionNotification.write = function (obj, pbf) {
    if (obj.collectionNames) for (var i = 0; i < obj.collectionNames.length; i++) pbf.writeStringField(1, obj.collectionNames[i]);
    if (obj.timestamp) pbf.writeVarintField(2, obj.timestamp);
};

// InitialSecurityNotificationSettingSync ========================================

var InitialSecurityNotificationSettingSync = self.InitialSecurityNotificationSettingSync = {};

InitialSecurityNotificationSettingSync.read = function (pbf, end) {
    return pbf.readFields(InitialSecurityNotificationSettingSync._readField, {securityNotificationEnabled: false}, end);
};
InitialSecurityNotificationSettingSync._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.securityNotificationEnabled = pbf.readBoolean();
};
InitialSecurityNotificationSettingSync.write = function (obj, pbf) {
    if (obj.securityNotificationEnabled) pbf.writeBooleanField(1, obj.securityNotificationEnabled);
};

// ContactsArrayMessage ========================================

var ContactsArrayMessage = self.ContactsArrayMessage = {};

ContactsArrayMessage.read = function (pbf, end) {
    return pbf.readFields(ContactsArrayMessage._readField, {displayName: "", contacts: [], contextInfo: null}, end);
};
ContactsArrayMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayName = pbf.readString();
    else if (tag === 2) obj.contacts.push(ContactMessage.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
ContactsArrayMessage.write = function (obj, pbf) {
    if (obj.displayName) pbf.writeStringField(1, obj.displayName);
    if (obj.contacts) for (var i = 0; i < obj.contacts.length; i++) pbf.writeMessage(2, ContactMessage.write, obj.contacts[i]);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

// HSMCurrency ========================================

var HSMCurrency = self.HSMCurrency = {};

HSMCurrency.read = function (pbf, end) {
    return pbf.readFields(HSMCurrency._readField, {currencyCode: "", amount1000: 0}, end);
};
HSMCurrency._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.currencyCode = pbf.readString();
    else if (tag === 2) obj.amount1000 = pbf.readVarint(true);
};
HSMCurrency.write = function (obj, pbf) {
    if (obj.currencyCode) pbf.writeStringField(1, obj.currencyCode);
    if (obj.amount1000) pbf.writeVarintField(2, obj.amount1000);
};

// HSMDateTimeComponent ========================================

var HSMDateTimeComponent = self.HSMDateTimeComponent = {};

HSMDateTimeComponent.read = function (pbf, end) {
    return pbf.readFields(HSMDateTimeComponent._readField, {dayOfWeek: 0, year: 0, month: 0, dayOfMonth: 0, hour: 0, minute: 0, calendar: 0}, end);
};
HSMDateTimeComponent._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.dayOfWeek = pbf.readVarint();
    else if (tag === 2) obj.year = pbf.readVarint();
    else if (tag === 3) obj.month = pbf.readVarint();
    else if (tag === 4) obj.dayOfMonth = pbf.readVarint();
    else if (tag === 5) obj.hour = pbf.readVarint();
    else if (tag === 6) obj.minute = pbf.readVarint();
    else if (tag === 7) obj.calendar = pbf.readVarint();
};
HSMDateTimeComponent.write = function (obj, pbf) {
    if (obj.dayOfWeek) pbf.writeVarintField(1, obj.dayOfWeek);
    if (obj.year) pbf.writeVarintField(2, obj.year);
    if (obj.month) pbf.writeVarintField(3, obj.month);
    if (obj.dayOfMonth) pbf.writeVarintField(4, obj.dayOfMonth);
    if (obj.hour) pbf.writeVarintField(5, obj.hour);
    if (obj.minute) pbf.writeVarintField(6, obj.minute);
    if (obj.calendar) pbf.writeVarintField(7, obj.calendar);
};

HSMDateTimeComponent.HSMDateTimeComponentDayOfWeekType = {
    "MONDAY": {
        "value": 1,
        "options": {}
    },
    "TUESDAY": {
        "value": 2,
        "options": {}
    },
    "WEDNESDAY": {
        "value": 3,
        "options": {}
    },
    "THURSDAY": {
        "value": 4,
        "options": {}
    },
    "FRIDAY": {
        "value": 5,
        "options": {}
    },
    "SATURDAY": {
        "value": 6,
        "options": {}
    },
    "SUNDAY": {
        "value": 7,
        "options": {}
    }
};

HSMDateTimeComponent.HSMDateTimeComponentCalendarType = {
    "GREGORIAN": {
        "value": 1,
        "options": {}
    },
    "SOLAR_HIJRI": {
        "value": 2,
        "options": {}
    }
};

// HSMDateTimeUnixEpoch ========================================

var HSMDateTimeUnixEpoch = self.HSMDateTimeUnixEpoch = {};

HSMDateTimeUnixEpoch.read = function (pbf, end) {
    return pbf.readFields(HSMDateTimeUnixEpoch._readField, {timestamp: 0}, end);
};
HSMDateTimeUnixEpoch._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.timestamp = pbf.readVarint(true);
};
HSMDateTimeUnixEpoch.write = function (obj, pbf) {
    if (obj.timestamp) pbf.writeVarintField(1, obj.timestamp);
};

// HSMDateTime ========================================

var HSMDateTime = self.HSMDateTime = {};

HSMDateTime.read = function (pbf, end) {
    return pbf.readFields(HSMDateTime._readField, {component: null, datetimeOneof: null, unixEpoch: null}, end);
};
HSMDateTime._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.component = HSMDateTimeComponent.read(pbf, pbf.readVarint() + pbf.pos), obj.datetimeOneof = "component";
    else if (tag === 2) obj.unixEpoch = HSMDateTimeUnixEpoch.read(pbf, pbf.readVarint() + pbf.pos), obj.datetimeOneof = "unixEpoch";
};
HSMDateTime.write = function (obj, pbf) {
    if (obj.component) pbf.writeMessage(1, HSMDateTimeComponent.write, obj.component);
    if (obj.unixEpoch) pbf.writeMessage(2, HSMDateTimeUnixEpoch.write, obj.unixEpoch);
};

// HSMLocalizableParameter ========================================

var HSMLocalizableParameter = self.HSMLocalizableParameter = {};

HSMLocalizableParameter.read = function (pbf, end) {
    return pbf.readFields(HSMLocalizableParameter._readField, {default: "", currency: null, paramOneof: null, dateTime: null}, end);
};
HSMLocalizableParameter._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.default = pbf.readString();
    else if (tag === 2) obj.currency = HSMCurrency.read(pbf, pbf.readVarint() + pbf.pos), obj.paramOneof = "currency";
    else if (tag === 3) obj.dateTime = HSMDateTime.read(pbf, pbf.readVarint() + pbf.pos), obj.paramOneof = "dateTime";
};
HSMLocalizableParameter.write = function (obj, pbf) {
    if (obj.default) pbf.writeStringField(1, obj.default);
    if (obj.currency) pbf.writeMessage(2, HSMCurrency.write, obj.currency);
    if (obj.dateTime) pbf.writeMessage(3, HSMDateTime.write, obj.dateTime);
};

// HighlyStructuredMessage ========================================

var HighlyStructuredMessage = self.HighlyStructuredMessage = {};

HighlyStructuredMessage.read = function (pbf, end) {
    return pbf.readFields(HighlyStructuredMessage._readField, {namespace: "", elementName: "", params: [], fallbackLg: "", fallbackLc: "", localizableParams: [], deterministicLg: "", deterministicLc: "", hydratedHsm: null}, end);
};
HighlyStructuredMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.namespace = pbf.readString();
    else if (tag === 2) obj.elementName = pbf.readString();
    else if (tag === 3) obj.params.push(pbf.readString());
    else if (tag === 4) obj.fallbackLg = pbf.readString();
    else if (tag === 5) obj.fallbackLc = pbf.readString();
    else if (tag === 6) obj.localizableParams.push(HSMLocalizableParameter.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 7) obj.deterministicLg = pbf.readString();
    else if (tag === 8) obj.deterministicLc = pbf.readString();
    else if (tag === 9) obj.hydratedHsm = TemplateMessage.read(pbf, pbf.readVarint() + pbf.pos);
};
HighlyStructuredMessage.write = function (obj, pbf) {
    if (obj.namespace) pbf.writeStringField(1, obj.namespace);
    if (obj.elementName) pbf.writeStringField(2, obj.elementName);
    if (obj.params) for (var i = 0; i < obj.params.length; i++) pbf.writeStringField(3, obj.params[i]);
    if (obj.fallbackLg) pbf.writeStringField(4, obj.fallbackLg);
    if (obj.fallbackLc) pbf.writeStringField(5, obj.fallbackLc);
    if (obj.localizableParams) for (i = 0; i < obj.localizableParams.length; i++) pbf.writeMessage(6, HSMLocalizableParameter.write, obj.localizableParams[i]);
    if (obj.deterministicLg) pbf.writeStringField(7, obj.deterministicLg);
    if (obj.deterministicLc) pbf.writeStringField(8, obj.deterministicLc);
    if (obj.hydratedHsm) pbf.writeMessage(9, TemplateMessage.write, obj.hydratedHsm);
};

// SendPaymentMessage ========================================

var SendPaymentMessage = self.SendPaymentMessage = {};

SendPaymentMessage.read = function (pbf, end) {
    return pbf.readFields(SendPaymentMessage._readField, {noteMessage: null, requestMessageKey: null, background: null}, end);
};
SendPaymentMessage._readField = function (tag, obj, pbf) {
    if (tag === 2) obj.noteMessage = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.requestMessageKey = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.background = PaymentBackground.read(pbf, pbf.readVarint() + pbf.pos);
};
SendPaymentMessage.write = function (obj, pbf) {
    if (obj.noteMessage) pbf.writeMessage(2, Message.write, obj.noteMessage);
    if (obj.requestMessageKey) pbf.writeMessage(3, MessageKey.write, obj.requestMessageKey);
    if (obj.background) pbf.writeMessage(4, PaymentBackground.write, obj.background);
};

// RequestPaymentMessage ========================================

var RequestPaymentMessage = self.RequestPaymentMessage = {};

RequestPaymentMessage.read = function (pbf, end) {
    return pbf.readFields(RequestPaymentMessage._readField, {noteMessage: null, currencyCodeIso4217: "", amount1000: 0, requestFrom: "", expiryTimestamp: 0, amount: null, background: null}, end);
};
RequestPaymentMessage._readField = function (tag, obj, pbf) {
    if (tag === 4) obj.noteMessage = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 1) obj.currencyCodeIso4217 = pbf.readString();
    else if (tag === 2) obj.amount1000 = pbf.readVarint();
    else if (tag === 3) obj.requestFrom = pbf.readString();
    else if (tag === 5) obj.expiryTimestamp = pbf.readVarint(true);
    else if (tag === 6) obj.amount = Money.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.background = PaymentBackground.read(pbf, pbf.readVarint() + pbf.pos);
};
RequestPaymentMessage.write = function (obj, pbf) {
    if (obj.noteMessage) pbf.writeMessage(4, Message.write, obj.noteMessage);
    if (obj.currencyCodeIso4217) pbf.writeStringField(1, obj.currencyCodeIso4217);
    if (obj.amount1000) pbf.writeVarintField(2, obj.amount1000);
    if (obj.requestFrom) pbf.writeStringField(3, obj.requestFrom);
    if (obj.expiryTimestamp) pbf.writeVarintField(5, obj.expiryTimestamp);
    if (obj.amount) pbf.writeMessage(6, Money.write, obj.amount);
    if (obj.background) pbf.writeMessage(7, PaymentBackground.write, obj.background);
};

// DeclinePaymentRequestMessage ========================================

var DeclinePaymentRequestMessage = self.DeclinePaymentRequestMessage = {};

DeclinePaymentRequestMessage.read = function (pbf, end) {
    return pbf.readFields(DeclinePaymentRequestMessage._readField, {key: null}, end);
};
DeclinePaymentRequestMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
};
DeclinePaymentRequestMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
};

// CancelPaymentRequestMessage ========================================

var CancelPaymentRequestMessage = self.CancelPaymentRequestMessage = {};

CancelPaymentRequestMessage.read = function (pbf, end) {
    return pbf.readFields(CancelPaymentRequestMessage._readField, {key: null}, end);
};
CancelPaymentRequestMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
};
CancelPaymentRequestMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
};

// PaymentInviteMessage ========================================

var PaymentInviteMessage = self.PaymentInviteMessage = {};

PaymentInviteMessage.read = function (pbf, end) {
    return pbf.readFields(PaymentInviteMessage._readField, {serviceType: 0, expiryTimestamp: 0}, end);
};
PaymentInviteMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.serviceType = pbf.readVarint();
    else if (tag === 2) obj.expiryTimestamp = pbf.readVarint(true);
};
PaymentInviteMessage.write = function (obj, pbf) {
    if (obj.serviceType) pbf.writeVarintField(1, obj.serviceType);
    if (obj.expiryTimestamp) pbf.writeVarintField(2, obj.expiryTimestamp);
};

PaymentInviteMessage.PaymentInviteMessageServiceType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "FBPAY": {
        "value": 1,
        "options": {}
    },
    "NOVI": {
        "value": 2,
        "options": {}
    },
    "UPI": {
        "value": 3,
        "options": {}
    }
};

// LiveLocationMessage ========================================

var LiveLocationMessage = self.LiveLocationMessage = {};

LiveLocationMessage.read = function (pbf, end) {
    return pbf.readFields(LiveLocationMessage._readField, {degreesLatitude: 0, degreesLongitude: 0, accuracyInMeters: 0, speedInMps: 0, degreesClockwiseFromMagneticNorth: 0, caption: "", sequenceNumber: 0, timeOffset: 0, jpegThumbnail: null, contextInfo: null}, end);
};
LiveLocationMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.degreesLatitude = pbf.readDouble();
    else if (tag === 2) obj.degreesLongitude = pbf.readDouble();
    else if (tag === 3) obj.accuracyInMeters = pbf.readVarint();
    else if (tag === 4) obj.speedInMps = pbf.readFloat();
    else if (tag === 5) obj.degreesClockwiseFromMagneticNorth = pbf.readVarint();
    else if (tag === 6) obj.caption = pbf.readString();
    else if (tag === 7) obj.sequenceNumber = pbf.readVarint(true);
    else if (tag === 8) obj.timeOffset = pbf.readVarint();
    else if (tag === 16) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
LiveLocationMessage.write = function (obj, pbf) {
    if (obj.degreesLatitude) pbf.writeDoubleField(1, obj.degreesLatitude);
    if (obj.degreesLongitude) pbf.writeDoubleField(2, obj.degreesLongitude);
    if (obj.accuracyInMeters) pbf.writeVarintField(3, obj.accuracyInMeters);
    if (obj.speedInMps) pbf.writeFloatField(4, obj.speedInMps);
    if (obj.degreesClockwiseFromMagneticNorth) pbf.writeVarintField(5, obj.degreesClockwiseFromMagneticNorth);
    if (obj.caption) pbf.writeStringField(6, obj.caption);
    if (obj.sequenceNumber) pbf.writeVarintField(7, obj.sequenceNumber);
    if (obj.timeOffset) pbf.writeVarintField(8, obj.timeOffset);
    if (obj.jpegThumbnail) pbf.writeBytesField(16, obj.jpegThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

// StickerMessage ========================================

var StickerMessage = self.StickerMessage = {};

StickerMessage.read = function (pbf, end) {
    return pbf.readFields(StickerMessage._readField, {url: "", fileSha256: null, fileEncSha256: null, mediaKey: null, mimetype: "", height: 0, width: 0, directPath: "", fileLength: 0, mediaKeyTimestamp: 0, firstFrameLength: 0, firstFrameSidecar: null, isAnimated: false, pngThumbnail: null, contextInfo: null}, end);
};
StickerMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.fileSha256 = pbf.readBytes();
    else if (tag === 3) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 4) obj.mediaKey = pbf.readBytes();
    else if (tag === 5) obj.mimetype = pbf.readString();
    else if (tag === 6) obj.height = pbf.readVarint();
    else if (tag === 7) obj.width = pbf.readVarint();
    else if (tag === 8) obj.directPath = pbf.readString();
    else if (tag === 9) obj.fileLength = pbf.readVarint();
    else if (tag === 10) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 11) obj.firstFrameLength = pbf.readVarint();
    else if (tag === 12) obj.firstFrameSidecar = pbf.readBytes();
    else if (tag === 13) obj.isAnimated = pbf.readBoolean();
    else if (tag === 16) obj.pngThumbnail = pbf.readBytes();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
StickerMessage.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.fileSha256) pbf.writeBytesField(2, obj.fileSha256);
    if (obj.fileEncSha256) pbf.writeBytesField(3, obj.fileEncSha256);
    if (obj.mediaKey) pbf.writeBytesField(4, obj.mediaKey);
    if (obj.mimetype) pbf.writeStringField(5, obj.mimetype);
    if (obj.height) pbf.writeVarintField(6, obj.height);
    if (obj.width) pbf.writeVarintField(7, obj.width);
    if (obj.directPath) pbf.writeStringField(8, obj.directPath);
    if (obj.fileLength) pbf.writeVarintField(9, obj.fileLength);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(10, obj.mediaKeyTimestamp);
    if (obj.firstFrameLength) pbf.writeVarintField(11, obj.firstFrameLength);
    if (obj.firstFrameSidecar) pbf.writeBytesField(12, obj.firstFrameSidecar);
    if (obj.isAnimated) pbf.writeBooleanField(13, obj.isAnimated);
    if (obj.pngThumbnail) pbf.writeBytesField(16, obj.pngThumbnail);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

// FourRowTemplate ========================================

var FourRowTemplate = self.FourRowTemplate = {};

FourRowTemplate.read = function (pbf, end) {
    return pbf.readFields(FourRowTemplate._readField, {content: null, footer: null, buttons: [], documentMessage: null, title: null, highlyStructuredMessage: null, imageMessage: null, videoMessage: null, locationMessage: null}, end);
};
FourRowTemplate._readField = function (tag, obj, pbf) {
    if (tag === 6) obj.content = HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.footer = HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.buttons.push(TemplateButton.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 1) obj.documentMessage = DocumentMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "documentMessage";
    else if (tag === 2) obj.highlyStructuredMessage = HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "highlyStructuredMessage";
    else if (tag === 3) obj.imageMessage = ImageMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "imageMessage";
    else if (tag === 4) obj.videoMessage = VideoMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "videoMessage";
    else if (tag === 5) obj.locationMessage = LocationMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "locationMessage";
};
FourRowTemplate.write = function (obj, pbf) {
    if (obj.content) pbf.writeMessage(6, HighlyStructuredMessage.write, obj.content);
    if (obj.footer) pbf.writeMessage(7, HighlyStructuredMessage.write, obj.footer);
    if (obj.buttons) for (var i = 0; i < obj.buttons.length; i++) pbf.writeMessage(8, TemplateButton.write, obj.buttons[i]);
    if (obj.documentMessage) pbf.writeMessage(1, DocumentMessage.write, obj.documentMessage);
    if (obj.highlyStructuredMessage) pbf.writeMessage(2, HighlyStructuredMessage.write, obj.highlyStructuredMessage);
    if (obj.imageMessage) pbf.writeMessage(3, ImageMessage.write, obj.imageMessage);
    if (obj.videoMessage) pbf.writeMessage(4, VideoMessage.write, obj.videoMessage);
    if (obj.locationMessage) pbf.writeMessage(5, LocationMessage.write, obj.locationMessage);
};

// HydratedFourRowTemplate ========================================

var HydratedFourRowTemplate = self.HydratedFourRowTemplate = {};

HydratedFourRowTemplate.read = function (pbf, end) {
    return pbf.readFields(HydratedFourRowTemplate._readField, {hydratedContentText: "", hydratedFooterText: "", hydratedButtons: [], templateId: "", documentMessage: null, title: null, hydratedTitleText: "", imageMessage: null, videoMessage: null, locationMessage: null}, end);
};
HydratedFourRowTemplate._readField = function (tag, obj, pbf) {
    if (tag === 6) obj.hydratedContentText = pbf.readString();
    else if (tag === 7) obj.hydratedFooterText = pbf.readString();
    else if (tag === 8) obj.hydratedButtons.push(HydratedTemplateButton.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 9) obj.templateId = pbf.readString();
    else if (tag === 1) obj.documentMessage = DocumentMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "documentMessage";
    else if (tag === 2) obj.hydratedTitleText = pbf.readString(), obj.title = "hydratedTitleText";
    else if (tag === 3) obj.imageMessage = ImageMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "imageMessage";
    else if (tag === 4) obj.videoMessage = VideoMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "videoMessage";
    else if (tag === 5) obj.locationMessage = LocationMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.title = "locationMessage";
};
HydratedFourRowTemplate.write = function (obj, pbf) {
    if (obj.hydratedContentText) pbf.writeStringField(6, obj.hydratedContentText);
    if (obj.hydratedFooterText) pbf.writeStringField(7, obj.hydratedFooterText);
    if (obj.hydratedButtons) for (var i = 0; i < obj.hydratedButtons.length; i++) pbf.writeMessage(8, HydratedTemplateButton.write, obj.hydratedButtons[i]);
    if (obj.templateId) pbf.writeStringField(9, obj.templateId);
    if (obj.documentMessage) pbf.writeMessage(1, DocumentMessage.write, obj.documentMessage);
    if (obj.hydratedTitleText) pbf.writeStringField(2, obj.hydratedTitleText);
    if (obj.imageMessage) pbf.writeMessage(3, ImageMessage.write, obj.imageMessage);
    if (obj.videoMessage) pbf.writeMessage(4, VideoMessage.write, obj.videoMessage);
    if (obj.locationMessage) pbf.writeMessage(5, LocationMessage.write, obj.locationMessage);
};

// TemplateMessage ========================================

var TemplateMessage = self.TemplateMessage = {};

TemplateMessage.read = function (pbf, end) {
    return pbf.readFields(TemplateMessage._readField, {contextInfo: null, hydratedTemplate: null, fourRowTemplate: null, format: null, hydratedFourRowTemplate: null}, end);
};
TemplateMessage._readField = function (tag, obj, pbf) {
    if (tag === 3) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.hydratedTemplate = HydratedFourRowTemplate.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 1) obj.fourRowTemplate = FourRowTemplate.read(pbf, pbf.readVarint() + pbf.pos), obj.format = "fourRowTemplate";
    else if (tag === 2) obj.hydratedFourRowTemplate = HydratedFourRowTemplate.read(pbf, pbf.readVarint() + pbf.pos), obj.format = "hydratedFourRowTemplate";
};
TemplateMessage.write = function (obj, pbf) {
    if (obj.contextInfo) pbf.writeMessage(3, ContextInfo.write, obj.contextInfo);
    if (obj.hydratedTemplate) pbf.writeMessage(4, HydratedFourRowTemplate.write, obj.hydratedTemplate);
    if (obj.fourRowTemplate) pbf.writeMessage(1, FourRowTemplate.write, obj.fourRowTemplate);
    if (obj.hydratedFourRowTemplate) pbf.writeMessage(2, HydratedFourRowTemplate.write, obj.hydratedFourRowTemplate);
};

// TemplateButtonReplyMessage ========================================

var TemplateButtonReplyMessage = self.TemplateButtonReplyMessage = {};

TemplateButtonReplyMessage.read = function (pbf, end) {
    return pbf.readFields(TemplateButtonReplyMessage._readField, {selectedId: "", selectedDisplayText: "", contextInfo: null, selectedIndex: 0}, end);
};
TemplateButtonReplyMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.selectedId = pbf.readString();
    else if (tag === 2) obj.selectedDisplayText = pbf.readString();
    else if (tag === 3) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.selectedIndex = pbf.readVarint();
};
TemplateButtonReplyMessage.write = function (obj, pbf) {
    if (obj.selectedId) pbf.writeStringField(1, obj.selectedId);
    if (obj.selectedDisplayText) pbf.writeStringField(2, obj.selectedDisplayText);
    if (obj.contextInfo) pbf.writeMessage(3, ContextInfo.write, obj.contextInfo);
    if (obj.selectedIndex) pbf.writeVarintField(4, obj.selectedIndex);
};

// CatalogSnapshot ========================================

var CatalogSnapshot = self.CatalogSnapshot = {};

CatalogSnapshot.read = function (pbf, end) {
    return pbf.readFields(CatalogSnapshot._readField, {catalogImage: null, title: "", description: ""}, end);
};
CatalogSnapshot._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.catalogImage = ImageMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.title = pbf.readString();
    else if (tag === 3) obj.description = pbf.readString();
};
CatalogSnapshot.write = function (obj, pbf) {
    if (obj.catalogImage) pbf.writeMessage(1, ImageMessage.write, obj.catalogImage);
    if (obj.title) pbf.writeStringField(2, obj.title);
    if (obj.description) pbf.writeStringField(3, obj.description);
};

// ProductSnapshot ========================================

var ProductSnapshot = self.ProductSnapshot = {};

ProductSnapshot.read = function (pbf, end) {
    return pbf.readFields(ProductSnapshot._readField, {productImage: null, productId: "", title: "", description: "", currencyCode: "", priceAmount1000: 0, retailerId: "", url: "", productImageCount: 0, firstImageId: "", salePriceAmount1000: 0}, end);
};
ProductSnapshot._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.productImage = ImageMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.productId = pbf.readString();
    else if (tag === 3) obj.title = pbf.readString();
    else if (tag === 4) obj.description = pbf.readString();
    else if (tag === 5) obj.currencyCode = pbf.readString();
    else if (tag === 6) obj.priceAmount1000 = pbf.readVarint(true);
    else if (tag === 7) obj.retailerId = pbf.readString();
    else if (tag === 8) obj.url = pbf.readString();
    else if (tag === 9) obj.productImageCount = pbf.readVarint();
    else if (tag === 11) obj.firstImageId = pbf.readString();
    else if (tag === 12) obj.salePriceAmount1000 = pbf.readVarint(true);
};
ProductSnapshot.write = function (obj, pbf) {
    if (obj.productImage) pbf.writeMessage(1, ImageMessage.write, obj.productImage);
    if (obj.productId) pbf.writeStringField(2, obj.productId);
    if (obj.title) pbf.writeStringField(3, obj.title);
    if (obj.description) pbf.writeStringField(4, obj.description);
    if (obj.currencyCode) pbf.writeStringField(5, obj.currencyCode);
    if (obj.priceAmount1000) pbf.writeVarintField(6, obj.priceAmount1000);
    if (obj.retailerId) pbf.writeStringField(7, obj.retailerId);
    if (obj.url) pbf.writeStringField(8, obj.url);
    if (obj.productImageCount) pbf.writeVarintField(9, obj.productImageCount);
    if (obj.firstImageId) pbf.writeStringField(11, obj.firstImageId);
    if (obj.salePriceAmount1000) pbf.writeVarintField(12, obj.salePriceAmount1000);
};

// ProductMessage ========================================

var ProductMessage = self.ProductMessage = {};

ProductMessage.read = function (pbf, end) {
    return pbf.readFields(ProductMessage._readField, {product: null, businessOwnerJid: "", catalog: null, body: "", footer: "", contextInfo: null}, end);
};
ProductMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.product = ProductSnapshot.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.businessOwnerJid = pbf.readString();
    else if (tag === 4) obj.catalog = CatalogSnapshot.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.body = pbf.readString();
    else if (tag === 6) obj.footer = pbf.readString();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
ProductMessage.write = function (obj, pbf) {
    if (obj.product) pbf.writeMessage(1, ProductSnapshot.write, obj.product);
    if (obj.businessOwnerJid) pbf.writeStringField(2, obj.businessOwnerJid);
    if (obj.catalog) pbf.writeMessage(4, CatalogSnapshot.write, obj.catalog);
    if (obj.body) pbf.writeStringField(5, obj.body);
    if (obj.footer) pbf.writeStringField(6, obj.footer);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

// OrderMessage ========================================

var OrderMessage = self.OrderMessage = {};

OrderMessage.read = function (pbf, end) {
    return pbf.readFields(OrderMessage._readField, {orderId: "", thumbnail: null, itemCount: 0, status: 0, surface: 0, message: "", orderTitle: "", sellerJid: "", token: "", totalAmount1000: 0, totalCurrencyCode: "", contextInfo: null}, end);
};
OrderMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.orderId = pbf.readString();
    else if (tag === 2) obj.thumbnail = pbf.readBytes();
    else if (tag === 3) obj.itemCount = pbf.readVarint(true);
    else if (tag === 4) obj.status = pbf.readVarint();
    else if (tag === 5) obj.surface = pbf.readVarint();
    else if (tag === 6) obj.message = pbf.readString();
    else if (tag === 7) obj.orderTitle = pbf.readString();
    else if (tag === 8) obj.sellerJid = pbf.readString();
    else if (tag === 9) obj.token = pbf.readString();
    else if (tag === 10) obj.totalAmount1000 = pbf.readVarint(true);
    else if (tag === 11) obj.totalCurrencyCode = pbf.readString();
    else if (tag === 17) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
OrderMessage.write = function (obj, pbf) {
    if (obj.orderId) pbf.writeStringField(1, obj.orderId);
    if (obj.thumbnail) pbf.writeBytesField(2, obj.thumbnail);
    if (obj.itemCount) pbf.writeVarintField(3, obj.itemCount);
    if (obj.status) pbf.writeVarintField(4, obj.status);
    if (obj.surface) pbf.writeVarintField(5, obj.surface);
    if (obj.message) pbf.writeStringField(6, obj.message);
    if (obj.orderTitle) pbf.writeStringField(7, obj.orderTitle);
    if (obj.sellerJid) pbf.writeStringField(8, obj.sellerJid);
    if (obj.token) pbf.writeStringField(9, obj.token);
    if (obj.totalAmount1000) pbf.writeVarintField(10, obj.totalAmount1000);
    if (obj.totalCurrencyCode) pbf.writeStringField(11, obj.totalCurrencyCode);
    if (obj.contextInfo) pbf.writeMessage(17, ContextInfo.write, obj.contextInfo);
};

OrderMessage.OrderMessageOrderStatus = {
    "INQUIRY": {
        "value": 1,
        "options": {}
    }
};

OrderMessage.OrderMessageOrderSurface = {
    "CATALOG": {
        "value": 1,
        "options": {}
    }
};

// Row ========================================

var Row = self.Row = {};

Row.read = function (pbf, end) {
    return pbf.readFields(Row._readField, {title: "", description: "", rowId: ""}, end);
};
Row._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.description = pbf.readString();
    else if (tag === 3) obj.rowId = pbf.readString();
};
Row.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.description) pbf.writeStringField(2, obj.description);
    if (obj.rowId) pbf.writeStringField(3, obj.rowId);
};

// Section ========================================

var Section = self.Section = {};

Section.read = function (pbf, end) {
    return pbf.readFields(Section._readField, {title: "", rows: []}, end);
};
Section._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.rows.push(Row.read(pbf, pbf.readVarint() + pbf.pos));
};
Section.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.rows) for (var i = 0; i < obj.rows.length; i++) pbf.writeMessage(2, Row.write, obj.rows[i]);
};

// Product ========================================

var Product = self.Product = {};

Product.read = function (pbf, end) {
    return pbf.readFields(Product._readField, {productId: ""}, end);
};
Product._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.productId = pbf.readString();
};
Product.write = function (obj, pbf) {
    if (obj.productId) pbf.writeStringField(1, obj.productId);
};

// ProductSection ========================================

var ProductSection = self.ProductSection = {};

ProductSection.read = function (pbf, end) {
    return pbf.readFields(ProductSection._readField, {title: "", products: []}, end);
};
ProductSection._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.products.push(Product.read(pbf, pbf.readVarint() + pbf.pos));
};
ProductSection.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.products) for (var i = 0; i < obj.products.length; i++) pbf.writeMessage(2, Product.write, obj.products[i]);
};

// ProductListHeaderImage ========================================

var ProductListHeaderImage = self.ProductListHeaderImage = {};

ProductListHeaderImage.read = function (pbf, end) {
    return pbf.readFields(ProductListHeaderImage._readField, {productId: "", jpegThumbnail: null}, end);
};
ProductListHeaderImage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.productId = pbf.readString();
    else if (tag === 2) obj.jpegThumbnail = pbf.readBytes();
};
ProductListHeaderImage.write = function (obj, pbf) {
    if (obj.productId) pbf.writeStringField(1, obj.productId);
    if (obj.jpegThumbnail) pbf.writeBytesField(2, obj.jpegThumbnail);
};

// ProductListInfo ========================================

var ProductListInfo = self.ProductListInfo = {};

ProductListInfo.read = function (pbf, end) {
    return pbf.readFields(ProductListInfo._readField, {productSections: [], headerImage: null, businessOwnerJid: ""}, end);
};
ProductListInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.productSections.push(ProductSection.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 2) obj.headerImage = ProductListHeaderImage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.businessOwnerJid = pbf.readString();
};
ProductListInfo.write = function (obj, pbf) {
    if (obj.productSections) for (var i = 0; i < obj.productSections.length; i++) pbf.writeMessage(1, ProductSection.write, obj.productSections[i]);
    if (obj.headerImage) pbf.writeMessage(2, ProductListHeaderImage.write, obj.headerImage);
    if (obj.businessOwnerJid) pbf.writeStringField(3, obj.businessOwnerJid);
};

// ListMessage ========================================

var ListMessage = self.ListMessage = {};

ListMessage.read = function (pbf, end) {
    return pbf.readFields(ListMessage._readField, {title: "", description: "", buttonText: "", listType: 0, sections: [], productListInfo: null, footerText: "", contextInfo: null}, end);
};
ListMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.description = pbf.readString();
    else if (tag === 3) obj.buttonText = pbf.readString();
    else if (tag === 4) obj.listType = pbf.readVarint();
    else if (tag === 5) obj.sections.push(Section.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 6) obj.productListInfo = ProductListInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.footerText = pbf.readString();
    else if (tag === 8) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
ListMessage.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.description) pbf.writeStringField(2, obj.description);
    if (obj.buttonText) pbf.writeStringField(3, obj.buttonText);
    if (obj.listType) pbf.writeVarintField(4, obj.listType);
    if (obj.sections) for (var i = 0; i < obj.sections.length; i++) pbf.writeMessage(5, Section.write, obj.sections[i]);
    if (obj.productListInfo) pbf.writeMessage(6, ProductListInfo.write, obj.productListInfo);
    if (obj.footerText) pbf.writeStringField(7, obj.footerText);
    if (obj.contextInfo) pbf.writeMessage(8, ContextInfo.write, obj.contextInfo);
};

ListMessage.ListMessageListType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "SINGLE_SELECT": {
        "value": 1,
        "options": {}
    },
    "PRODUCT_LIST": {
        "value": 2,
        "options": {}
    }
};

// SingleSelectReply ========================================

var SingleSelectReply = self.SingleSelectReply = {};

SingleSelectReply.read = function (pbf, end) {
    return pbf.readFields(SingleSelectReply._readField, {selectedRowId: ""}, end);
};
SingleSelectReply._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.selectedRowId = pbf.readString();
};
SingleSelectReply.write = function (obj, pbf) {
    if (obj.selectedRowId) pbf.writeStringField(1, obj.selectedRowId);
};

// ListResponseMessage ========================================

var ListResponseMessage = self.ListResponseMessage = {};

ListResponseMessage.read = function (pbf, end) {
    return pbf.readFields(ListResponseMessage._readField, {title: "", listType: 0, singleSelectReply: null, contextInfo: null, description: ""}, end);
};
ListResponseMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.listType = pbf.readVarint();
    else if (tag === 3) obj.singleSelectReply = SingleSelectReply.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.description = pbf.readString();
};
ListResponseMessage.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.listType) pbf.writeVarintField(2, obj.listType);
    if (obj.singleSelectReply) pbf.writeMessage(3, SingleSelectReply.write, obj.singleSelectReply);
    if (obj.contextInfo) pbf.writeMessage(4, ContextInfo.write, obj.contextInfo);
    if (obj.description) pbf.writeStringField(5, obj.description);
};

ListResponseMessage.ListResponseMessageListType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "SINGLE_SELECT": {
        "value": 1,
        "options": {}
    }
};

// Header ========================================

var Header = self.Header = {};

Header.read = function (pbf, end) {
    return pbf.readFields(Header._readField, {title: "", subtitle: "", hasMediaAttachment: false, documentMessage: null, media: null, imageMessage: null, jpegThumbnail: null, videoMessage: null}, end);
};
Header._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.title = pbf.readString();
    else if (tag === 2) obj.subtitle = pbf.readString();
    else if (tag === 5) obj.hasMediaAttachment = pbf.readBoolean();
    else if (tag === 3) obj.documentMessage = DocumentMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.media = "documentMessage";
    else if (tag === 4) obj.imageMessage = ImageMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.media = "imageMessage";
    else if (tag === 6) obj.jpegThumbnail = pbf.readBytes(), obj.media = "jpegThumbnail";
    else if (tag === 7) obj.videoMessage = VideoMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.media = "videoMessage";
};
Header.write = function (obj, pbf) {
    if (obj.title) pbf.writeStringField(1, obj.title);
    if (obj.subtitle) pbf.writeStringField(2, obj.subtitle);
    if (obj.hasMediaAttachment) pbf.writeBooleanField(5, obj.hasMediaAttachment);
    if (obj.documentMessage) pbf.writeMessage(3, DocumentMessage.write, obj.documentMessage);
    if (obj.imageMessage) pbf.writeMessage(4, ImageMessage.write, obj.imageMessage);
    if (obj.jpegThumbnail) pbf.writeBytesField(6, obj.jpegThumbnail);
    if (obj.videoMessage) pbf.writeMessage(7, VideoMessage.write, obj.videoMessage);
};

// Body ========================================

var Body = self.Body = {};

Body.read = function (pbf, end) {
    return pbf.readFields(Body._readField, {text: ""}, end);
};
Body._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.text = pbf.readString();
};
Body.write = function (obj, pbf) {
    if (obj.text) pbf.writeStringField(1, obj.text);
};

// Footer ========================================

var Footer = self.Footer = {};

Footer.read = function (pbf, end) {
    return pbf.readFields(Footer._readField, {text: ""}, end);
};
Footer._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.text = pbf.readString();
};
Footer.write = function (obj, pbf) {
    if (obj.text) pbf.writeStringField(1, obj.text);
};

// ShopMessage ========================================

var ShopMessage = self.ShopMessage = {};

ShopMessage.read = function (pbf, end) {
    return pbf.readFields(ShopMessage._readField, {id: "", surface: 0, messageVersion: 0}, end);
};
ShopMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readString();
    else if (tag === 2) obj.surface = pbf.readVarint();
    else if (tag === 3) obj.messageVersion = pbf.readVarint(true);
};
ShopMessage.write = function (obj, pbf) {
    if (obj.id) pbf.writeStringField(1, obj.id);
    if (obj.surface) pbf.writeVarintField(2, obj.surface);
    if (obj.messageVersion) pbf.writeVarintField(3, obj.messageVersion);
};

ShopMessage.ShopMessageSurface = {
    "UNKNOWN_SURFACE": {
        "value": 0,
        "options": {}
    },
    "FB": {
        "value": 1,
        "options": {}
    },
    "IG": {
        "value": 2,
        "options": {}
    },
    "WA": {
        "value": 3,
        "options": {}
    }
};

// CollectionMessage ========================================

var CollectionMessage = self.CollectionMessage = {};

CollectionMessage.read = function (pbf, end) {
    return pbf.readFields(CollectionMessage._readField, {bizJid: "", id: "", messageVersion: 0}, end);
};
CollectionMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.bizJid = pbf.readString();
    else if (tag === 2) obj.id = pbf.readString();
    else if (tag === 3) obj.messageVersion = pbf.readVarint(true);
};
CollectionMessage.write = function (obj, pbf) {
    if (obj.bizJid) pbf.writeStringField(1, obj.bizJid);
    if (obj.id) pbf.writeStringField(2, obj.id);
    if (obj.messageVersion) pbf.writeVarintField(3, obj.messageVersion);
};

// NativeFlowButton ========================================

var NativeFlowButton = self.NativeFlowButton = {};

NativeFlowButton.read = function (pbf, end) {
    return pbf.readFields(NativeFlowButton._readField, {name: "", buttonParamsJson: ""}, end);
};
NativeFlowButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.buttonParamsJson = pbf.readString();
};
NativeFlowButton.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.buttonParamsJson) pbf.writeStringField(2, obj.buttonParamsJson);
};

// NativeFlowMessage ========================================

var NativeFlowMessage = self.NativeFlowMessage = {};

NativeFlowMessage.read = function (pbf, end) {
    return pbf.readFields(NativeFlowMessage._readField, {buttons: [], messageParamsJson: "", messageVersion: 0}, end);
};
NativeFlowMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.buttons.push(NativeFlowButton.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 2) obj.messageParamsJson = pbf.readString();
    else if (tag === 3) obj.messageVersion = pbf.readVarint(true);
};
NativeFlowMessage.write = function (obj, pbf) {
    if (obj.buttons) for (var i = 0; i < obj.buttons.length; i++) pbf.writeMessage(1, NativeFlowButton.write, obj.buttons[i]);
    if (obj.messageParamsJson) pbf.writeStringField(2, obj.messageParamsJson);
    if (obj.messageVersion) pbf.writeVarintField(3, obj.messageVersion);
};

// InteractiveMessage ========================================

var InteractiveMessage = self.InteractiveMessage = {};

InteractiveMessage.read = function (pbf, end) {
    return pbf.readFields(InteractiveMessage._readField, {header: null, body: null, footer: null, contextInfo: null, shopStorefrontMessage: null, interactiveMessage: null, collectionMessage: null, nativeFlowMessage: null}, end);
};
InteractiveMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.header = Header.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.body = Body.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.footer = Footer.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 15) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.shopStorefrontMessage = ShopMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.interactiveMessage = "shopStorefrontMessage";
    else if (tag === 5) obj.collectionMessage = CollectionMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.interactiveMessage = "collectionMessage";
    else if (tag === 6) obj.nativeFlowMessage = NativeFlowMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.interactiveMessage = "nativeFlowMessage";
};
InteractiveMessage.write = function (obj, pbf) {
    if (obj.header) pbf.writeMessage(1, Header.write, obj.header);
    if (obj.body) pbf.writeMessage(2, Body.write, obj.body);
    if (obj.footer) pbf.writeMessage(3, Footer.write, obj.footer);
    if (obj.contextInfo) pbf.writeMessage(15, ContextInfo.write, obj.contextInfo);
    if (obj.shopStorefrontMessage) pbf.writeMessage(4, ShopMessage.write, obj.shopStorefrontMessage);
    if (obj.collectionMessage) pbf.writeMessage(5, CollectionMessage.write, obj.collectionMessage);
    if (obj.nativeFlowMessage) pbf.writeMessage(6, NativeFlowMessage.write, obj.nativeFlowMessage);
};

// GroupInviteMessage ========================================

var GroupInviteMessage = self.GroupInviteMessage = {};

GroupInviteMessage.read = function (pbf, end) {
    return pbf.readFields(GroupInviteMessage._readField, {groupJid: "", inviteCode: "", inviteExpiration: 0, groupName: "", jpegThumbnail: null, caption: "", contextInfo: null, groupType: 0}, end);
};
GroupInviteMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.groupJid = pbf.readString();
    else if (tag === 2) obj.inviteCode = pbf.readString();
    else if (tag === 3) obj.inviteExpiration = pbf.readVarint(true);
    else if (tag === 4) obj.groupName = pbf.readString();
    else if (tag === 5) obj.jpegThumbnail = pbf.readBytes();
    else if (tag === 6) obj.caption = pbf.readString();
    else if (tag === 7) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.groupType = pbf.readVarint();
};
GroupInviteMessage.write = function (obj, pbf) {
    if (obj.groupJid) pbf.writeStringField(1, obj.groupJid);
    if (obj.inviteCode) pbf.writeStringField(2, obj.inviteCode);
    if (obj.inviteExpiration) pbf.writeVarintField(3, obj.inviteExpiration);
    if (obj.groupName) pbf.writeStringField(4, obj.groupName);
    if (obj.jpegThumbnail) pbf.writeBytesField(5, obj.jpegThumbnail);
    if (obj.caption) pbf.writeStringField(6, obj.caption);
    if (obj.contextInfo) pbf.writeMessage(7, ContextInfo.write, obj.contextInfo);
    if (obj.groupType) pbf.writeVarintField(8, obj.groupType);
};

GroupInviteMessage.GroupInviteMessageGroupType = {
    "DEFAULT": {
        "value": 0,
        "options": {}
    },
    "PARENT": {
        "value": 1,
        "options": {}
    }
};

// DeviceSentMessage ========================================

var DeviceSentMessage = self.DeviceSentMessage = {};

DeviceSentMessage.read = function (pbf, end) {
    return pbf.readFields(DeviceSentMessage._readField, {destinationJid: "", message: null, phash: ""}, end);
};
DeviceSentMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.destinationJid = pbf.readString();
    else if (tag === 2) obj.message = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.phash = pbf.readString();
};
DeviceSentMessage.write = function (obj, pbf) {
    if (obj.destinationJid) pbf.writeStringField(1, obj.destinationJid);
    if (obj.message) pbf.writeMessage(2, Message.write, obj.message);
    if (obj.phash) pbf.writeStringField(3, obj.phash);
};

// FutureProofMessage ========================================

var FutureProofMessage = self.FutureProofMessage = {};

FutureProofMessage.read = function (pbf, end) {
    return pbf.readFields(FutureProofMessage._readField, {message: null}, end);
};
FutureProofMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.message = Message.read(pbf, pbf.readVarint() + pbf.pos);
};
FutureProofMessage.write = function (obj, pbf) {
    if (obj.message) pbf.writeMessage(1, Message.write, obj.message);
};

// ButtonText ========================================

var ButtonText = self.ButtonText = {};

ButtonText.read = function (pbf, end) {
    return pbf.readFields(ButtonText._readField, {displayText: ""}, end);
};
ButtonText._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = pbf.readString();
};
ButtonText.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeStringField(1, obj.displayText);
};

// NativeFlowInfo ========================================

var NativeFlowInfo = self.NativeFlowInfo = {};

NativeFlowInfo.read = function (pbf, end) {
    return pbf.readFields(NativeFlowInfo._readField, {name: "", paramsJson: ""}, end);
};
NativeFlowInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.paramsJson = pbf.readString();
};
NativeFlowInfo.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.paramsJson) pbf.writeStringField(2, obj.paramsJson);
};

// Button ========================================

var Button = self.Button = {};

Button.read = function (pbf, end) {
    return pbf.readFields(Button._readField, {buttonId: "", buttonText: null, type: 0, nativeFlowInfo: null}, end);
};
Button._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.buttonId = pbf.readString();
    else if (tag === 2) obj.buttonText = ButtonText.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.type = pbf.readVarint();
    else if (tag === 4) obj.nativeFlowInfo = NativeFlowInfo.read(pbf, pbf.readVarint() + pbf.pos);
};
Button.write = function (obj, pbf) {
    if (obj.buttonId) pbf.writeStringField(1, obj.buttonId);
    if (obj.buttonText) pbf.writeMessage(2, ButtonText.write, obj.buttonText);
    if (obj.type) pbf.writeVarintField(3, obj.type);
    if (obj.nativeFlowInfo) pbf.writeMessage(4, NativeFlowInfo.write, obj.nativeFlowInfo);
};

Button.ButtonType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "RESPONSE": {
        "value": 1,
        "options": {}
    },
    "NATIVE_FLOW": {
        "value": 2,
        "options": {}
    }
};

// ButtonsMessage ========================================

var ButtonsMessage = self.ButtonsMessage = {};

ButtonsMessage.read = function (pbf, end) {
    return pbf.readFields(ButtonsMessage._readField, {contentText: "", footerText: "", contextInfo: null, buttons: [], headerType: 0, text: "", header: null, documentMessage: null, imageMessage: null, videoMessage: null, locationMessage: null}, end);
};
ButtonsMessage._readField = function (tag, obj, pbf) {
    if (tag === 6) obj.contentText = pbf.readString();
    else if (tag === 7) obj.footerText = pbf.readString();
    else if (tag === 8) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 9) obj.buttons.push(Button.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 10) obj.headerType = pbf.readVarint();
    else if (tag === 1) obj.text = pbf.readString(), obj.header = "text";
    else if (tag === 2) obj.documentMessage = DocumentMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.header = "documentMessage";
    else if (tag === 3) obj.imageMessage = ImageMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.header = "imageMessage";
    else if (tag === 4) obj.videoMessage = VideoMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.header = "videoMessage";
    else if (tag === 5) obj.locationMessage = LocationMessage.read(pbf, pbf.readVarint() + pbf.pos), obj.header = "locationMessage";
};
ButtonsMessage.write = function (obj, pbf) {
    if (obj.contentText) pbf.writeStringField(6, obj.contentText);
    if (obj.footerText) pbf.writeStringField(7, obj.footerText);
    if (obj.contextInfo) pbf.writeMessage(8, ContextInfo.write, obj.contextInfo);
    if (obj.buttons) for (var i = 0; i < obj.buttons.length; i++) pbf.writeMessage(9, Button.write, obj.buttons[i]);
    if (obj.headerType) pbf.writeVarintField(10, obj.headerType);
    if (obj.text) pbf.writeStringField(1, obj.text);
    if (obj.documentMessage) pbf.writeMessage(2, DocumentMessage.write, obj.documentMessage);
    if (obj.imageMessage) pbf.writeMessage(3, ImageMessage.write, obj.imageMessage);
    if (obj.videoMessage) pbf.writeMessage(4, VideoMessage.write, obj.videoMessage);
    if (obj.locationMessage) pbf.writeMessage(5, LocationMessage.write, obj.locationMessage);
};

ButtonsMessage.ButtonsMessageHeaderType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "EMPTY": {
        "value": 1,
        "options": {}
    },
    "TEXT": {
        "value": 2,
        "options": {}
    },
    "DOCUMENT": {
        "value": 3,
        "options": {}
    },
    "IMAGE": {
        "value": 4,
        "options": {}
    },
    "VIDEO": {
        "value": 5,
        "options": {}
    },
    "LOCATION": {
        "value": 6,
        "options": {}
    }
};

// ButtonsResponseMessage ========================================

var ButtonsResponseMessage = self.ButtonsResponseMessage = {};

ButtonsResponseMessage.read = function (pbf, end) {
    return pbf.readFields(ButtonsResponseMessage._readField, {selectedButtonId: "", contextInfo: null, type: 0, selectedDisplayText: "", response: null}, end);
};
ButtonsResponseMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.selectedButtonId = pbf.readString();
    else if (tag === 3) obj.contextInfo = ContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.type = pbf.readVarint();
    else if (tag === 2) obj.selectedDisplayText = pbf.readString(), obj.response = "selectedDisplayText";
};
ButtonsResponseMessage.write = function (obj, pbf) {
    if (obj.selectedButtonId) pbf.writeStringField(1, obj.selectedButtonId);
    if (obj.contextInfo) pbf.writeMessage(3, ContextInfo.write, obj.contextInfo);
    if (obj.type) pbf.writeVarintField(4, obj.type);
    if (obj.selectedDisplayText) pbf.writeStringField(2, obj.selectedDisplayText);
};

ButtonsResponseMessage.ButtonsResponseMessageType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "DISPLAY_TEXT": {
        "value": 1,
        "options": {}
    }
};

// ReactionMessage ========================================

var ReactionMessage = self.ReactionMessage = {};

ReactionMessage.read = function (pbf, end) {
    return pbf.readFields(ReactionMessage._readField, {key: null, text: "", groupingKey: "", senderTimestampMs: 0}, end);
};
ReactionMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.text = pbf.readString();
    else if (tag === 3) obj.groupingKey = pbf.readString();
    else if (tag === 4) obj.senderTimestampMs = pbf.readVarint(true);
};
ReactionMessage.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.text) pbf.writeStringField(2, obj.text);
    if (obj.groupingKey) pbf.writeStringField(3, obj.groupingKey);
    if (obj.senderTimestampMs) pbf.writeVarintField(4, obj.senderTimestampMs);
};

// StickerSyncRMRMessage ========================================

var StickerSyncRMRMessage = self.StickerSyncRMRMessage = {};

StickerSyncRMRMessage.read = function (pbf, end) {
    return pbf.readFields(StickerSyncRMRMessage._readField, {filehash: [], rmrSource: "", requestTimestamp: 0}, end);
};
StickerSyncRMRMessage._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.filehash.push(pbf.readString());
    else if (tag === 2) obj.rmrSource = pbf.readString();
    else if (tag === 3) obj.requestTimestamp = pbf.readVarint(true);
};
StickerSyncRMRMessage.write = function (obj, pbf) {
    if (obj.filehash) for (var i = 0; i < obj.filehash.length; i++) pbf.writeStringField(1, obj.filehash[i]);
    if (obj.rmrSource) pbf.writeStringField(2, obj.rmrSource);
    if (obj.requestTimestamp) pbf.writeVarintField(3, obj.requestTimestamp);
};

// Message ========================================

var Message = self.Message = {};

Message.read = function (pbf, end) {
    return pbf.readFields(Message._readField, {conversation: "", senderKeyDistributionMessage: null, imageMessage: null, contactMessage: null, locationMessage: null, extendedTextMessage: null, documentMessage: null, audioMessage: null, videoMessage: null, call: null, chat: null, protocolMessage: null, contactsArrayMessage: null, highlyStructuredMessage: null, fastRatchetKeySenderKeyDistributionMessage: null, sendPaymentMessage: null, liveLocationMessage: null, requestPaymentMessage: null, declinePaymentRequestMessage: null, cancelPaymentRequestMessage: null, templateMessage: null, stickerMessage: null, groupInviteMessage: null, templateButtonReplyMessage: null, productMessage: null, deviceSentMessage: null, messageContextInfo: null, listMessage: null, viewOnceMessage: null, orderMessage: null, listResponseMessage: null, ephemeralMessage: null, invoiceMessage: null, buttonsMessage: null, buttonsResponseMessage: null, paymentInviteMessage: null, interactiveMessage: null, reactionMessage: null, stickerSyncRmrMessage: null}, end);
};
Message._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.conversation = pbf.readString();
    else if (tag === 2) obj.senderKeyDistributionMessage = SenderKeyDistributionMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.imageMessage = ImageMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.contactMessage = ContactMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.locationMessage = LocationMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 6) obj.extendedTextMessage = ExtendedTextMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.documentMessage = DocumentMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.audioMessage = AudioMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 9) obj.videoMessage = VideoMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 10) obj.call = Call.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 11) obj.chat = Chat.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 12) obj.protocolMessage = ProtocolMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 13) obj.contactsArrayMessage = ContactsArrayMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 14) obj.highlyStructuredMessage = HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 15) obj.fastRatchetKeySenderKeyDistributionMessage = SenderKeyDistributionMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 16) obj.sendPaymentMessage = SendPaymentMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 18) obj.liveLocationMessage = LiveLocationMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 22) obj.requestPaymentMessage = RequestPaymentMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 23) obj.declinePaymentRequestMessage = DeclinePaymentRequestMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 24) obj.cancelPaymentRequestMessage = CancelPaymentRequestMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 25) obj.templateMessage = TemplateMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 26) obj.stickerMessage = StickerMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 28) obj.groupInviteMessage = GroupInviteMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 29) obj.templateButtonReplyMessage = TemplateButtonReplyMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 30) obj.productMessage = ProductMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 31) obj.deviceSentMessage = DeviceSentMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 35) obj.messageContextInfo = MessageContextInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 36) obj.listMessage = ListMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 37) obj.viewOnceMessage = FutureProofMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 38) obj.orderMessage = OrderMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 39) obj.listResponseMessage = ListResponseMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 40) obj.ephemeralMessage = FutureProofMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 41) obj.invoiceMessage = InvoiceMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 42) obj.buttonsMessage = ButtonsMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 43) obj.buttonsResponseMessage = ButtonsResponseMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 44) obj.paymentInviteMessage = PaymentInviteMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 45) obj.interactiveMessage = InteractiveMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 46) obj.reactionMessage = ReactionMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 47) obj.stickerSyncRmrMessage = StickerSyncRMRMessage.read(pbf, pbf.readVarint() + pbf.pos);
};
Message.write = function (obj, pbf) {
    if (obj.conversation) pbf.writeStringField(1, obj.conversation);
    if (obj.senderKeyDistributionMessage) pbf.writeMessage(2, SenderKeyDistributionMessage.write, obj.senderKeyDistributionMessage);
    if (obj.imageMessage) pbf.writeMessage(3, ImageMessage.write, obj.imageMessage);
    if (obj.contactMessage) pbf.writeMessage(4, ContactMessage.write, obj.contactMessage);
    if (obj.locationMessage) pbf.writeMessage(5, LocationMessage.write, obj.locationMessage);
    if (obj.extendedTextMessage) pbf.writeMessage(6, ExtendedTextMessage.write, obj.extendedTextMessage);
    if (obj.documentMessage) pbf.writeMessage(7, DocumentMessage.write, obj.documentMessage);
    if (obj.audioMessage) pbf.writeMessage(8, AudioMessage.write, obj.audioMessage);
    if (obj.videoMessage) pbf.writeMessage(9, VideoMessage.write, obj.videoMessage);
    if (obj.call) pbf.writeMessage(10, Call.write, obj.call);
    if (obj.chat) pbf.writeMessage(11, Chat.write, obj.chat);
    if (obj.protocolMessage) pbf.writeMessage(12, ProtocolMessage.write, obj.protocolMessage);
    if (obj.contactsArrayMessage) pbf.writeMessage(13, ContactsArrayMessage.write, obj.contactsArrayMessage);
    if (obj.highlyStructuredMessage) pbf.writeMessage(14, HighlyStructuredMessage.write, obj.highlyStructuredMessage);
    if (obj.fastRatchetKeySenderKeyDistributionMessage) pbf.writeMessage(15, SenderKeyDistributionMessage.write, obj.fastRatchetKeySenderKeyDistributionMessage);
    if (obj.sendPaymentMessage) pbf.writeMessage(16, SendPaymentMessage.write, obj.sendPaymentMessage);
    if (obj.liveLocationMessage) pbf.writeMessage(18, LiveLocationMessage.write, obj.liveLocationMessage);
    if (obj.requestPaymentMessage) pbf.writeMessage(22, RequestPaymentMessage.write, obj.requestPaymentMessage);
    if (obj.declinePaymentRequestMessage) pbf.writeMessage(23, DeclinePaymentRequestMessage.write, obj.declinePaymentRequestMessage);
    if (obj.cancelPaymentRequestMessage) pbf.writeMessage(24, CancelPaymentRequestMessage.write, obj.cancelPaymentRequestMessage);
    if (obj.templateMessage) pbf.writeMessage(25, TemplateMessage.write, obj.templateMessage);
    if (obj.stickerMessage) pbf.writeMessage(26, StickerMessage.write, obj.stickerMessage);
    if (obj.groupInviteMessage) pbf.writeMessage(28, GroupInviteMessage.write, obj.groupInviteMessage);
    if (obj.templateButtonReplyMessage) pbf.writeMessage(29, TemplateButtonReplyMessage.write, obj.templateButtonReplyMessage);
    if (obj.productMessage) pbf.writeMessage(30, ProductMessage.write, obj.productMessage);
    if (obj.deviceSentMessage) pbf.writeMessage(31, DeviceSentMessage.write, obj.deviceSentMessage);
    if (obj.messageContextInfo) pbf.writeMessage(35, MessageContextInfo.write, obj.messageContextInfo);
    if (obj.listMessage) pbf.writeMessage(36, ListMessage.write, obj.listMessage);
    if (obj.viewOnceMessage) pbf.writeMessage(37, FutureProofMessage.write, obj.viewOnceMessage);
    if (obj.orderMessage) pbf.writeMessage(38, OrderMessage.write, obj.orderMessage);
    if (obj.listResponseMessage) pbf.writeMessage(39, ListResponseMessage.write, obj.listResponseMessage);
    if (obj.ephemeralMessage) pbf.writeMessage(40, FutureProofMessage.write, obj.ephemeralMessage);
    if (obj.invoiceMessage) pbf.writeMessage(41, InvoiceMessage.write, obj.invoiceMessage);
    if (obj.buttonsMessage) pbf.writeMessage(42, ButtonsMessage.write, obj.buttonsMessage);
    if (obj.buttonsResponseMessage) pbf.writeMessage(43, ButtonsResponseMessage.write, obj.buttonsResponseMessage);
    if (obj.paymentInviteMessage) pbf.writeMessage(44, PaymentInviteMessage.write, obj.paymentInviteMessage);
    if (obj.interactiveMessage) pbf.writeMessage(45, InteractiveMessage.write, obj.interactiveMessage);
    if (obj.reactionMessage) pbf.writeMessage(46, ReactionMessage.write, obj.reactionMessage);
    if (obj.stickerSyncRmrMessage) pbf.writeMessage(47, StickerSyncRMRMessage.write, obj.stickerSyncRmrMessage);
};

// ActionLink ========================================

var ActionLink = self.ActionLink = {};

ActionLink.read = function (pbf, end) {
    return pbf.readFields(ActionLink._readField, {url: "", buttonTitle: ""}, end);
};
ActionLink._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.url = pbf.readString();
    else if (tag === 2) obj.buttonTitle = pbf.readString();
};
ActionLink.write = function (obj, pbf) {
    if (obj.url) pbf.writeStringField(1, obj.url);
    if (obj.buttonTitle) pbf.writeStringField(2, obj.buttonTitle);
};

// DisappearingMode ========================================

var DisappearingMode = self.DisappearingMode = {};

DisappearingMode.read = function (pbf, end) {
    return pbf.readFields(DisappearingMode._readField, {initiator: 0}, end);
};
DisappearingMode._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.initiator = pbf.readVarint();
};
DisappearingMode.write = function (obj, pbf) {
    if (obj.initiator) pbf.writeVarintField(1, obj.initiator);
};

DisappearingMode.DisappearingModeInitiator = {
    "CHANGED_IN_CHAT": {
        "value": 0,
        "options": {}
    },
    "INITIATED_BY_ME": {
        "value": 1,
        "options": {}
    },
    "INITIATED_BY_OTHER": {
        "value": 2,
        "options": {}
    }
};

// PBMediaData ========================================

var PBMediaData = self.PBMediaData = {};

PBMediaData.read = function (pbf, end) {
    return pbf.readFields(PBMediaData._readField, {mediaKey: null, mediaKeyTimestamp: 0, fileSha256: null, fileEncSha256: null, directPath: ""}, end);
};
PBMediaData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mediaKey = pbf.readBytes();
    else if (tag === 2) obj.mediaKeyTimestamp = pbf.readVarint(true);
    else if (tag === 3) obj.fileSha256 = pbf.readBytes();
    else if (tag === 4) obj.fileEncSha256 = pbf.readBytes();
    else if (tag === 5) obj.directPath = pbf.readString();
};
PBMediaData.write = function (obj, pbf) {
    if (obj.mediaKey) pbf.writeBytesField(1, obj.mediaKey);
    if (obj.mediaKeyTimestamp) pbf.writeVarintField(2, obj.mediaKeyTimestamp);
    if (obj.fileSha256) pbf.writeBytesField(3, obj.fileSha256);
    if (obj.fileEncSha256) pbf.writeBytesField(4, obj.fileEncSha256);
    if (obj.directPath) pbf.writeStringField(5, obj.directPath);
};

// PaymentBackground ========================================

var PaymentBackground = self.PaymentBackground = {};

PaymentBackground.read = function (pbf, end) {
    return pbf.readFields(PaymentBackground._readField, {id: "", fileLength: 0, width: 0, height: 0, mimetype: "", placeholderArgb: 0, textArgb: 0, subtextArgb: 0, mediaData: null, type: 0}, end);
};
PaymentBackground._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readString();
    else if (tag === 2) obj.fileLength = pbf.readVarint();
    else if (tag === 3) obj.width = pbf.readVarint();
    else if (tag === 4) obj.height = pbf.readVarint();
    else if (tag === 5) obj.mimetype = pbf.readString();
    else if (tag === 6) obj.placeholderArgb = pbf.readFixed32();
    else if (tag === 7) obj.textArgb = pbf.readFixed32();
    else if (tag === 8) obj.subtextArgb = pbf.readFixed32();
    else if (tag === 9) obj.mediaData = PBMediaData.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 10) obj.type = pbf.readVarint();
};
PaymentBackground.write = function (obj, pbf) {
    if (obj.id) pbf.writeStringField(1, obj.id);
    if (obj.fileLength) pbf.writeVarintField(2, obj.fileLength);
    if (obj.width) pbf.writeVarintField(3, obj.width);
    if (obj.height) pbf.writeVarintField(4, obj.height);
    if (obj.mimetype) pbf.writeStringField(5, obj.mimetype);
    if (obj.placeholderArgb) pbf.writeFixed32Field(6, obj.placeholderArgb);
    if (obj.textArgb) pbf.writeFixed32Field(7, obj.textArgb);
    if (obj.subtextArgb) pbf.writeFixed32Field(8, obj.subtextArgb);
    if (obj.mediaData) pbf.writeMessage(9, PBMediaData.write, obj.mediaData);
    if (obj.type) pbf.writeVarintField(10, obj.type);
};

PaymentBackground.PaymentBackgroundType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "DEFAULT": {
        "value": 1,
        "options": {}
    }
};

// Money ========================================

var Money = self.Money = {};

Money.read = function (pbf, end) {
    return pbf.readFields(Money._readField, {value: 0, offset: 0, currencyCode: ""}, end);
};
Money._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.value = pbf.readVarint(true);
    else if (tag === 2) obj.offset = pbf.readVarint();
    else if (tag === 3) obj.currencyCode = pbf.readString();
};
Money.write = function (obj, pbf) {
    if (obj.value) pbf.writeVarintField(1, obj.value);
    if (obj.offset) pbf.writeVarintField(2, obj.offset);
    if (obj.currencyCode) pbf.writeStringField(3, obj.currencyCode);
};

// HydratedQuickReplyButton ========================================

var HydratedQuickReplyButton = self.HydratedQuickReplyButton = {};

HydratedQuickReplyButton.read = function (pbf, end) {
    return pbf.readFields(HydratedQuickReplyButton._readField, {displayText: "", id: ""}, end);
};
HydratedQuickReplyButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = pbf.readString();
    else if (tag === 2) obj.id = pbf.readString();
};
HydratedQuickReplyButton.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeStringField(1, obj.displayText);
    if (obj.id) pbf.writeStringField(2, obj.id);
};

// HydratedURLButton ========================================

var HydratedURLButton = self.HydratedURLButton = {};

HydratedURLButton.read = function (pbf, end) {
    return pbf.readFields(HydratedURLButton._readField, {displayText: "", url: ""}, end);
};
HydratedURLButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = pbf.readString();
    else if (tag === 2) obj.url = pbf.readString();
};
HydratedURLButton.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeStringField(1, obj.displayText);
    if (obj.url) pbf.writeStringField(2, obj.url);
};

// HydratedCallButton ========================================

var HydratedCallButton = self.HydratedCallButton = {};

HydratedCallButton.read = function (pbf, end) {
    return pbf.readFields(HydratedCallButton._readField, {displayText: "", phoneNumber: ""}, end);
};
HydratedCallButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = pbf.readString();
    else if (tag === 2) obj.phoneNumber = pbf.readString();
};
HydratedCallButton.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeStringField(1, obj.displayText);
    if (obj.phoneNumber) pbf.writeStringField(2, obj.phoneNumber);
};

// HydratedTemplateButton ========================================

var HydratedTemplateButton = self.HydratedTemplateButton = {};

HydratedTemplateButton.read = function (pbf, end) {
    return pbf.readFields(HydratedTemplateButton._readField, {index: 0, quickReplyButton: null, hydratedButton: null, urlButton: null, callButton: null}, end);
};
HydratedTemplateButton._readField = function (tag, obj, pbf) {
    if (tag === 4) obj.index = pbf.readVarint();
    else if (tag === 1) obj.quickReplyButton = HydratedQuickReplyButton.read(pbf, pbf.readVarint() + pbf.pos), obj.hydratedButton = "quickReplyButton";
    else if (tag === 2) obj.urlButton = HydratedURLButton.read(pbf, pbf.readVarint() + pbf.pos), obj.hydratedButton = "urlButton";
    else if (tag === 3) obj.callButton = HydratedCallButton.read(pbf, pbf.readVarint() + pbf.pos), obj.hydratedButton = "callButton";
};
HydratedTemplateButton.write = function (obj, pbf) {
    if (obj.index) pbf.writeVarintField(4, obj.index);
    if (obj.quickReplyButton) pbf.writeMessage(1, HydratedQuickReplyButton.write, obj.quickReplyButton);
    if (obj.urlButton) pbf.writeMessage(2, HydratedURLButton.write, obj.urlButton);
    if (obj.callButton) pbf.writeMessage(3, HydratedCallButton.write, obj.callButton);
};

// QuickReplyButton ========================================

var QuickReplyButton = self.QuickReplyButton = {};

QuickReplyButton.read = function (pbf, end) {
    return pbf.readFields(QuickReplyButton._readField, {displayText: null, id: ""}, end);
};
QuickReplyButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.id = pbf.readString();
};
QuickReplyButton.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeMessage(1, HighlyStructuredMessage.write, obj.displayText);
    if (obj.id) pbf.writeStringField(2, obj.id);
};

// URLButton ========================================

var URLButton = self.URLButton = {};

URLButton.read = function (pbf, end) {
    return pbf.readFields(URLButton._readField, {displayText: null, url: null}, end);
};
URLButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.url = HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
};
URLButton.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeMessage(1, HighlyStructuredMessage.write, obj.displayText);
    if (obj.url) pbf.writeMessage(2, HighlyStructuredMessage.write, obj.url);
};

// CallButton ========================================

var CallButton = self.CallButton = {};

CallButton.read = function (pbf, end) {
    return pbf.readFields(CallButton._readField, {displayText: null, phoneNumber: null}, end);
};
CallButton._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.displayText = HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.phoneNumber = HighlyStructuredMessage.read(pbf, pbf.readVarint() + pbf.pos);
};
CallButton.write = function (obj, pbf) {
    if (obj.displayText) pbf.writeMessage(1, HighlyStructuredMessage.write, obj.displayText);
    if (obj.phoneNumber) pbf.writeMessage(2, HighlyStructuredMessage.write, obj.phoneNumber);
};

// TemplateButton ========================================

var TemplateButton = self.TemplateButton = {};

TemplateButton.read = function (pbf, end) {
    return pbf.readFields(TemplateButton._readField, {index: 0, quickReplyButton: null, button: null, urlButton: null, callButton: null}, end);
};
TemplateButton._readField = function (tag, obj, pbf) {
    if (tag === 4) obj.index = pbf.readVarint();
    else if (tag === 1) obj.quickReplyButton = QuickReplyButton.read(pbf, pbf.readVarint() + pbf.pos), obj.button = "quickReplyButton";
    else if (tag === 2) obj.urlButton = URLButton.read(pbf, pbf.readVarint() + pbf.pos), obj.button = "urlButton";
    else if (tag === 3) obj.callButton = CallButton.read(pbf, pbf.readVarint() + pbf.pos), obj.button = "callButton";
};
TemplateButton.write = function (obj, pbf) {
    if (obj.index) pbf.writeVarintField(4, obj.index);
    if (obj.quickReplyButton) pbf.writeMessage(1, QuickReplyButton.write, obj.quickReplyButton);
    if (obj.urlButton) pbf.writeMessage(2, URLButton.write, obj.urlButton);
    if (obj.callButton) pbf.writeMessage(3, CallButton.write, obj.callButton);
};

// Location ========================================

var Location = self.Location = {};

Location.read = function (pbf, end) {
    return pbf.readFields(Location._readField, {degreesLatitude: 0, degreesLongitude: 0, name: ""}, end);
};
Location._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.degreesLatitude = pbf.readDouble();
    else if (tag === 2) obj.degreesLongitude = pbf.readDouble();
    else if (tag === 3) obj.name = pbf.readString();
};
Location.write = function (obj, pbf) {
    if (obj.degreesLatitude) pbf.writeDoubleField(1, obj.degreesLatitude);
    if (obj.degreesLongitude) pbf.writeDoubleField(2, obj.degreesLongitude);
    if (obj.name) pbf.writeStringField(3, obj.name);
};

// Point ========================================

var Point = self.Point = {};

Point.read = function (pbf, end) {
    return pbf.readFields(Point._readField, {xDeprecated: 0, yDeprecated: 0, x: 0, y: 0}, end);
};
Point._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.xDeprecated = pbf.readVarint(true);
    else if (tag === 2) obj.yDeprecated = pbf.readVarint(true);
    else if (tag === 3) obj.x = pbf.readDouble();
    else if (tag === 4) obj.y = pbf.readDouble();
};
Point.write = function (obj, pbf) {
    if (obj.xDeprecated) pbf.writeVarintField(1, obj.xDeprecated);
    if (obj.yDeprecated) pbf.writeVarintField(2, obj.yDeprecated);
    if (obj.x) pbf.writeDoubleField(3, obj.x);
    if (obj.y) pbf.writeDoubleField(4, obj.y);
};

// CompanionProps ========================================

var CompanionProps = self.CompanionProps = {};

CompanionProps.read = function (pbf, end) {
    return pbf.readFields(CompanionProps._readField, {os: "", version: null, platformType: 0, requireFullSync: false}, end);
};
CompanionProps._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.os = pbf.readString();
    else if (tag === 2) obj.version = AppVersion.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.platformType = pbf.readVarint();
    else if (tag === 4) obj.requireFullSync = pbf.readBoolean();
};
CompanionProps.write = function (obj, pbf) {
    if (obj.os) pbf.writeStringField(1, obj.os);
    if (obj.version) pbf.writeMessage(2, AppVersion.write, obj.version);
    if (obj.platformType) pbf.writeVarintField(3, obj.platformType);
    if (obj.requireFullSync) pbf.writeBooleanField(4, obj.requireFullSync);
};

CompanionProps.CompanionPropsPlatformType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "CHROME": {
        "value": 1,
        "options": {}
    },
    "FIREFOX": {
        "value": 2,
        "options": {}
    },
    "IE": {
        "value": 3,
        "options": {}
    },
    "OPERA": {
        "value": 4,
        "options": {}
    },
    "SAFARI": {
        "value": 5,
        "options": {}
    },
    "EDGE": {
        "value": 6,
        "options": {}
    },
    "DESKTOP": {
        "value": 7,
        "options": {}
    },
    "IPAD": {
        "value": 8,
        "options": {}
    },
    "ANDROID_TABLET": {
        "value": 9,
        "options": {}
    },
    "OHANA": {
        "value": 10,
        "options": {}
    },
    "ALOHA": {
        "value": 11,
        "options": {}
    },
    "CATALINA": {
        "value": 12,
        "options": {}
    }
};

// ADVSignedDeviceIdentityHMAC ========================================

var ADVSignedDeviceIdentityHMAC = self.ADVSignedDeviceIdentityHMAC = {};

ADVSignedDeviceIdentityHMAC.read = function (pbf, end) {
    return pbf.readFields(ADVSignedDeviceIdentityHMAC._readField, {details: null, hmac: null}, end);
};
ADVSignedDeviceIdentityHMAC._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.details = pbf.readBytes();
    else if (tag === 2) obj.hmac = pbf.readBytes();
};
ADVSignedDeviceIdentityHMAC.write = function (obj, pbf) {
    if (obj.details) pbf.writeBytesField(1, obj.details);
    if (obj.hmac) pbf.writeBytesField(2, obj.hmac);
};

// ADVSignedDeviceIdentity ========================================

var ADVSignedDeviceIdentity = self.ADVSignedDeviceIdentity = {};

ADVSignedDeviceIdentity.read = function (pbf, end) {
    return pbf.readFields(ADVSignedDeviceIdentity._readField, {details: null, accountSignatureKey: null, accountSignature: null, deviceSignature: null}, end);
};
ADVSignedDeviceIdentity._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.details = pbf.readBytes();
    else if (tag === 2) obj.accountSignatureKey = pbf.readBytes();
    else if (tag === 3) obj.accountSignature = pbf.readBytes();
    else if (tag === 4) obj.deviceSignature = pbf.readBytes();
};
ADVSignedDeviceIdentity.write = function (obj, pbf) {
    if (obj.details) pbf.writeBytesField(1, obj.details);
    if (obj.accountSignatureKey) pbf.writeBytesField(2, obj.accountSignatureKey);
    if (obj.accountSignature) pbf.writeBytesField(3, obj.accountSignature);
    if (obj.deviceSignature) pbf.writeBytesField(4, obj.deviceSignature);
};

// ADVDeviceIdentity ========================================

var ADVDeviceIdentity = self.ADVDeviceIdentity = {};

ADVDeviceIdentity.read = function (pbf, end) {
    return pbf.readFields(ADVDeviceIdentity._readField, {rawId: 0, timestamp: 0, keyIndex: 0}, end);
};
ADVDeviceIdentity._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.rawId = pbf.readVarint();
    else if (tag === 2) obj.timestamp = pbf.readVarint();
    else if (tag === 3) obj.keyIndex = pbf.readVarint();
};
ADVDeviceIdentity.write = function (obj, pbf) {
    if (obj.rawId) pbf.writeVarintField(1, obj.rawId);
    if (obj.timestamp) pbf.writeVarintField(2, obj.timestamp);
    if (obj.keyIndex) pbf.writeVarintField(3, obj.keyIndex);
};

// ADVSignedKeyIndexList ========================================

var ADVSignedKeyIndexList = self.ADVSignedKeyIndexList = {};

ADVSignedKeyIndexList.read = function (pbf, end) {
    return pbf.readFields(ADVSignedKeyIndexList._readField, {details: null, accountSignature: null}, end);
};
ADVSignedKeyIndexList._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.details = pbf.readBytes();
    else if (tag === 2) obj.accountSignature = pbf.readBytes();
};
ADVSignedKeyIndexList.write = function (obj, pbf) {
    if (obj.details) pbf.writeBytesField(1, obj.details);
    if (obj.accountSignature) pbf.writeBytesField(2, obj.accountSignature);
};

// ADVKeyIndexList ========================================

var ADVKeyIndexList = self.ADVKeyIndexList = {};

ADVKeyIndexList.read = function (pbf, end) {
    return pbf.readFields(ADVKeyIndexList._readField, {rawId: 0, timestamp: 0, currentIndex: 0, validIndexes: []}, end);
};
ADVKeyIndexList._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.rawId = pbf.readVarint();
    else if (tag === 2) obj.timestamp = pbf.readVarint();
    else if (tag === 3) obj.currentIndex = pbf.readVarint();
    else if (tag === 4) pbf.readPackedVarint(obj.validIndexes);
};
ADVKeyIndexList.write = function (obj, pbf) {
    if (obj.rawId) pbf.writeVarintField(1, obj.rawId);
    if (obj.timestamp) pbf.writeVarintField(2, obj.timestamp);
    if (obj.currentIndex) pbf.writeVarintField(3, obj.currentIndex);
    if (obj.validIndexes) pbf.writePackedVarint(4, obj.validIndexes);
};

// MessageKey ========================================

var MessageKey = self.MessageKey = {};

MessageKey.read = function (pbf, end) {
    return pbf.readFields(MessageKey._readField, {remoteJid: "", fromMe: false, id: "", participant: ""}, end);
};
MessageKey._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.remoteJid = pbf.readString();
    else if (tag === 2) obj.fromMe = pbf.readBoolean();
    else if (tag === 3) obj.id = pbf.readString();
    else if (tag === 4) obj.participant = pbf.readString();
};
MessageKey.write = function (obj, pbf) {
    if (obj.remoteJid) pbf.writeStringField(1, obj.remoteJid);
    if (obj.fromMe) pbf.writeBooleanField(2, obj.fromMe);
    if (obj.id) pbf.writeStringField(3, obj.id);
    if (obj.participant) pbf.writeStringField(4, obj.participant);
};

// Reaction ========================================

var Reaction = self.Reaction = {};

Reaction.read = function (pbf, end) {
    return pbf.readFields(Reaction._readField, {key: null, text: "", groupingKey: "", senderTimestampMs: 0, unread: false}, end);
};
Reaction._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.text = pbf.readString();
    else if (tag === 3) obj.groupingKey = pbf.readString();
    else if (tag === 4) obj.senderTimestampMs = pbf.readVarint(true);
    else if (tag === 5) obj.unread = pbf.readBoolean();
};
Reaction.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.text) pbf.writeStringField(2, obj.text);
    if (obj.groupingKey) pbf.writeStringField(3, obj.groupingKey);
    if (obj.senderTimestampMs) pbf.writeVarintField(4, obj.senderTimestampMs);
    if (obj.unread) pbf.writeBooleanField(5, obj.unread);
};

// UserReceipt ========================================

var UserReceipt = self.UserReceipt = {};

UserReceipt.read = function (pbf, end) {
    return pbf.readFields(UserReceipt._readField, {userJid: "", receiptTimestamp: 0, readTimestamp: 0, playedTimestamp: 0, pendingDeviceJid: [], deliveredDeviceJid: []}, end);
};
UserReceipt._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.userJid = pbf.readString();
    else if (tag === 2) obj.receiptTimestamp = pbf.readVarint(true);
    else if (tag === 3) obj.readTimestamp = pbf.readVarint(true);
    else if (tag === 4) obj.playedTimestamp = pbf.readVarint(true);
    else if (tag === 5) obj.pendingDeviceJid.push(pbf.readString());
    else if (tag === 6) obj.deliveredDeviceJid.push(pbf.readString());
};
UserReceipt.write = function (obj, pbf) {
    if (obj.userJid) pbf.writeStringField(1, obj.userJid);
    if (obj.receiptTimestamp) pbf.writeVarintField(2, obj.receiptTimestamp);
    if (obj.readTimestamp) pbf.writeVarintField(3, obj.readTimestamp);
    if (obj.playedTimestamp) pbf.writeVarintField(4, obj.playedTimestamp);
    if (obj.pendingDeviceJid) for (var i = 0; i < obj.pendingDeviceJid.length; i++) pbf.writeStringField(5, obj.pendingDeviceJid[i]);
    if (obj.deliveredDeviceJid) for (i = 0; i < obj.deliveredDeviceJid.length; i++) pbf.writeStringField(6, obj.deliveredDeviceJid[i]);
};

// StatusPSA ========================================

var StatusPSA = self.StatusPSA = {};

StatusPSA.read = function (pbf, end) {
    return pbf.readFields(StatusPSA._readField, {campaignId: "", campaignExpirationTimestamp: 0}, end);
};
StatusPSA._readField = function (tag, obj, pbf) {
    if (tag === 44) obj.campaignId = pbf.readString();
    else if (tag === 45) obj.campaignExpirationTimestamp = pbf.readVarint();
};
StatusPSA.write = function (obj, pbf) {
    if (obj.campaignId) pbf.writeStringField(44, obj.campaignId);
    if (obj.campaignExpirationTimestamp) pbf.writeVarintField(45, obj.campaignExpirationTimestamp);
};

// PhotoChange ========================================

var PhotoChange = self.PhotoChange = {};

PhotoChange.read = function (pbf, end) {
    return pbf.readFields(PhotoChange._readField, {oldPhoto: null, newPhoto: null, newPhotoId: 0}, end);
};
PhotoChange._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.oldPhoto = pbf.readBytes();
    else if (tag === 2) obj.newPhoto = pbf.readBytes();
    else if (tag === 3) obj.newPhotoId = pbf.readVarint();
};
PhotoChange.write = function (obj, pbf) {
    if (obj.oldPhoto) pbf.writeBytesField(1, obj.oldPhoto);
    if (obj.newPhoto) pbf.writeBytesField(2, obj.newPhoto);
    if (obj.newPhotoId) pbf.writeVarintField(3, obj.newPhotoId);
};

// MediaData ========================================

var MediaData = self.MediaData = {};

MediaData.read = function (pbf, end) {
    return pbf.readFields(MediaData._readField, {localPath: ""}, end);
};
MediaData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.localPath = pbf.readString();
};
MediaData.write = function (obj, pbf) {
    if (obj.localPath) pbf.writeStringField(1, obj.localPath);
};

// WebFeatures ========================================

var WebFeatures = self.WebFeatures = {};

WebFeatures.read = function (pbf, end) {
    return pbf.readFields(WebFeatures._readField, {labelsDisplay: 0, voipIndividualOutgoing: 0, groupsV3: 0, groupsV3Create: 0, changeNumberV2: 0, queryStatusV3Thumbnail: 0, liveLocations: 0, queryVname: 0, voipIndividualIncoming: 0, quickRepliesQuery: 0, payments: 0, stickerPackQuery: 0, liveLocationsFinal: 0, labelsEdit: 0, mediaUpload: 0, mediaUploadRichQuickReplies: 0, vnameV2: 0, videoPlaybackUrl: 0, statusRanking: 0, voipIndividualVideo: 0, thirdPartyStickers: 0, frequentlyForwardedSetting: 0, groupsV4JoinPermission: 0, recentStickers: 0, catalog: 0, starredStickers: 0, voipGroupCall: 0, templateMessage: 0, templateMessageInteractivity: 0, ephemeralMessages: 0, e2ENotificationSync: 0, recentStickersV2: 0, recentStickersV3: 0, userNotice: 0, support: 0, groupUiiCleanup: 0, groupDogfoodingInternalOnly: 0, settingsSync: 0, archiveV2: 0, ephemeralAllowGroupMembers: 0, ephemeral24HDuration: 0, mdForceUpgrade: 0, disappearingMode: 0, externalMdOptInAvailable: 0, noDeleteMessageTimeLimit: 0}, end);
};
WebFeatures._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.labelsDisplay = pbf.readVarint();
    else if (tag === 2) obj.voipIndividualOutgoing = pbf.readVarint();
    else if (tag === 3) obj.groupsV3 = pbf.readVarint();
    else if (tag === 4) obj.groupsV3Create = pbf.readVarint();
    else if (tag === 5) obj.changeNumberV2 = pbf.readVarint();
    else if (tag === 6) obj.queryStatusV3Thumbnail = pbf.readVarint();
    else if (tag === 7) obj.liveLocations = pbf.readVarint();
    else if (tag === 8) obj.queryVname = pbf.readVarint();
    else if (tag === 9) obj.voipIndividualIncoming = pbf.readVarint();
    else if (tag === 10) obj.quickRepliesQuery = pbf.readVarint();
    else if (tag === 11) obj.payments = pbf.readVarint();
    else if (tag === 12) obj.stickerPackQuery = pbf.readVarint();
    else if (tag === 13) obj.liveLocationsFinal = pbf.readVarint();
    else if (tag === 14) obj.labelsEdit = pbf.readVarint();
    else if (tag === 15) obj.mediaUpload = pbf.readVarint();
    else if (tag === 18) obj.mediaUploadRichQuickReplies = pbf.readVarint();
    else if (tag === 19) obj.vnameV2 = pbf.readVarint();
    else if (tag === 20) obj.videoPlaybackUrl = pbf.readVarint();
    else if (tag === 21) obj.statusRanking = pbf.readVarint();
    else if (tag === 22) obj.voipIndividualVideo = pbf.readVarint();
    else if (tag === 23) obj.thirdPartyStickers = pbf.readVarint();
    else if (tag === 24) obj.frequentlyForwardedSetting = pbf.readVarint();
    else if (tag === 25) obj.groupsV4JoinPermission = pbf.readVarint();
    else if (tag === 26) obj.recentStickers = pbf.readVarint();
    else if (tag === 27) obj.catalog = pbf.readVarint();
    else if (tag === 28) obj.starredStickers = pbf.readVarint();
    else if (tag === 29) obj.voipGroupCall = pbf.readVarint();
    else if (tag === 30) obj.templateMessage = pbf.readVarint();
    else if (tag === 31) obj.templateMessageInteractivity = pbf.readVarint();
    else if (tag === 32) obj.ephemeralMessages = pbf.readVarint();
    else if (tag === 33) obj.e2ENotificationSync = pbf.readVarint();
    else if (tag === 34) obj.recentStickersV2 = pbf.readVarint();
    else if (tag === 36) obj.recentStickersV3 = pbf.readVarint();
    else if (tag === 37) obj.userNotice = pbf.readVarint();
    else if (tag === 39) obj.support = pbf.readVarint();
    else if (tag === 40) obj.groupUiiCleanup = pbf.readVarint();
    else if (tag === 41) obj.groupDogfoodingInternalOnly = pbf.readVarint();
    else if (tag === 42) obj.settingsSync = pbf.readVarint();
    else if (tag === 43) obj.archiveV2 = pbf.readVarint();
    else if (tag === 44) obj.ephemeralAllowGroupMembers = pbf.readVarint();
    else if (tag === 45) obj.ephemeral24HDuration = pbf.readVarint();
    else if (tag === 46) obj.mdForceUpgrade = pbf.readVarint();
    else if (tag === 47) obj.disappearingMode = pbf.readVarint();
    else if (tag === 48) obj.externalMdOptInAvailable = pbf.readVarint();
    else if (tag === 49) obj.noDeleteMessageTimeLimit = pbf.readVarint();
};
WebFeatures.write = function (obj, pbf) {
    if (obj.labelsDisplay) pbf.writeVarintField(1, obj.labelsDisplay);
    if (obj.voipIndividualOutgoing) pbf.writeVarintField(2, obj.voipIndividualOutgoing);
    if (obj.groupsV3) pbf.writeVarintField(3, obj.groupsV3);
    if (obj.groupsV3Create) pbf.writeVarintField(4, obj.groupsV3Create);
    if (obj.changeNumberV2) pbf.writeVarintField(5, obj.changeNumberV2);
    if (obj.queryStatusV3Thumbnail) pbf.writeVarintField(6, obj.queryStatusV3Thumbnail);
    if (obj.liveLocations) pbf.writeVarintField(7, obj.liveLocations);
    if (obj.queryVname) pbf.writeVarintField(8, obj.queryVname);
    if (obj.voipIndividualIncoming) pbf.writeVarintField(9, obj.voipIndividualIncoming);
    if (obj.quickRepliesQuery) pbf.writeVarintField(10, obj.quickRepliesQuery);
    if (obj.payments) pbf.writeVarintField(11, obj.payments);
    if (obj.stickerPackQuery) pbf.writeVarintField(12, obj.stickerPackQuery);
    if (obj.liveLocationsFinal) pbf.writeVarintField(13, obj.liveLocationsFinal);
    if (obj.labelsEdit) pbf.writeVarintField(14, obj.labelsEdit);
    if (obj.mediaUpload) pbf.writeVarintField(15, obj.mediaUpload);
    if (obj.mediaUploadRichQuickReplies) pbf.writeVarintField(18, obj.mediaUploadRichQuickReplies);
    if (obj.vnameV2) pbf.writeVarintField(19, obj.vnameV2);
    if (obj.videoPlaybackUrl) pbf.writeVarintField(20, obj.videoPlaybackUrl);
    if (obj.statusRanking) pbf.writeVarintField(21, obj.statusRanking);
    if (obj.voipIndividualVideo) pbf.writeVarintField(22, obj.voipIndividualVideo);
    if (obj.thirdPartyStickers) pbf.writeVarintField(23, obj.thirdPartyStickers);
    if (obj.frequentlyForwardedSetting) pbf.writeVarintField(24, obj.frequentlyForwardedSetting);
    if (obj.groupsV4JoinPermission) pbf.writeVarintField(25, obj.groupsV4JoinPermission);
    if (obj.recentStickers) pbf.writeVarintField(26, obj.recentStickers);
    if (obj.catalog) pbf.writeVarintField(27, obj.catalog);
    if (obj.starredStickers) pbf.writeVarintField(28, obj.starredStickers);
    if (obj.voipGroupCall) pbf.writeVarintField(29, obj.voipGroupCall);
    if (obj.templateMessage) pbf.writeVarintField(30, obj.templateMessage);
    if (obj.templateMessageInteractivity) pbf.writeVarintField(31, obj.templateMessageInteractivity);
    if (obj.ephemeralMessages) pbf.writeVarintField(32, obj.ephemeralMessages);
    if (obj.e2ENotificationSync) pbf.writeVarintField(33, obj.e2ENotificationSync);
    if (obj.recentStickersV2) pbf.writeVarintField(34, obj.recentStickersV2);
    if (obj.recentStickersV3) pbf.writeVarintField(36, obj.recentStickersV3);
    if (obj.userNotice) pbf.writeVarintField(37, obj.userNotice);
    if (obj.support) pbf.writeVarintField(39, obj.support);
    if (obj.groupUiiCleanup) pbf.writeVarintField(40, obj.groupUiiCleanup);
    if (obj.groupDogfoodingInternalOnly) pbf.writeVarintField(41, obj.groupDogfoodingInternalOnly);
    if (obj.settingsSync) pbf.writeVarintField(42, obj.settingsSync);
    if (obj.archiveV2) pbf.writeVarintField(43, obj.archiveV2);
    if (obj.ephemeralAllowGroupMembers) pbf.writeVarintField(44, obj.ephemeralAllowGroupMembers);
    if (obj.ephemeral24HDuration) pbf.writeVarintField(45, obj.ephemeral24HDuration);
    if (obj.mdForceUpgrade) pbf.writeVarintField(46, obj.mdForceUpgrade);
    if (obj.disappearingMode) pbf.writeVarintField(47, obj.disappearingMode);
    if (obj.externalMdOptInAvailable) pbf.writeVarintField(48, obj.externalMdOptInAvailable);
    if (obj.noDeleteMessageTimeLimit) pbf.writeVarintField(49, obj.noDeleteMessageTimeLimit);
};

WebFeatures.WebFeaturesFlag = {
    "NOT_STARTED": {
        "value": 0,
        "options": {}
    },
    "FORCE_UPGRADE": {
        "value": 1,
        "options": {}
    },
    "DEVELOPMENT": {
        "value": 2,
        "options": {}
    },
    "PRODUCTION": {
        "value": 3,
        "options": {}
    }
};

// NotificationMessageInfo ========================================

var NotificationMessageInfo = self.NotificationMessageInfo = {};

NotificationMessageInfo.read = function (pbf, end) {
    return pbf.readFields(NotificationMessageInfo._readField, {key: null, message: null, messageTimestamp: 0, participant: ""}, end);
};
NotificationMessageInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.message = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.messageTimestamp = pbf.readVarint();
    else if (tag === 4) obj.participant = pbf.readString();
};
NotificationMessageInfo.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.message) pbf.writeMessage(2, Message.write, obj.message);
    if (obj.messageTimestamp) pbf.writeVarintField(3, obj.messageTimestamp);
    if (obj.participant) pbf.writeStringField(4, obj.participant);
};

// WebNotificationsInfo ========================================

var WebNotificationsInfo = self.WebNotificationsInfo = {};

WebNotificationsInfo.read = function (pbf, end) {
    return pbf.readFields(WebNotificationsInfo._readField, {timestamp: 0, unreadChats: 0, notifyMessageCount: 0, notifyMessages: []}, end);
};
WebNotificationsInfo._readField = function (tag, obj, pbf) {
    if (tag === 2) obj.timestamp = pbf.readVarint();
    else if (tag === 3) obj.unreadChats = pbf.readVarint();
    else if (tag === 4) obj.notifyMessageCount = pbf.readVarint();
    else if (tag === 5) obj.notifyMessages.push(WebMessageInfo.read(pbf, pbf.readVarint() + pbf.pos));
};
WebNotificationsInfo.write = function (obj, pbf) {
    if (obj.timestamp) pbf.writeVarintField(2, obj.timestamp);
    if (obj.unreadChats) pbf.writeVarintField(3, obj.unreadChats);
    if (obj.notifyMessageCount) pbf.writeVarintField(4, obj.notifyMessageCount);
    if (obj.notifyMessages) for (var i = 0; i < obj.notifyMessages.length; i++) pbf.writeMessage(5, WebMessageInfo.write, obj.notifyMessages[i]);
};

// PaymentInfo ========================================

var PaymentInfo = self.PaymentInfo = {};

PaymentInfo.read = function (pbf, end) {
    return pbf.readFields(PaymentInfo._readField, {currencyDeprecated: 0, amount1000: 0, receiverJid: "", status: 0, transactionTimestamp: 0, requestMessageKey: null, expiryTimestamp: 0, futureproofed: false, currency: "", txnStatus: 0, useNoviFiatFormat: false, primaryAmount: null, exchangeAmount: null}, end);
};
PaymentInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.currencyDeprecated = pbf.readVarint();
    else if (tag === 2) obj.amount1000 = pbf.readVarint();
    else if (tag === 3) obj.receiverJid = pbf.readString();
    else if (tag === 4) obj.status = pbf.readVarint();
    else if (tag === 5) obj.transactionTimestamp = pbf.readVarint();
    else if (tag === 6) obj.requestMessageKey = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.expiryTimestamp = pbf.readVarint();
    else if (tag === 8) obj.futureproofed = pbf.readBoolean();
    else if (tag === 9) obj.currency = pbf.readString();
    else if (tag === 10) obj.txnStatus = pbf.readVarint();
    else if (tag === 11) obj.useNoviFiatFormat = pbf.readBoolean();
    else if (tag === 12) obj.primaryAmount = Money.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 13) obj.exchangeAmount = Money.read(pbf, pbf.readVarint() + pbf.pos);
};
PaymentInfo.write = function (obj, pbf) {
    if (obj.currencyDeprecated) pbf.writeVarintField(1, obj.currencyDeprecated);
    if (obj.amount1000) pbf.writeVarintField(2, obj.amount1000);
    if (obj.receiverJid) pbf.writeStringField(3, obj.receiverJid);
    if (obj.status) pbf.writeVarintField(4, obj.status);
    if (obj.transactionTimestamp) pbf.writeVarintField(5, obj.transactionTimestamp);
    if (obj.requestMessageKey) pbf.writeMessage(6, MessageKey.write, obj.requestMessageKey);
    if (obj.expiryTimestamp) pbf.writeVarintField(7, obj.expiryTimestamp);
    if (obj.futureproofed) pbf.writeBooleanField(8, obj.futureproofed);
    if (obj.currency) pbf.writeStringField(9, obj.currency);
    if (obj.txnStatus) pbf.writeVarintField(10, obj.txnStatus);
    if (obj.useNoviFiatFormat) pbf.writeBooleanField(11, obj.useNoviFiatFormat);
    if (obj.primaryAmount) pbf.writeMessage(12, Money.write, obj.primaryAmount);
    if (obj.exchangeAmount) pbf.writeMessage(13, Money.write, obj.exchangeAmount);
};

PaymentInfo.PaymentInfoCurrency = {
    "UNKNOWN_CURRENCY": {
        "value": 0,
        "options": {}
    },
    "INR": {
        "value": 1,
        "options": {}
    }
};

PaymentInfo.PaymentInfoStatus = {
    "UNKNOWN_STATUS": {
        "value": 0,
        "options": {}
    },
    "PROCESSING": {
        "value": 1,
        "options": {}
    },
    "SENT": {
        "value": 2,
        "options": {}
    },
    "NEED_TO_ACCEPT": {
        "value": 3,
        "options": {}
    },
    "COMPLETE": {
        "value": 4,
        "options": {}
    },
    "COULD_NOT_COMPLETE": {
        "value": 5,
        "options": {}
    },
    "REFUNDED": {
        "value": 6,
        "options": {}
    },
    "EXPIRED": {
        "value": 7,
        "options": {}
    },
    "REJECTED": {
        "value": 8,
        "options": {}
    },
    "CANCELLED": {
        "value": 9,
        "options": {}
    },
    "WAITING_FOR_PAYER": {
        "value": 10,
        "options": {}
    },
    "WAITING": {
        "value": 11,
        "options": {}
    }
};

PaymentInfo.PaymentInfoTxnStatus = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "PENDING_SETUP": {
        "value": 1,
        "options": {}
    },
    "PENDING_RECEIVER_SETUP": {
        "value": 2,
        "options": {}
    },
    "INIT": {
        "value": 3,
        "options": {}
    },
    "SUCCESS": {
        "value": 4,
        "options": {}
    },
    "COMPLETED": {
        "value": 5,
        "options": {}
    },
    "FAILED": {
        "value": 6,
        "options": {}
    },
    "FAILED_RISK": {
        "value": 7,
        "options": {}
    },
    "FAILED_PROCESSING": {
        "value": 8,
        "options": {}
    },
    "FAILED_RECEIVER_PROCESSING": {
        "value": 9,
        "options": {}
    },
    "FAILED_DA": {
        "value": 10,
        "options": {}
    },
    "FAILED_DA_FINAL": {
        "value": 11,
        "options": {}
    },
    "REFUNDED_TXN": {
        "value": 12,
        "options": {}
    },
    "REFUND_FAILED": {
        "value": 13,
        "options": {}
    },
    "REFUND_FAILED_PROCESSING": {
        "value": 14,
        "options": {}
    },
    "REFUND_FAILED_DA": {
        "value": 15,
        "options": {}
    },
    "EXPIRED_TXN": {
        "value": 16,
        "options": {}
    },
    "AUTH_CANCELED": {
        "value": 17,
        "options": {}
    },
    "AUTH_CANCEL_FAILED_PROCESSING": {
        "value": 18,
        "options": {}
    },
    "AUTH_CANCEL_FAILED": {
        "value": 19,
        "options": {}
    },
    "COLLECT_INIT": {
        "value": 20,
        "options": {}
    },
    "COLLECT_SUCCESS": {
        "value": 21,
        "options": {}
    },
    "COLLECT_FAILED": {
        "value": 22,
        "options": {}
    },
    "COLLECT_FAILED_RISK": {
        "value": 23,
        "options": {}
    },
    "COLLECT_REJECTED": {
        "value": 24,
        "options": {}
    },
    "COLLECT_EXPIRED": {
        "value": 25,
        "options": {}
    },
    "COLLECT_CANCELED": {
        "value": 26,
        "options": {}
    },
    "COLLECT_CANCELLING": {
        "value": 27,
        "options": {}
    },
    "IN_REVIEW": {
        "value": 28,
        "options": {}
    }
};

// WebMessageInfo ========================================

var WebMessageInfo = self.WebMessageInfo = {};

WebMessageInfo.read = function (pbf, end) {
    return pbf.readFields(WebMessageInfo._readField, {key: null, message: null, messageTimestamp: 0, status: 0, participant: "", messageC2STimestamp: 0, ignore: false, starred: false, broadcast: false, pushName: "", mediaCiphertextSha256: null, multicast: false, urlText: false, urlNumber: false, messageStubType: 0, clearMedia: false, messageStubParameters: [], duration: 0, labels: [], paymentInfo: null, finalLiveLocation: null, quotedPaymentInfo: null, ephemeralStartTimestamp: 0, ephemeralDuration: 0, ephemeralOffToOn: false, ephemeralOutOfSync: false, bizPrivacyStatus: 0, verifiedBizName: "", mediaData: null, photoChange: null, userReceipt: [], reactions: [], quotedStickerData: null, futureproofData: null, statusPsa: null}, end);
};
WebMessageInfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = MessageKey.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.message = Message.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.messageTimestamp = pbf.readVarint();
    else if (tag === 4) obj.status = pbf.readVarint();
    else if (tag === 5) obj.participant = pbf.readString();
    else if (tag === 6) obj.messageC2STimestamp = pbf.readVarint();
    else if (tag === 16) obj.ignore = pbf.readBoolean();
    else if (tag === 17) obj.starred = pbf.readBoolean();
    else if (tag === 18) obj.broadcast = pbf.readBoolean();
    else if (tag === 19) obj.pushName = pbf.readString();
    else if (tag === 20) obj.mediaCiphertextSha256 = pbf.readBytes();
    else if (tag === 21) obj.multicast = pbf.readBoolean();
    else if (tag === 22) obj.urlText = pbf.readBoolean();
    else if (tag === 23) obj.urlNumber = pbf.readBoolean();
    else if (tag === 24) obj.messageStubType = pbf.readVarint();
    else if (tag === 25) obj.clearMedia = pbf.readBoolean();
    else if (tag === 26) obj.messageStubParameters.push(pbf.readString());
    else if (tag === 27) obj.duration = pbf.readVarint();
    else if (tag === 28) obj.labels.push(pbf.readString());
    else if (tag === 29) obj.paymentInfo = PaymentInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 30) obj.finalLiveLocation = LiveLocationMessage.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 31) obj.quotedPaymentInfo = PaymentInfo.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 32) obj.ephemeralStartTimestamp = pbf.readVarint();
    else if (tag === 33) obj.ephemeralDuration = pbf.readVarint();
    else if (tag === 34) obj.ephemeralOffToOn = pbf.readBoolean();
    else if (tag === 35) obj.ephemeralOutOfSync = pbf.readBoolean();
    else if (tag === 36) obj.bizPrivacyStatus = pbf.readVarint();
    else if (tag === 37) obj.verifiedBizName = pbf.readString();
    else if (tag === 38) obj.mediaData = MediaData.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 39) obj.photoChange = PhotoChange.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 40) obj.userReceipt.push(UserReceipt.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 41) obj.reactions.push(Reaction.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 42) obj.quotedStickerData = MediaData.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 43) obj.futureproofData = pbf.readBytes();
    else if (tag === 44) obj.statusPsa = StatusPSA.read(pbf, pbf.readVarint() + pbf.pos);
};
WebMessageInfo.write = function (obj, pbf) {
    if (obj.key) pbf.writeMessage(1, MessageKey.write, obj.key);
    if (obj.message) pbf.writeMessage(2, Message.write, obj.message);
    if (obj.messageTimestamp) pbf.writeVarintField(3, obj.messageTimestamp);
    if (obj.status) pbf.writeVarintField(4, obj.status);
    if (obj.participant) pbf.writeStringField(5, obj.participant);
    if (obj.messageC2STimestamp) pbf.writeVarintField(6, obj.messageC2STimestamp);
    if (obj.ignore) pbf.writeBooleanField(16, obj.ignore);
    if (obj.starred) pbf.writeBooleanField(17, obj.starred);
    if (obj.broadcast) pbf.writeBooleanField(18, obj.broadcast);
    if (obj.pushName) pbf.writeStringField(19, obj.pushName);
    if (obj.mediaCiphertextSha256) pbf.writeBytesField(20, obj.mediaCiphertextSha256);
    if (obj.multicast) pbf.writeBooleanField(21, obj.multicast);
    if (obj.urlText) pbf.writeBooleanField(22, obj.urlText);
    if (obj.urlNumber) pbf.writeBooleanField(23, obj.urlNumber);
    if (obj.messageStubType) pbf.writeVarintField(24, obj.messageStubType);
    if (obj.clearMedia) pbf.writeBooleanField(25, obj.clearMedia);
    if (obj.messageStubParameters) for (var i = 0; i < obj.messageStubParameters.length; i++) pbf.writeStringField(26, obj.messageStubParameters[i]);
    if (obj.duration) pbf.writeVarintField(27, obj.duration);
    if (obj.labels) for (i = 0; i < obj.labels.length; i++) pbf.writeStringField(28, obj.labels[i]);
    if (obj.paymentInfo) pbf.writeMessage(29, PaymentInfo.write, obj.paymentInfo);
    if (obj.finalLiveLocation) pbf.writeMessage(30, LiveLocationMessage.write, obj.finalLiveLocation);
    if (obj.quotedPaymentInfo) pbf.writeMessage(31, PaymentInfo.write, obj.quotedPaymentInfo);
    if (obj.ephemeralStartTimestamp) pbf.writeVarintField(32, obj.ephemeralStartTimestamp);
    if (obj.ephemeralDuration) pbf.writeVarintField(33, obj.ephemeralDuration);
    if (obj.ephemeralOffToOn) pbf.writeBooleanField(34, obj.ephemeralOffToOn);
    if (obj.ephemeralOutOfSync) pbf.writeBooleanField(35, obj.ephemeralOutOfSync);
    if (obj.bizPrivacyStatus) pbf.writeVarintField(36, obj.bizPrivacyStatus);
    if (obj.verifiedBizName) pbf.writeStringField(37, obj.verifiedBizName);
    if (obj.mediaData) pbf.writeMessage(38, MediaData.write, obj.mediaData);
    if (obj.photoChange) pbf.writeMessage(39, PhotoChange.write, obj.photoChange);
    if (obj.userReceipt) for (i = 0; i < obj.userReceipt.length; i++) pbf.writeMessage(40, UserReceipt.write, obj.userReceipt[i]);
    if (obj.reactions) for (i = 0; i < obj.reactions.length; i++) pbf.writeMessage(41, Reaction.write, obj.reactions[i]);
    if (obj.quotedStickerData) pbf.writeMessage(42, MediaData.write, obj.quotedStickerData);
    if (obj.futureproofData) pbf.writeBytesField(43, obj.futureproofData);
    if (obj.statusPsa) pbf.writeMessage(44, StatusPSA.write, obj.statusPsa);
};

WebMessageInfo.WebMessageInfoStatus = {
    "ERROR": {
        "value": 0,
        "options": {}
    },
    "PENDING": {
        "value": 1,
        "options": {}
    },
    "SERVER_ACK": {
        "value": 2,
        "options": {}
    },
    "DELIVERY_ACK": {
        "value": 3,
        "options": {}
    },
    "READ": {
        "value": 4,
        "options": {}
    },
    "PLAYED": {
        "value": 5,
        "options": {}
    }
};

WebMessageInfo.WebMessageInfoStubType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "REVOKE": {
        "value": 1,
        "options": {}
    },
    "CIPHERTEXT": {
        "value": 2,
        "options": {}
    },
    "FUTUREPROOF": {
        "value": 3,
        "options": {}
    },
    "NON_VERIFIED_TRANSITION": {
        "value": 4,
        "options": {}
    },
    "UNVERIFIED_TRANSITION": {
        "value": 5,
        "options": {}
    },
    "VERIFIED_TRANSITION": {
        "value": 6,
        "options": {}
    },
    "VERIFIED_LOW_UNKNOWN": {
        "value": 7,
        "options": {}
    },
    "VERIFIED_HIGH": {
        "value": 8,
        "options": {}
    },
    "VERIFIED_INITIAL_UNKNOWN": {
        "value": 9,
        "options": {}
    },
    "VERIFIED_INITIAL_LOW": {
        "value": 10,
        "options": {}
    },
    "VERIFIED_INITIAL_HIGH": {
        "value": 11,
        "options": {}
    },
    "VERIFIED_TRANSITION_ANY_TO_NONE": {
        "value": 12,
        "options": {}
    },
    "VERIFIED_TRANSITION_ANY_TO_HIGH": {
        "value": 13,
        "options": {}
    },
    "VERIFIED_TRANSITION_HIGH_TO_LOW": {
        "value": 14,
        "options": {}
    },
    "VERIFIED_TRANSITION_HIGH_TO_UNKNOWN": {
        "value": 15,
        "options": {}
    },
    "VERIFIED_TRANSITION_UNKNOWN_TO_LOW": {
        "value": 16,
        "options": {}
    },
    "VERIFIED_TRANSITION_LOW_TO_UNKNOWN": {
        "value": 17,
        "options": {}
    },
    "VERIFIED_TRANSITION_NONE_TO_LOW": {
        "value": 18,
        "options": {}
    },
    "VERIFIED_TRANSITION_NONE_TO_UNKNOWN": {
        "value": 19,
        "options": {}
    },
    "GROUP_CREATE": {
        "value": 20,
        "options": {}
    },
    "GROUP_CHANGE_SUBJECT": {
        "value": 21,
        "options": {}
    },
    "GROUP_CHANGE_ICON": {
        "value": 22,
        "options": {}
    },
    "GROUP_CHANGE_INVITE_LINK": {
        "value": 23,
        "options": {}
    },
    "GROUP_CHANGE_DESCRIPTION": {
        "value": 24,
        "options": {}
    },
    "GROUP_CHANGE_RESTRICT": {
        "value": 25,
        "options": {}
    },
    "GROUP_CHANGE_ANNOUNCE": {
        "value": 26,
        "options": {}
    },
    "GROUP_PARTICIPANT_ADD": {
        "value": 27,
        "options": {}
    },
    "GROUP_PARTICIPANT_REMOVE": {
        "value": 28,
        "options": {}
    },
    "GROUP_PARTICIPANT_PROMOTE": {
        "value": 29,
        "options": {}
    },
    "GROUP_PARTICIPANT_DEMOTE": {
        "value": 30,
        "options": {}
    },
    "GROUP_PARTICIPANT_INVITE": {
        "value": 31,
        "options": {}
    },
    "GROUP_PARTICIPANT_LEAVE": {
        "value": 32,
        "options": {}
    },
    "GROUP_PARTICIPANT_CHANGE_NUMBER": {
        "value": 33,
        "options": {}
    },
    "BROADCAST_CREATE": {
        "value": 34,
        "options": {}
    },
    "BROADCAST_ADD": {
        "value": 35,
        "options": {}
    },
    "BROADCAST_REMOVE": {
        "value": 36,
        "options": {}
    },
    "GENERIC_NOTIFICATION": {
        "value": 37,
        "options": {}
    },
    "E2E_IDENTITY_CHANGED": {
        "value": 38,
        "options": {}
    },
    "E2E_ENCRYPTED": {
        "value": 39,
        "options": {}
    },
    "CALL_MISSED_VOICE": {
        "value": 40,
        "options": {}
    },
    "CALL_MISSED_VIDEO": {
        "value": 41,
        "options": {}
    },
    "INDIVIDUAL_CHANGE_NUMBER": {
        "value": 42,
        "options": {}
    },
    "GROUP_DELETE": {
        "value": 43,
        "options": {}
    },
    "GROUP_ANNOUNCE_MODE_MESSAGE_BOUNCE": {
        "value": 44,
        "options": {}
    },
    "CALL_MISSED_GROUP_VOICE": {
        "value": 45,
        "options": {}
    },
    "CALL_MISSED_GROUP_VIDEO": {
        "value": 46,
        "options": {}
    },
    "PAYMENT_CIPHERTEXT": {
        "value": 47,
        "options": {}
    },
    "PAYMENT_FUTUREPROOF": {
        "value": 48,
        "options": {}
    },
    "PAYMENT_TRANSACTION_STATUS_UPDATE_FAILED": {
        "value": 49,
        "options": {}
    },
    "PAYMENT_TRANSACTION_STATUS_UPDATE_REFUNDED": {
        "value": 50,
        "options": {}
    },
    "PAYMENT_TRANSACTION_STATUS_UPDATE_REFUND_FAILED": {
        "value": 51,
        "options": {}
    },
    "PAYMENT_TRANSACTION_STATUS_RECEIVER_PENDING_SETUP": {
        "value": 52,
        "options": {}
    },
    "PAYMENT_TRANSACTION_STATUS_RECEIVER_SUCCESS_AFTER_HICCUP": {
        "value": 53,
        "options": {}
    },
    "PAYMENT_ACTION_ACCOUNT_SETUP_REMINDER": {
        "value": 54,
        "options": {}
    },
    "PAYMENT_ACTION_SEND_PAYMENT_REMINDER": {
        "value": 55,
        "options": {}
    },
    "PAYMENT_ACTION_SEND_PAYMENT_INVITATION": {
        "value": 56,
        "options": {}
    },
    "PAYMENT_ACTION_REQUEST_DECLINED": {
        "value": 57,
        "options": {}
    },
    "PAYMENT_ACTION_REQUEST_EXPIRED": {
        "value": 58,
        "options": {}
    },
    "PAYMENT_ACTION_REQUEST_CANCELLED": {
        "value": 59,
        "options": {}
    },
    "BIZ_VERIFIED_TRANSITION_TOP_TO_BOTTOM": {
        "value": 60,
        "options": {}
    },
    "BIZ_VERIFIED_TRANSITION_BOTTOM_TO_TOP": {
        "value": 61,
        "options": {}
    },
    "BIZ_INTRO_TOP": {
        "value": 62,
        "options": {}
    },
    "BIZ_INTRO_BOTTOM": {
        "value": 63,
        "options": {}
    },
    "BIZ_NAME_CHANGE": {
        "value": 64,
        "options": {}
    },
    "BIZ_MOVE_TO_CONSUMER_APP": {
        "value": 65,
        "options": {}
    },
    "BIZ_TWO_TIER_MIGRATION_TOP": {
        "value": 66,
        "options": {}
    },
    "BIZ_TWO_TIER_MIGRATION_BOTTOM": {
        "value": 67,
        "options": {}
    },
    "OVERSIZED": {
        "value": 68,
        "options": {}
    },
    "GROUP_CHANGE_NO_FREQUENTLY_FORWARDED": {
        "value": 69,
        "options": {}
    },
    "GROUP_V4_ADD_INVITE_SENT": {
        "value": 70,
        "options": {}
    },
    "GROUP_PARTICIPANT_ADD_REQUEST_JOIN": {
        "value": 71,
        "options": {}
    },
    "CHANGE_EPHEMERAL_SETTING": {
        "value": 72,
        "options": {}
    },
    "E2E_DEVICE_CHANGED": {
        "value": 73,
        "options": {}
    },
    "VIEWED_ONCE": {
        "value": 74,
        "options": {}
    },
    "E2E_ENCRYPTED_NOW": {
        "value": 75,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_TO_BSP_PREMISE": {
        "value": 76,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_TO_SELF_FB": {
        "value": 77,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_TO_SELF_PREMISE": {
        "value": 78,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_UNVERIFIED": {
        "value": 79,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_UNVERIFIED_TO_SELF_PREMISE_VERIFIED": {
        "value": 80,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_VERIFIED": {
        "value": 81,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_VERIFIED_TO_SELF_PREMISE_UNVERIFIED": {
        "value": 82,
        "options": {}
    },
    "BLUE_MSG_BSP_PREMISE_TO_SELF_PREMISE": {
        "value": 83,
        "options": {}
    },
    "BLUE_MSG_BSP_PREMISE_UNVERIFIED": {
        "value": 84,
        "options": {}
    },
    "BLUE_MSG_BSP_PREMISE_UNVERIFIED_TO_SELF_PREMISE_VERIFIED": {
        "value": 85,
        "options": {}
    },
    "BLUE_MSG_BSP_PREMISE_VERIFIED": {
        "value": 86,
        "options": {}
    },
    "BLUE_MSG_BSP_PREMISE_VERIFIED_TO_SELF_PREMISE_UNVERIFIED": {
        "value": 87,
        "options": {}
    },
    "BLUE_MSG_CONSUMER_TO_BSP_FB_UNVERIFIED": {
        "value": 88,
        "options": {}
    },
    "BLUE_MSG_CONSUMER_TO_BSP_PREMISE_UNVERIFIED": {
        "value": 89,
        "options": {}
    },
    "BLUE_MSG_CONSUMER_TO_SELF_FB_UNVERIFIED": {
        "value": 90,
        "options": {}
    },
    "BLUE_MSG_CONSUMER_TO_SELF_PREMISE_UNVERIFIED": {
        "value": 91,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_TO_BSP_PREMISE": {
        "value": 92,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_TO_SELF_PREMISE": {
        "value": 93,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_UNVERIFIED": {
        "value": 94,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_UNVERIFIED_TO_SELF_PREMISE_VERIFIED": {
        "value": 95,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_VERIFIED": {
        "value": 96,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_VERIFIED_TO_SELF_PREMISE_UNVERIFIED": {
        "value": 97,
        "options": {}
    },
    "BLUE_MSG_SELF_PREMISE_TO_BSP_PREMISE": {
        "value": 98,
        "options": {}
    },
    "BLUE_MSG_SELF_PREMISE_UNVERIFIED": {
        "value": 99,
        "options": {}
    },
    "BLUE_MSG_SELF_PREMISE_VERIFIED": {
        "value": 100,
        "options": {}
    },
    "BLUE_MSG_TO_BSP_FB": {
        "value": 101,
        "options": {}
    },
    "BLUE_MSG_TO_CONSUMER": {
        "value": 102,
        "options": {}
    },
    "BLUE_MSG_TO_SELF_FB": {
        "value": 103,
        "options": {}
    },
    "BLUE_MSG_UNVERIFIED_TO_BSP_FB_VERIFIED": {
        "value": 104,
        "options": {}
    },
    "BLUE_MSG_UNVERIFIED_TO_BSP_PREMISE_VERIFIED": {
        "value": 105,
        "options": {}
    },
    "BLUE_MSG_UNVERIFIED_TO_SELF_FB_VERIFIED": {
        "value": 106,
        "options": {}
    },
    "BLUE_MSG_UNVERIFIED_TO_VERIFIED": {
        "value": 107,
        "options": {}
    },
    "BLUE_MSG_VERIFIED_TO_BSP_FB_UNVERIFIED": {
        "value": 108,
        "options": {}
    },
    "BLUE_MSG_VERIFIED_TO_BSP_PREMISE_UNVERIFIED": {
        "value": 109,
        "options": {}
    },
    "BLUE_MSG_VERIFIED_TO_SELF_FB_UNVERIFIED": {
        "value": 110,
        "options": {}
    },
    "BLUE_MSG_VERIFIED_TO_UNVERIFIED": {
        "value": 111,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_UNVERIFIED_TO_BSP_PREMISE_VERIFIED": {
        "value": 112,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_UNVERIFIED_TO_SELF_FB_VERIFIED": {
        "value": 113,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_VERIFIED_TO_BSP_PREMISE_UNVERIFIED": {
        "value": 114,
        "options": {}
    },
    "BLUE_MSG_BSP_FB_VERIFIED_TO_SELF_FB_UNVERIFIED": {
        "value": 115,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_UNVERIFIED_TO_BSP_PREMISE_VERIFIED": {
        "value": 116,
        "options": {}
    },
    "BLUE_MSG_SELF_FB_VERIFIED_TO_BSP_PREMISE_UNVERIFIED": {
        "value": 117,
        "options": {}
    },
    "E2E_IDENTITY_UNAVAILABLE": {
        "value": 118,
        "options": {}
    },
    "GROUP_CREATING": {
        "value": 119,
        "options": {}
    },
    "GROUP_CREATE_FAILED": {
        "value": 120,
        "options": {}
    },
    "GROUP_BOUNCED": {
        "value": 121,
        "options": {}
    },
    "BLOCK_CONTACT": {
        "value": 122,
        "options": {}
    },
    "EPHEMERAL_SETTING_NOT_APPLIED": {
        "value": 123,
        "options": {}
    },
    "SYNC_FAILED": {
        "value": 124,
        "options": {}
    },
    "SYNCING": {
        "value": 125,
        "options": {}
    },
    "BIZ_PRIVACY_MODE_INIT_FB": {
        "value": 126,
        "options": {}
    },
    "BIZ_PRIVACY_MODE_INIT_BSP": {
        "value": 127,
        "options": {}
    },
    "BIZ_PRIVACY_MODE_TO_FB": {
        "value": 128,
        "options": {}
    },
    "BIZ_PRIVACY_MODE_TO_BSP": {
        "value": 129,
        "options": {}
    },
    "DISAPPEARING_MODE": {
        "value": 130,
        "options": {}
    },
    "E2E_DEVICE_FETCH_FAILED": {
        "value": 131,
        "options": {}
    },
    "ADMIN_REVOKE": {
        "value": 132,
        "options": {}
    },
    "GROUP_INVITE_LINK_GROWTH_LOCKED": {
        "value": 133,
        "options": {}
    }
};

WebMessageInfo.WebMessageInfoBizPrivacyStatus = {
    "E2EE": {
        "value": 0,
        "options": {}
    },
    "FB": {
        "value": 2,
        "options": {}
    },
    "BSP": {
        "value": 1,
        "options": {}
    },
    "BSP_AND_FB": {
        "value": 3,
        "options": {}
    }
};
